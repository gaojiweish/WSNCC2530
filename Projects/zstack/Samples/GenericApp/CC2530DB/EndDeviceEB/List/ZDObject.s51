///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V9.10.1.2146 for 8051               02/Sep/2016  18:31:05
// Copyright 2004-2014 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Components\stack\zdo\ZDObject.c
//    Command line       =  
//        -f "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg"
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
//        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f "C:\Texas
//        Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
//        (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440) "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Components\stack\zdo\ZDObject.c" -D NWK_AUTO_POLL -D ZTOOL_P1
//        -D MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC -D HAL_UART=TRUE -D
//        HAL_UART_ISR=1 -D HAL_UART_DMA=2 -D xLCD_SUPPORTED=DEBUG -D
//        xPOWER_SAVING -lC "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\EndDeviceEB\List\"
//        -lA "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\EndDeviceEB\List\"
//        --diag_suppress Pe001,Pa010 -o "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\EndDeviceEB\Obj\"
//        -e --no_code_motion --debug --core=plain --dptr=16,1
//        --data_model=large --code_model=banked
//        --calling_convention=xdata_reentrant --place_constants=data_rom
//        --nr_virtual_regs 16 -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\" -I "C:\Texas
//        Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\Source\" -I
//        "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\ZMain\TI2530DB\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\hal\include\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\include\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\mt\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\osal\include\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\services\saddr\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\services\sdata\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\af\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\sec\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\sys\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\zmac\"
//        -I "C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
//        -Ohz --require_prototypes
//    List file          =  
//        C:\Texas Instruments\Z-Stack Mesh
//        v1.0.0\Projects\zstack\Samples\GenericApp\CC2530DB\EndDeviceEB\List\ZDObject.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME ZDObject

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V5
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V8
        EXTERN ?V9
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?V12
        EXTERN ?V13
        EXTERN ?V14
        EXTERN ?V15
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_MOV_TO_X
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?XLOAD_R2345
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP100_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN ?XSTACK_DISP102_8
        EXTERN ?XSTORE_R0123
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC ??NLME_PermitJoiningTimeout?relay
        FUNCTION ??NLME_PermitJoiningTimeout?relay,0203H
        PUBLIC ??ZDO_AnyClusterMatches?relay
        FUNCTION ??ZDO_AnyClusterMatches?relay,0203H
        PUBLIC ??ZDO_BuildSimpleDescBuf?relay
        FUNCTION ??ZDO_BuildSimpleDescBuf?relay,0203H
        PUBLIC ??ZDO_ConvertOTAClusters?relay
        FUNCTION ??ZDO_ConvertOTAClusters?relay,0203H
        PUBLIC ??ZDO_EndDeviceTimeoutCB?relay
        FUNCTION ??ZDO_EndDeviceTimeoutCB?relay,0203H
        PUBLIC ??ZDO_Init?relay
        FUNCTION ??ZDO_Init?relay,0203H
        PUBLIC ??ZDO_ParseAddrRsp?relay
        FUNCTION ??ZDO_ParseAddrRsp?relay,0203H
        PUBLIC ??ZDO_ParseBindUnbindReq?relay
        FUNCTION ??ZDO_ParseBindUnbindReq?relay,0203H
        PUBLIC ??ZDO_ParseDeviceAnnce?relay
        FUNCTION ??ZDO_ParseDeviceAnnce?relay,0203H
        PUBLIC ??ZDO_ParseEPListRsp?relay
        FUNCTION ??ZDO_ParseEPListRsp?relay,0203H
        PUBLIC ??ZDO_ParseEndDeviceBindReq?relay
        FUNCTION ??ZDO_ParseEndDeviceBindReq?relay,0203H
        PUBLIC ??ZDO_ParseEndDeviceTimeoutRsp?relay
        FUNCTION ??ZDO_ParseEndDeviceTimeoutRsp?relay,0203H
        PUBLIC ??ZDO_ParseMgmNwkDiscRsp?relay
        FUNCTION ??ZDO_ParseMgmNwkDiscRsp?relay,0203H
        PUBLIC ??ZDO_ParseMgmtBindRsp?relay
        FUNCTION ??ZDO_ParseMgmtBindRsp?relay,0203H
        PUBLIC ??ZDO_ParseMgmtLqiRsp?relay
        FUNCTION ??ZDO_ParseMgmtLqiRsp?relay,0203H
        PUBLIC ??ZDO_ParseMgmtNwkUpdateNotify?relay
        FUNCTION ??ZDO_ParseMgmtNwkUpdateNotify?relay,0203H
        PUBLIC ??ZDO_ParseMgmtNwkUpdateReq?relay
        FUNCTION ??ZDO_ParseMgmtNwkUpdateReq?relay,0203H
        PUBLIC ??ZDO_ParseMgmtRtgRsp?relay
        FUNCTION ??ZDO_ParseMgmtRtgRsp?relay,0203H
        PUBLIC ??ZDO_ParseNodeDescRsp?relay
        FUNCTION ??ZDO_ParseNodeDescRsp?relay,0203H
        PUBLIC ??ZDO_ParsePowerDescRsp?relay
        FUNCTION ??ZDO_ParsePowerDescRsp?relay,0203H
        PUBLIC ??ZDO_ParseServerDiscRsp?relay
        FUNCTION ??ZDO_ParseServerDiscRsp?relay,0203H
        PUBLIC ??ZDO_ParseSimpleDescBuf?relay
        FUNCTION ??ZDO_ParseSimpleDescBuf?relay,0203H
        PUBLIC ??ZDO_ParseSimpleDescRsp?relay
        FUNCTION ??ZDO_ParseSimpleDescRsp?relay,0203H
        PUBLIC ??ZDO_ParseUserDescRsp?relay
        FUNCTION ??ZDO_ParseUserDescRsp?relay,0203H
        PUBLIC ??ZDO_ProcessActiveEPReq?relay
        FUNCTION ??ZDO_ProcessActiveEPReq?relay,0203H
        PUBLIC ??ZDO_ProcessBindUnbindReq?relay
        FUNCTION ??ZDO_ProcessBindUnbindReq?relay,0203H
        PUBLIC ??ZDO_ProcessDeviceAnnce?relay
        FUNCTION ??ZDO_ProcessDeviceAnnce?relay,0203H
        PUBLIC ??ZDO_ProcessEndDeviceTimeoutReq?relay
        FUNCTION ??ZDO_ProcessEndDeviceTimeoutReq?relay,0203H
        PUBLIC ??ZDO_ProcessMatchDescReq?relay
        FUNCTION ??ZDO_ProcessMatchDescReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtBindReq?relay
        FUNCTION ??ZDO_ProcessMgmtBindReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtDirectJoinReq?relay
        FUNCTION ??ZDO_ProcessMgmtDirectJoinReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtLeaveReq?relay
        FUNCTION ??ZDO_ProcessMgmtLeaveReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtLqiReq?relay
        FUNCTION ??ZDO_ProcessMgmtLqiReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtNwkDiscReq?relay
        FUNCTION ??ZDO_ProcessMgmtNwkDiscReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtPermitJoinReq?relay
        FUNCTION ??ZDO_ProcessMgmtPermitJoinReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtRtgReq?relay
        FUNCTION ??ZDO_ProcessMgmtRtgReq?relay,0203H
        PUBLIC ??ZDO_ProcessNodeDescReq?relay
        FUNCTION ??ZDO_ProcessNodeDescReq?relay,0203H
        PUBLIC ??ZDO_ProcessPowerDescReq?relay
        FUNCTION ??ZDO_ProcessPowerDescReq?relay,0203H
        PUBLIC ??ZDO_ProcessServerDiscReq?relay
        FUNCTION ??ZDO_ProcessServerDiscReq?relay,0203H
        PUBLIC ??ZDO_ProcessSimpleDescReq?relay
        FUNCTION ??ZDO_ProcessSimpleDescReq?relay,0203H
        PUBLIC ??ZDO_ProcessUserDescReq?relay
        FUNCTION ??ZDO_ProcessUserDescReq?relay,0203H
        PUBLIC ??ZDO_ProcessUserDescSet?relay
        FUNCTION ??ZDO_ProcessUserDescSet?relay,0203H
        PUBLIC ??ZDO_StartDevice?relay
        FUNCTION ??ZDO_StartDevice?relay,0203H
        PUBLIC ??ZDO_UpdateAddrManager?relay
        FUNCTION ??ZDO_UpdateAddrManager?relay,0203H
        PUBLIC ??ZDO_UpdateNwkStatus?relay
        FUNCTION ??ZDO_UpdateNwkStatus?relay,0203H
        FUNCTION ??zdoSendStateChangeMsg?relay,0203H
        PUBLIC NLME_PermitJoiningTimeout
        FUNCTION NLME_PermitJoiningTimeout,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC ZDO_AnyClusterMatches
        FUNCTION ZDO_AnyClusterMatches,080203H
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_BuildSimpleDescBuf
        FUNCTION ZDO_BuildSimpleDescBuf,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ConvertOTAClusters
        FUNCTION ZDO_ConvertOTAClusters,080203H
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_EndDeviceTimeoutCB
        FUNCTION ZDO_EndDeviceTimeoutCB,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_Init
        FUNCTION ZDO_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_ParseAddrRsp
        FUNCTION ZDO_ParseAddrRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseBindUnbindReq
        FUNCTION ZDO_ParseBindUnbindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseDeviceAnnce
        FUNCTION ZDO_ParseDeviceAnnce,0a1203H
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseEPListRsp
        FUNCTION ZDO_ParseEPListRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ParseEndDeviceBindReq
        FUNCTION ZDO_ParseEndDeviceBindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ParseEndDeviceTimeoutRsp
        FUNCTION ZDO_ParseEndDeviceTimeoutRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_ParseMgmNwkDiscRsp
        FUNCTION ZDO_ParseMgmNwkDiscRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtBindRsp
        FUNCTION ZDO_ParseMgmtBindRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ParseMgmtLqiRsp
        FUNCTION ZDO_ParseMgmtLqiRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateNotify
        FUNCTION ZDO_ParseMgmtNwkUpdateNotify,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateReq
        FUNCTION ZDO_ParseMgmtNwkUpdateReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseMgmtRtgRsp
        FUNCTION ZDO_ParseMgmtRtgRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseNodeDescRsp
        FUNCTION ZDO_ParseNodeDescRsp,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 11, STACK
        PUBLIC ZDO_ParsePowerDescRsp
        FUNCTION ZDO_ParsePowerDescRsp,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseServerDiscRsp
        FUNCTION ZDO_ParseServerDiscRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseSimpleDescBuf
        FUNCTION ZDO_ParseSimpleDescBuf,0a1203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDO_ParseSimpleDescRsp
        FUNCTION ZDO_ParseSimpleDescRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseUserDescRsp
        FUNCTION ZDO_ParseUserDescRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ProcessActiveEPReq
        FUNCTION ZDO_ProcessActiveEPReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDO_ProcessBindUnbindReq
        FUNCTION ZDO_ProcessBindUnbindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC ZDO_ProcessDeviceAnnce
        FUNCTION ZDO_ProcessDeviceAnnce,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        PUBLIC ZDO_ProcessEndDeviceTimeoutReq
        FUNCTION ZDO_ProcessEndDeviceTimeoutReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMatchDescReq
        FUNCTION ZDO_ProcessMatchDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 36, STACK
        PUBLIC ZDO_ProcessMgmtBindReq
        FUNCTION ZDO_ProcessMgmtBindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDO_ProcessMgmtDirectJoinReq
        FUNCTION ZDO_ProcessMgmtDirectJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtLeaveReq
        FUNCTION ZDO_ProcessMgmtLeaveReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDO_ProcessMgmtLqiReq
        FUNCTION ZDO_ProcessMgmtLqiReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 64, STACK
        PUBLIC ZDO_ProcessMgmtNwkDiscReq
        FUNCTION ZDO_ProcessMgmtNwkDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_ProcessMgmtPermitJoinReq
        FUNCTION ZDO_ProcessMgmtPermitJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtRtgReq
        FUNCTION ZDO_ProcessMgmtRtgReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDO_ProcessNodeDescReq
        FUNCTION ZDO_ProcessNodeDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessPowerDescReq
        FUNCTION ZDO_ProcessPowerDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessServerDiscReq
        FUNCTION ZDO_ProcessServerDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessSimpleDescReq
        FUNCTION ZDO_ProcessSimpleDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ProcessUserDescReq
        FUNCTION ZDO_ProcessUserDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC ZDO_ProcessUserDescSet
        FUNCTION ZDO_ProcessUserDescSet,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 41, STACK
        PUBLIC ZDO_StartDevice
        FUNCTION ZDO_StartDevice,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDO_UpdateAddrManager
        FUNCTION ZDO_UpdateAddrManager,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDO_UpdateNwkStatus
        FUNCTION ZDO_UpdateNwkStatus,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBWEAK __Constant_3e8
        PUBLIC apsChannelMask
        PUBLIC matchED
        FUNCTION zdoSendStateChangeMsg,0a1203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC zdpExternalStateTaskID
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
APSME_BindRequest   SYMBOL "APSME_BindRequest"
??APSME_BindRequest?relay SYMBOL "?relay", APSME_BindRequest
APSME_GetRequest    SYMBOL "APSME_GetRequest"
??APSME_GetRequest?relay SYMBOL "?relay", APSME_GetRequest
APSME_LookupNwkAddr SYMBOL "APSME_LookupNwkAddr"
??APSME_LookupNwkAddr?relay SYMBOL "?relay", APSME_LookupNwkAddr
APSME_UnBindRequest SYMBOL "APSME_UnBindRequest"
??APSME_UnBindRequest?relay SYMBOL "?relay", APSME_UnBindRequest
APS_ReflectorInit   SYMBOL "APS_ReflectorInit"
??APS_ReflectorInit?relay SYMBOL "?relay", APS_ReflectorInit
AddrMgrEntryLookupExt SYMBOL "AddrMgrEntryLookupExt"
??AddrMgrEntryLookupExt?relay SYMBOL "?relay", AddrMgrEntryLookupExt
AddrMgrEntryLookupNwk SYMBOL "AddrMgrEntryLookupNwk"
??AddrMgrEntryLookupNwk?relay SYMBOL "?relay", AddrMgrEntryLookupNwk
AddrMgrEntryUpdate  SYMBOL "AddrMgrEntryUpdate"
??AddrMgrEntryUpdate?relay SYMBOL "?relay", AddrMgrEntryUpdate
AddrMgrExtAddrSet   SYMBOL "AddrMgrExtAddrSet"
??AddrMgrExtAddrSet?relay SYMBOL "?relay", AddrMgrExtAddrSet
AddrMgrExtAddrValid SYMBOL "AddrMgrExtAddrValid"
??AddrMgrExtAddrValid?relay SYMBOL "?relay", AddrMgrExtAddrValid
AssocCount          SYMBOL "AssocCount"
??AssocCount?relay  SYMBOL "?relay", AssocCount
AssocFindDevice     SYMBOL "AssocFindDevice"
??AssocFindDevice?relay SYMBOL "?relay", AssocFindDevice
NLME_CheckNewAddrSet SYMBOL "NLME_CheckNewAddrSet"
??NLME_CheckNewAddrSet?relay SYMBOL "?relay", NLME_CheckNewAddrSet
NLME_DeviceJoiningInit SYMBOL "NLME_DeviceJoiningInit"
??NLME_DeviceJoiningInit?relay SYMBOL "?relay", NLME_DeviceJoiningInit
NLME_DirectJoinRequest SYMBOL "NLME_DirectJoinRequest"
??NLME_DirectJoinRequest?relay SYMBOL "?relay", NLME_DirectJoinRequest
NLME_GetCoordExtAddr SYMBOL "NLME_GetCoordExtAddr"
??NLME_GetCoordExtAddr?relay SYMBOL "?relay", NLME_GetCoordExtAddr
NLME_GetCoordShortAddr SYMBOL "NLME_GetCoordShortAddr"
??NLME_GetCoordShortAddr?relay SYMBOL "?relay", NLME_GetCoordShortAddr
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
??NLME_GetExtAddr?relay SYMBOL "?relay", NLME_GetExtAddr
NLME_GetRequest     SYMBOL "NLME_GetRequest"
??NLME_GetRequest?relay SYMBOL "?relay", NLME_GetRequest
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
??NLME_GetShortAddr?relay SYMBOL "?relay", NLME_GetShortAddr
NLME_IsAddressBroadcast SYMBOL "NLME_IsAddressBroadcast"
??NLME_IsAddressBroadcast?relay SYMBOL "?relay", NLME_IsAddressBroadcast
NLME_LeaveReq       SYMBOL "NLME_LeaveReq"
??NLME_LeaveReq?relay SYMBOL "?relay", NLME_LeaveReq
NLME_NetworkDiscoveryRequest SYMBOL "NLME_NetworkDiscoveryRequest"
??NLME_NetworkDiscoveryRequest?relay SYMBOL "?relay", NLME_NetworkDiscoveryRequest
NLME_NwkDiscReq2    SYMBOL "NLME_NwkDiscReq2"
??NLME_NwkDiscReq2?relay SYMBOL "?relay", NLME_NwkDiscReq2
NLME_NwkDiscTerm    SYMBOL "NLME_NwkDiscTerm"
??NLME_NwkDiscTerm?relay SYMBOL "?relay", NLME_NwkDiscTerm
NLME_OrphanJoinRequest SYMBOL "NLME_OrphanJoinRequest"
??NLME_OrphanJoinRequest?relay SYMBOL "?relay", NLME_OrphanJoinRequest
NLME_PermitJoiningRequest SYMBOL "NLME_PermitJoiningRequest"
??NLME_PermitJoiningRequest?relay SYMBOL "?relay", NLME_PermitJoiningRequest
NLME_SetPollRate    SYMBOL "NLME_SetPollRate"
??NLME_SetPollRate?relay SYMBOL "?relay", NLME_SetPollRate
RTG_RemoveRtgEntry  SYMBOL "RTG_RemoveRtgEntry"
??RTG_RemoveRtgEntry?relay SYMBOL "?relay", RTG_RemoveRtgEntry
ZDApp_GetEmptyPendingBindReq SYMBOL "ZDApp_GetEmptyPendingBindReq"
??ZDApp_GetEmptyPendingBindReq?relay SYMBOL "?relay", ZDApp_GetEmptyPendingBindReq
ZDApp_NVUpdate      SYMBOL "ZDApp_NVUpdate"
??ZDApp_NVUpdate?relay SYMBOL "?relay", ZDApp_NVUpdate
ZDP_EPRsp           SYMBOL "ZDP_EPRsp"
??ZDP_EPRsp?relay   SYMBOL "?relay", ZDP_EPRsp
ZDP_GenericRsp      SYMBOL "ZDP_GenericRsp"
??ZDP_GenericRsp?relay SYMBOL "?relay", ZDP_GenericRsp
ZDP_MgmtBindRsp     SYMBOL "ZDP_MgmtBindRsp"
??ZDP_MgmtBindRsp?relay SYMBOL "?relay", ZDP_MgmtBindRsp
ZDP_MgmtLqiRsp      SYMBOL "ZDP_MgmtLqiRsp"
??ZDP_MgmtLqiRsp?relay SYMBOL "?relay", ZDP_MgmtLqiRsp
ZDP_MgmtRtgRsp      SYMBOL "ZDP_MgmtRtgRsp"
??ZDP_MgmtRtgRsp?relay SYMBOL "?relay", ZDP_MgmtRtgRsp
ZDP_NodeDescMsg     SYMBOL "ZDP_NodeDescMsg"
??ZDP_NodeDescMsg?relay SYMBOL "?relay", ZDP_NodeDescMsg
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
??ZDP_NwkAddrReq?relay SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_PowerDescMsg    SYMBOL "ZDP_PowerDescMsg"
??ZDP_PowerDescMsg?relay SYMBOL "?relay", ZDP_PowerDescMsg
ZDP_SendData        SYMBOL "ZDP_SendData"
??ZDP_SendData?relay SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscRsp   SYMBOL "ZDP_ServerDiscRsp"
??ZDP_ServerDiscRsp?relay SYMBOL "?relay", ZDP_ServerDiscRsp
ZDP_SimpleDescMsg   SYMBOL "ZDP_SimpleDescMsg"
??ZDP_SimpleDescMsg?relay SYMBOL "?relay", ZDP_SimpleDescMsg
ZDP_UserDescRsp     SYMBOL "ZDP_UserDescRsp"
??ZDP_UserDescRsp?relay SYMBOL "?relay", ZDP_UserDescRsp
ZMacSetReq          SYMBOL "ZMacSetReq"
??ZMacSetReq?relay  SYMBOL "?relay", ZMacSetReq
afEndPoints         SYMBOL "afEndPoints"
??afEndPoints?relay SYMBOL "?relay", afEndPoints
afFindSimpleDesc    SYMBOL "afFindSimpleDesc"
??afFindSimpleDesc?relay SYMBOL "?relay", afFindSimpleDesc
afNumEndPoints      SYMBOL "afNumEndPoints"
??afNumEndPoints?relay SYMBOL "?relay", afNumEndPoints
bindAddrIndexGet    SYMBOL "bindAddrIndexGet"
??bindAddrIndexGet?relay SYMBOL "?relay", bindAddrIndexGet
nwkNeighborRemoveAllStranded SYMBOL "nwkNeighborRemoveAllStranded"
??nwkNeighborRemoveAllStranded?relay SYMBOL "?relay", nwkNeighborRemoveAllStranded
nwkNeighborUpdateNwkAddr SYMBOL "nwkNeighborUpdateNwkAddr"
??nwkNeighborUpdateNwkAddr?relay SYMBOL "?relay", nwkNeighborUpdateNwkAddr
nwk_ScanJoiningOrphan SYMBOL "nwk_ScanJoiningOrphan"
??nwk_ScanJoiningOrphan?relay SYMBOL "?relay", nwk_ScanJoiningOrphan
osal_build_uint32   SYMBOL "osal_build_uint32"
??osal_build_uint32?relay SYMBOL "?relay", osal_build_uint32
osal_mem_alloc      SYMBOL "osal_mem_alloc"
??osal_mem_alloc?relay SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
??osal_mem_free?relay SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
??osal_memcpy?relay SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
??osal_memset?relay SYMBOL "?relay", osal_memset
osal_msg_allocate   SYMBOL "osal_msg_allocate"
??osal_msg_allocate?relay SYMBOL "?relay", osal_msg_allocate
osal_msg_find       SYMBOL "osal_msg_find"
??osal_msg_find?relay SYMBOL "?relay", osal_msg_find
osal_msg_send       SYMBOL "osal_msg_send"
??osal_msg_send?relay SYMBOL "?relay", osal_msg_send
osal_nv_read        SYMBOL "osal_nv_read"
??osal_nv_read?relay SYMBOL "?relay", osal_nv_read
osal_nv_write       SYMBOL "osal_nv_write"
??osal_nv_write?relay SYMBOL "?relay", osal_nv_write
osal_set_event      SYMBOL "osal_set_event"
??osal_set_event?relay SYMBOL "?relay", osal_set_event
osal_start_timerEx  SYMBOL "osal_start_timerEx"
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
sAddrExtCmp         SYMBOL "sAddrExtCmp"
??sAddrExtCmp?relay SYMBOL "?relay", sAddrExtCmp
sAddrExtCpy         SYMBOL "sAddrExtCpy"
??sAddrExtCpy?relay SYMBOL "?relay", sAddrExtCpy
NLME_PermitJoiningTimeout SYMBOL "NLME_PermitJoiningTimeout"
??NLME_PermitJoiningTimeout?relay SYMBOL "?relay", NLME_PermitJoiningTimeout
ZDO_AnyClusterMatches SYMBOL "ZDO_AnyClusterMatches"
??ZDO_AnyClusterMatches?relay SYMBOL "?relay", ZDO_AnyClusterMatches
ZDO_BuildSimpleDescBuf SYMBOL "ZDO_BuildSimpleDescBuf"
??ZDO_BuildSimpleDescBuf?relay SYMBOL "?relay", ZDO_BuildSimpleDescBuf
ZDO_ConvertOTAClusters SYMBOL "ZDO_ConvertOTAClusters"
??ZDO_ConvertOTAClusters?relay SYMBOL "?relay", ZDO_ConvertOTAClusters
ZDO_EndDeviceTimeoutCB SYMBOL "ZDO_EndDeviceTimeoutCB"
??ZDO_EndDeviceTimeoutCB?relay SYMBOL "?relay", ZDO_EndDeviceTimeoutCB
ZDO_Init            SYMBOL "ZDO_Init"
??ZDO_Init?relay    SYMBOL "?relay", ZDO_Init
ZDO_ParseAddrRsp    SYMBOL "ZDO_ParseAddrRsp"
??ZDO_ParseAddrRsp?relay SYMBOL "?relay", ZDO_ParseAddrRsp
ZDO_ParseBindUnbindReq SYMBOL "ZDO_ParseBindUnbindReq"
??ZDO_ParseBindUnbindReq?relay SYMBOL "?relay", ZDO_ParseBindUnbindReq
ZDO_ParseDeviceAnnce SYMBOL "ZDO_ParseDeviceAnnce"
??ZDO_ParseDeviceAnnce?relay SYMBOL "?relay", ZDO_ParseDeviceAnnce
ZDO_ParseEPListRsp  SYMBOL "ZDO_ParseEPListRsp"
??ZDO_ParseEPListRsp?relay SYMBOL "?relay", ZDO_ParseEPListRsp
ZDO_ParseEndDeviceBindReq SYMBOL "ZDO_ParseEndDeviceBindReq"
??ZDO_ParseEndDeviceBindReq?relay SYMBOL "?relay", ZDO_ParseEndDeviceBindReq
ZDO_ParseEndDeviceTimeoutRsp SYMBOL "ZDO_ParseEndDeviceTimeoutRsp"
??ZDO_ParseEndDeviceTimeoutRsp?relay SYMBOL "?relay", ZDO_ParseEndDeviceTimeoutRsp
ZDO_ParseMgmNwkDiscRsp SYMBOL "ZDO_ParseMgmNwkDiscRsp"
??ZDO_ParseMgmNwkDiscRsp?relay SYMBOL "?relay", ZDO_ParseMgmNwkDiscRsp
ZDO_ParseMgmtBindRsp SYMBOL "ZDO_ParseMgmtBindRsp"
??ZDO_ParseMgmtBindRsp?relay SYMBOL "?relay", ZDO_ParseMgmtBindRsp
ZDO_ParseMgmtLqiRsp SYMBOL "ZDO_ParseMgmtLqiRsp"
??ZDO_ParseMgmtLqiRsp?relay SYMBOL "?relay", ZDO_ParseMgmtLqiRsp
ZDO_ParseMgmtNwkUpdateNotify SYMBOL "ZDO_ParseMgmtNwkUpdateNotify"
??ZDO_ParseMgmtNwkUpdateNotify?relay SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateNotify
ZDO_ParseMgmtNwkUpdateReq SYMBOL "ZDO_ParseMgmtNwkUpdateReq"
??ZDO_ParseMgmtNwkUpdateReq?relay SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateReq
ZDO_ParseMgmtRtgRsp SYMBOL "ZDO_ParseMgmtRtgRsp"
??ZDO_ParseMgmtRtgRsp?relay SYMBOL "?relay", ZDO_ParseMgmtRtgRsp
ZDO_ParseNodeDescRsp SYMBOL "ZDO_ParseNodeDescRsp"
??ZDO_ParseNodeDescRsp?relay SYMBOL "?relay", ZDO_ParseNodeDescRsp
ZDO_ParsePowerDescRsp SYMBOL "ZDO_ParsePowerDescRsp"
??ZDO_ParsePowerDescRsp?relay SYMBOL "?relay", ZDO_ParsePowerDescRsp
ZDO_ParseServerDiscRsp SYMBOL "ZDO_ParseServerDiscRsp"
??ZDO_ParseServerDiscRsp?relay SYMBOL "?relay", ZDO_ParseServerDiscRsp
ZDO_ParseSimpleDescBuf SYMBOL "ZDO_ParseSimpleDescBuf"
??ZDO_ParseSimpleDescBuf?relay SYMBOL "?relay", ZDO_ParseSimpleDescBuf
ZDO_ParseSimpleDescRsp SYMBOL "ZDO_ParseSimpleDescRsp"
??ZDO_ParseSimpleDescRsp?relay SYMBOL "?relay", ZDO_ParseSimpleDescRsp
ZDO_ParseUserDescRsp SYMBOL "ZDO_ParseUserDescRsp"
??ZDO_ParseUserDescRsp?relay SYMBOL "?relay", ZDO_ParseUserDescRsp
ZDO_ProcessActiveEPReq SYMBOL "ZDO_ProcessActiveEPReq"
??ZDO_ProcessActiveEPReq?relay SYMBOL "?relay", ZDO_ProcessActiveEPReq
ZDO_ProcessBindUnbindReq SYMBOL "ZDO_ProcessBindUnbindReq"
??ZDO_ProcessBindUnbindReq?relay SYMBOL "?relay", ZDO_ProcessBindUnbindReq
ZDO_ProcessDeviceAnnce SYMBOL "ZDO_ProcessDeviceAnnce"
??ZDO_ProcessDeviceAnnce?relay SYMBOL "?relay", ZDO_ProcessDeviceAnnce
ZDO_ProcessEndDeviceTimeoutReq SYMBOL "ZDO_ProcessEndDeviceTimeoutReq"
??ZDO_ProcessEndDeviceTimeoutReq?relay SYMBOL "?relay", ZDO_ProcessEndDeviceTimeoutReq
ZDO_ProcessMatchDescReq SYMBOL "ZDO_ProcessMatchDescReq"
??ZDO_ProcessMatchDescReq?relay SYMBOL "?relay", ZDO_ProcessMatchDescReq
ZDO_ProcessMgmtBindReq SYMBOL "ZDO_ProcessMgmtBindReq"
??ZDO_ProcessMgmtBindReq?relay SYMBOL "?relay", ZDO_ProcessMgmtBindReq
ZDO_ProcessMgmtDirectJoinReq SYMBOL "ZDO_ProcessMgmtDirectJoinReq"
??ZDO_ProcessMgmtDirectJoinReq?relay SYMBOL "?relay", ZDO_ProcessMgmtDirectJoinReq
ZDO_ProcessMgmtLeaveReq SYMBOL "ZDO_ProcessMgmtLeaveReq"
??ZDO_ProcessMgmtLeaveReq?relay SYMBOL "?relay", ZDO_ProcessMgmtLeaveReq
ZDO_ProcessMgmtLqiReq SYMBOL "ZDO_ProcessMgmtLqiReq"
??ZDO_ProcessMgmtLqiReq?relay SYMBOL "?relay", ZDO_ProcessMgmtLqiReq
ZDO_ProcessMgmtNwkDiscReq SYMBOL "ZDO_ProcessMgmtNwkDiscReq"
??ZDO_ProcessMgmtNwkDiscReq?relay SYMBOL "?relay", ZDO_ProcessMgmtNwkDiscReq
ZDO_ProcessMgmtPermitJoinReq SYMBOL "ZDO_ProcessMgmtPermitJoinReq"
??ZDO_ProcessMgmtPermitJoinReq?relay SYMBOL "?relay", ZDO_ProcessMgmtPermitJoinReq
ZDO_ProcessMgmtRtgReq SYMBOL "ZDO_ProcessMgmtRtgReq"
??ZDO_ProcessMgmtRtgReq?relay SYMBOL "?relay", ZDO_ProcessMgmtRtgReq
ZDO_ProcessNodeDescReq SYMBOL "ZDO_ProcessNodeDescReq"
??ZDO_ProcessNodeDescReq?relay SYMBOL "?relay", ZDO_ProcessNodeDescReq
ZDO_ProcessPowerDescReq SYMBOL "ZDO_ProcessPowerDescReq"
??ZDO_ProcessPowerDescReq?relay SYMBOL "?relay", ZDO_ProcessPowerDescReq
ZDO_ProcessServerDiscReq SYMBOL "ZDO_ProcessServerDiscReq"
??ZDO_ProcessServerDiscReq?relay SYMBOL "?relay", ZDO_ProcessServerDiscReq
ZDO_ProcessSimpleDescReq SYMBOL "ZDO_ProcessSimpleDescReq"
??ZDO_ProcessSimpleDescReq?relay SYMBOL "?relay", ZDO_ProcessSimpleDescReq
ZDO_ProcessUserDescReq SYMBOL "ZDO_ProcessUserDescReq"
??ZDO_ProcessUserDescReq?relay SYMBOL "?relay", ZDO_ProcessUserDescReq
ZDO_ProcessUserDescSet SYMBOL "ZDO_ProcessUserDescSet"
??ZDO_ProcessUserDescSet?relay SYMBOL "?relay", ZDO_ProcessUserDescSet
ZDO_StartDevice     SYMBOL "ZDO_StartDevice"
??ZDO_StartDevice?relay SYMBOL "?relay", ZDO_StartDevice
ZDO_UpdateAddrManager SYMBOL "ZDO_UpdateAddrManager"
??ZDO_UpdateAddrManager?relay SYMBOL "?relay", ZDO_UpdateAddrManager
ZDO_UpdateNwkStatus SYMBOL "ZDO_UpdateNwkStatus"
??ZDO_UpdateNwkStatus?relay SYMBOL "?relay", ZDO_UpdateNwkStatus

        EXTERN ??APSME_BindRequest?relay
        FUNCTION ??APSME_BindRequest?relay,00H
        EXTERN ??APSME_GetRequest?relay
        FUNCTION ??APSME_GetRequest?relay,00H
        EXTERN ??APSME_LookupNwkAddr?relay
        FUNCTION ??APSME_LookupNwkAddr?relay,00H
        EXTERN ??APSME_UnBindRequest?relay
        FUNCTION ??APSME_UnBindRequest?relay,00H
        EXTERN ??APS_ReflectorInit?relay
        FUNCTION ??APS_ReflectorInit?relay,00H
        EXTERN ??AddrMgrEntryLookupExt?relay
        FUNCTION ??AddrMgrEntryLookupExt?relay,00H
        EXTERN ??AddrMgrEntryLookupNwk?relay
        FUNCTION ??AddrMgrEntryLookupNwk?relay,00H
        EXTERN ??AddrMgrEntryUpdate?relay
        FUNCTION ??AddrMgrEntryUpdate?relay,00H
        EXTERN ??AddrMgrExtAddrSet?relay
        FUNCTION ??AddrMgrExtAddrSet?relay,00H
        EXTERN ??AddrMgrExtAddrValid?relay
        FUNCTION ??AddrMgrExtAddrValid?relay,00H
        EXTERN ??AssocCount?relay
        FUNCTION ??AssocCount?relay,00H
        EXTERN ??AssocFindDevice?relay
        FUNCTION ??AssocFindDevice?relay,00H
        EXTERN ??NLME_CheckNewAddrSet?relay
        FUNCTION ??NLME_CheckNewAddrSet?relay,00H
        EXTERN ??NLME_DeviceJoiningInit?relay
        FUNCTION ??NLME_DeviceJoiningInit?relay,00H
        EXTERN ??NLME_DirectJoinRequest?relay
        FUNCTION ??NLME_DirectJoinRequest?relay,00H
        EXTERN ??NLME_GetCoordExtAddr?relay
        FUNCTION ??NLME_GetCoordExtAddr?relay,00H
        EXTERN ??NLME_GetCoordShortAddr?relay
        FUNCTION ??NLME_GetCoordShortAddr?relay,00H
        EXTERN ??NLME_GetExtAddr?relay
        FUNCTION ??NLME_GetExtAddr?relay,00H
        EXTERN ??NLME_GetRequest?relay
        FUNCTION ??NLME_GetRequest?relay,00H
        EXTERN ??NLME_GetShortAddr?relay
        FUNCTION ??NLME_GetShortAddr?relay,00H
        EXTERN ??NLME_IsAddressBroadcast?relay
        FUNCTION ??NLME_IsAddressBroadcast?relay,00H
        EXTERN ??NLME_LeaveReq?relay
        FUNCTION ??NLME_LeaveReq?relay,00H
        EXTERN ??NLME_NetworkDiscoveryRequest?relay
        FUNCTION ??NLME_NetworkDiscoveryRequest?relay,00H
        EXTERN ??NLME_NwkDiscReq2?relay
        FUNCTION ??NLME_NwkDiscReq2?relay,00H
        EXTERN ??NLME_NwkDiscTerm?relay
        FUNCTION ??NLME_NwkDiscTerm?relay,00H
        EXTERN ??NLME_OrphanJoinRequest?relay
        FUNCTION ??NLME_OrphanJoinRequest?relay,00H
        EXTERN ??NLME_PermitJoiningRequest?relay
        FUNCTION ??NLME_PermitJoiningRequest?relay,00H
        EXTERN ??NLME_SetPollRate?relay
        FUNCTION ??NLME_SetPollRate?relay,00H
        EXTERN ??RTG_RemoveRtgEntry?relay
        FUNCTION ??RTG_RemoveRtgEntry?relay,00H
        EXTERN ??ZDApp_GetEmptyPendingBindReq?relay
        FUNCTION ??ZDApp_GetEmptyPendingBindReq?relay,00H
        EXTERN ??ZDApp_NVUpdate?relay
        FUNCTION ??ZDApp_NVUpdate?relay,00H
        EXTERN ??ZDP_EPRsp?relay
        FUNCTION ??ZDP_EPRsp?relay,00H
        EXTERN ??ZDP_GenericRsp?relay
        FUNCTION ??ZDP_GenericRsp?relay,00H
        EXTERN ??ZDP_MgmtBindRsp?relay
        FUNCTION ??ZDP_MgmtBindRsp?relay,00H
        EXTERN ??ZDP_MgmtLqiRsp?relay
        FUNCTION ??ZDP_MgmtLqiRsp?relay,00H
        EXTERN ??ZDP_MgmtRtgRsp?relay
        FUNCTION ??ZDP_MgmtRtgRsp?relay,00H
        EXTERN ??ZDP_NodeDescMsg?relay
        FUNCTION ??ZDP_NodeDescMsg?relay,00H
        EXTERN ??ZDP_NwkAddrReq?relay
        FUNCTION ??ZDP_NwkAddrReq?relay,00H
        EXTERN ??ZDP_PowerDescMsg?relay
        FUNCTION ??ZDP_PowerDescMsg?relay,00H
        EXTERN ??ZDP_SendData?relay
        FUNCTION ??ZDP_SendData?relay,00H
        EXTERN ??ZDP_ServerDiscRsp?relay
        FUNCTION ??ZDP_ServerDiscRsp?relay,00H
        EXTERN ??ZDP_SimpleDescMsg?relay
        FUNCTION ??ZDP_SimpleDescMsg?relay,00H
        EXTERN ??ZDP_UserDescRsp?relay
        FUNCTION ??ZDP_UserDescRsp?relay,00H
        EXTERN ??ZMacSetReq?relay
        FUNCTION ??ZMacSetReq?relay,00H
        EXTERN ??afEndPoints?relay
        FUNCTION ??afEndPoints?relay,00H
        EXTERN ??afFindSimpleDesc?relay
        FUNCTION ??afFindSimpleDesc?relay,00H
        EXTERN ??afNumEndPoints?relay
        FUNCTION ??afNumEndPoints?relay,00H
        EXTERN ??bindAddrIndexGet?relay
        FUNCTION ??bindAddrIndexGet?relay,00H
        EXTERN ??nwkNeighborRemoveAllStranded?relay
        FUNCTION ??nwkNeighborRemoveAllStranded?relay,00H
        EXTERN ??nwkNeighborUpdateNwkAddr?relay
        FUNCTION ??nwkNeighborUpdateNwkAddr?relay,00H
        EXTERN ??nwk_ScanJoiningOrphan?relay
        FUNCTION ??nwk_ScanJoiningOrphan?relay,00H
        EXTERN ??osal_build_uint32?relay
        FUNCTION ??osal_build_uint32?relay,00H
        EXTERN ??osal_mem_alloc?relay
        FUNCTION ??osal_mem_alloc?relay,00H
        EXTERN ??osal_mem_free?relay
        FUNCTION ??osal_mem_free?relay,00H
        EXTERN ??osal_memcpy?relay
        FUNCTION ??osal_memcpy?relay,00H
        EXTERN ??osal_memset?relay
        FUNCTION ??osal_memset?relay,00H
        EXTERN ??osal_msg_allocate?relay
        FUNCTION ??osal_msg_allocate?relay,00H
        EXTERN ??osal_msg_find?relay
        FUNCTION ??osal_msg_find?relay,00H
        EXTERN ??osal_msg_send?relay
        FUNCTION ??osal_msg_send?relay,00H
        EXTERN ??osal_nv_read?relay
        FUNCTION ??osal_nv_read?relay,00H
        EXTERN ??osal_nv_write?relay
        FUNCTION ??osal_nv_write?relay,00H
        EXTERN ??osal_set_event?relay
        FUNCTION ??osal_set_event?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H
        EXTERN ??sAddrExtCmp?relay
        FUNCTION ??sAddrExtCmp?relay,00H
        EXTERN ??sAddrExtCpy?relay
        FUNCTION ??sAddrExtCpy?relay,00H
        EXTERN AIB_apsUseExtendedPANID
        EXTERN APSME_BindRequest
        FUNCTION APSME_BindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_GetRequest
        FUNCTION APSME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_LookupNwkAddr
        FUNCTION APSME_LookupNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_UnBindRequest
        FUNCTION APSME_UnBindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_ReflectorInit
        FUNCTION APS_ReflectorInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupExt
        FUNCTION AddrMgrEntryLookupExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupNwk
        FUNCTION AddrMgrEntryLookupNwk,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryUpdate
        FUNCTION AddrMgrEntryUpdate,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrSet
        FUNCTION AddrMgrExtAddrSet,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrValid
        FUNCTION AddrMgrExtAddrValid,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocCount
        FUNCTION AssocCount,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocFindDevice
        FUNCTION AssocFindDevice,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_CheckNewAddrSet
        FUNCTION NLME_CheckNewAddrSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_DeviceJoiningInit
        FUNCTION NLME_DeviceJoiningInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_DirectJoinRequest
        FUNCTION NLME_DirectJoinRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordExtAddr
        FUNCTION NLME_GetCoordExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordShortAddr
        FUNCTION NLME_GetCoordShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetRequest
        FUNCTION NLME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_IsAddressBroadcast
        FUNCTION NLME_IsAddressBroadcast,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_LeaveReq
        FUNCTION NLME_LeaveReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NetworkDiscoveryRequest
        FUNCTION NLME_NetworkDiscoveryRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscReq2
        FUNCTION NLME_NwkDiscReq2,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscTerm
        FUNCTION NLME_NwkDiscTerm,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_OrphanJoinRequest
        FUNCTION NLME_OrphanJoinRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_PermitJoiningRequest
        FUNCTION NLME_PermitJoiningRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_SetPollRate
        FUNCTION NLME_SetPollRate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN RTG_RemoveRtgEntry
        FUNCTION RTG_RemoveRtgEntry,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDAppNwkAddr
        EXTERN ZDAppTaskID
        EXTERN ZDApp_GetEmptyPendingBindReq
        FUNCTION ZDApp_GetEmptyPendingBindReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_NVUpdate
        FUNCTION ZDApp_NVUpdate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_Config_Node_Descriptor
        EXTERN ZDO_Config_Power_Descriptor
        EXTERN ZDO_UseExtendedPANID
        EXTERN ZDP_EPRsp
        FUNCTION ZDP_EPRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_GenericRsp
        FUNCTION ZDP_GenericRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtBindRsp
        FUNCTION ZDP_MgmtBindRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtLqiRsp
        FUNCTION ZDP_MgmtLqiRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 64, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtRtgRsp
        FUNCTION ZDP_MgmtRtgRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NodeDescMsg
        FUNCTION ZDP_NodeDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_PowerDescMsg
        FUNCTION ZDP_PowerDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SendData
        FUNCTION ZDP_SendData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_ServerDiscRsp
        FUNCTION ZDP_ServerDiscRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SimpleDescMsg
        FUNCTION ZDP_SimpleDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_UserDescRsp
        FUNCTION ZDP_UserDescRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZMacSetReq
        FUNCTION ZMacSetReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN _NIB
        EXTERN afEndPoints
        FUNCTION afEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afFindSimpleDesc
        FUNCTION afFindSimpleDesc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afNumEndPoints
        FUNCTION afNumEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN bindAddrIndexGet
        FUNCTION bindAddrIndexGet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN devState
        EXTERN epList
        EXTERN nwkNeighborRemoveAllStranded
        FUNCTION nwkNeighborRemoveAllStranded,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwkNeighborUpdateNwkAddr
        FUNCTION nwkNeighborUpdateNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwk_ScanJoiningOrphan
        FUNCTION nwk_ScanJoiningOrphan,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_build_uint32
        FUNCTION osal_build_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_allocate
        FUNCTION osal_msg_allocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_find
        FUNCTION osal_msg_find,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_send
        FUNCTION osal_msg_send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_read
        FUNCTION osal_nv_read,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_write
        FUNCTION osal_nv_write,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCmp
        FUNCTION sAddrExtCmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zdappMgmtNwkDiscReqInProgress
        EXTERN zdappMgmtNwkDiscRspAddr
        EXTERN zdappMgmtNwkDiscRspTransSeq
        EXTERN zdappMgmtNwkDiscStartIndex
        EXTERN zgChildAgingEnable
        EXTERN zgDefaultChannelList
        EXTERN zgDefaultStartingScanDuration

// C:\Texas Instruments\Z-Stack Mesh v1.0.0\Components\stack\zdo\ZDObject.c
//    1 /**************************************************************************************************
//    2   Filename:       ZDObject.c
//    3   Revised:        $Date: 2014-08-04 18:42:36 -0700 (Mon, 04 Aug 2014) $
//    4   Revision:       $Revision: 39656 $
//    5 
//    6   Description:    This is the Zigbee Device Object.
//    7 
//    8 
//    9   Copyright 2004-2014 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License"). You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product. Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "ZComDef.h"
//   44 #include "OSAL.h"
//   45 #include "OSAL_Nv.h"
//   46 #include "rtg.h"
//   47 #include "NLMEDE.h"
//   48 #include "nwk_globals.h"
//   49 #include "APS.h"
//   50 #include "APSMEDE.h"
//   51 #include "AssocList.h"
//   52 #include "BindingTable.h"
//   53 #include "AddrMgr.h"
//   54 #include "AF.h"
//   55 #include "ZDObject.h"
//   56 #include "ZDProfile.h"
//   57 #include "ZDConfig.h"
//   58 #include "ZDSecMgr.h"
//   59 #include "ZDApp.h"
//   60 #include "nwk_util.h"   // NLME_IsAddressBroadcast()
//   61 #include "ZGlobals.h"
//   62 #if defined MT_ZDO_CB_FUNC
//   63 #include "MT.h"
//   64 #endif
//   65 
//   66 #if defined( LCD_SUPPORTED )
//   67   #include "OnBoard.h"
//   68 #endif
//   69 
//   70 /* HAL */
//   71 #include "hal_lcd.h"
//   72 
//   73 /*********************************************************************
//   74  * MACROS
//   75  */
//   76 
//   77 /*********************************************************************
//   78  * CONSTANTS
//   79  */
//   80 // NLME Stub Implementations
//   81 #define ZDO_ProcessMgmtPermitJoinTimeout NLME_PermitJoiningTimeout
//   82 
//   83 /*********************************************************************
//   84  * TYPEDEFS
//   85  */
//   86 #if defined ( REFLECTOR )
//   87 typedef struct
//   88 {
//   89   byte SrcTransSeq;
//   90   zAddrType_t SrcAddr;
//   91   uint16 LocalCoordinator;
//   92   byte epIntf;
//   93   uint16 ProfileID;
//   94   byte numInClusters;
//   95   uint16 *inClusters;
//   96   byte numOutClusters;
//   97   uint16 *outClusters;
//   98   byte SecurityUse;
//   99   byte status;
//  100 } ZDO_EDBind_t;
//  101 #endif // defined ( REFLECTOR )
//  102 
//  103 enum
//  104 {
//  105   ZDMATCH_INIT,           // Initialized
//  106   ZDMATCH_WAIT_REQ,       // Received first request, waiting for second
//  107   ZDMATCH_SENDING_BINDS   // Received both requests, sending unbind/binds
//  108 };
//  109 
//  110 enum
//  111 {
//  112   ZDMATCH_SENDING_NOT,
//  113   ZDMATCH_SENDING_UNBIND,
//  114   ZDMATCH_SENDING_BIND
//  115 };
//  116 
//  117 /*********************************************************************
//  118  * GLOBAL VARIABLES
//  119  */
//  120 
//  121 /*********************************************************************
//  122  * EXTERNAL VARIABLES
//  123  */
//  124 
//  125 /*********************************************************************
//  126  * EXTERNAL FUNCTIONS
//  127  */
//  128 
//  129 /*********************************************************************
//  130  * LOCAL VARIABLES
//  131  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  132 static uint16 ZDOBuildBuf[26];  // temp area to build data without allocation
ZDOBuildBuf:
        DS 52
        REQUIRE __INIT_XDATA_Z
//  133 
//  134 #if defined ( REFLECTOR )

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  135 static ZDO_EDBind_t *ZDO_EDBind;     // Null when not used
ZDO_EDBind:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  136 #endif
//  137 
//  138 #if defined ( MANAGED_SCAN )
//  139   uint32 managedScanNextChannel = 0;
//  140   uint32 managedScanChannelMask = 0;
//  141   uint8  managedScanTimesPerChannel = 0;
//  142 #endif
//  143 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  144 ZDMatchEndDeviceBind_t *matchED = (ZDMatchEndDeviceBind_t *)NULL;
matchED:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  145 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//  146 uint32 apsChannelMask = 0;
apsChannelMask:
        DS 4
        REQUIRE __INIT_XDATA_Z
//  147 

        RSEG XDATA_I:XDATA:NOROOT(0)
//  148 int16 zdpExternalStateTaskID = -1;
zdpExternalStateTaskID:
        DATA16
        DS 2
        REQUIRE `?<Initializer for zdpExternalStateTaskID>`
        REQUIRE __INIT_XDATA_I
//  149 
//  150 /*********************************************************************
//  151  * LOCAL FUNCTIONS
//  152  */
//  153 static void ZDODeviceSetup( void );
//  154 #if defined ( MANAGED_SCAN )
//  155   static void ZDOManagedScan_Next( void );
//  156 #endif
//  157 #if defined ( REFLECTOR )
//  158   static void ZDO_RemoveEndDeviceBind( void );
//  159   static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse );
//  160 #endif
//  161 #if ( ZG_BUILD_COORDINATOR_TYPE )
//  162   static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
//  163                                        byte numList2, uint16 *list2, uint16 *pMatches );
//  164   static void ZDO_RemoveMatchMemory( void );
//  165   static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq );
//  166   static void ZDO_EndDeviceBindMatchTimeoutCB( void );
//  167 #endif
//  168 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList );
//  169 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId);
//  170 
//  171 /*********************************************************************
//  172  * @fn          ZDO_Init
//  173  *
//  174  * @brief       ZDObject and ZDProfile initialization.
//  175  *
//  176  * @param       none
//  177  *
//  178  * @return      none
//  179  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  180 void ZDO_Init( void )
ZDO_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ZDO_Init
        CODE
//  181 {
        FUNCALL ZDO_Init, sAddrExtCpy
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, APS_ReflectorInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, NLME_DeviceJoiningInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  182   // Initialize ZD items
//  183   #if defined ( REFLECTOR )
//  184   ZDO_EDBind = NULL;
        MOV     DPTR,#ZDO_EDBind
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  185   #endif
//  186 
//  187   // Initialize default ZDO_UseExtendedPANID to the APS one.
//  188   osal_cpyExtAddr( ZDO_UseExtendedPANID, AIB_apsUseExtendedPANID );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,#AIB_apsUseExtendedPANID & 0xff
        MOV     R5,#(AIB_apsUseExtendedPANID >> 8) & 0xff
        MOV     R2,#ZDO_UseExtendedPANID & 0xff
        MOV     R3,#(ZDO_UseExtendedPANID >> 8) & 0xff
        LCALL   ??sAddrExtCpy?relay  ; Banked call to: sAddrExtCpy
//  189 
//  190   // Setup the device - type of device to create.
//  191   ZDODeviceSetup();
        ; Setup parameters for call to function APS_ReflectorInit
        LCALL   ??APS_ReflectorInit?relay; Banked call to: APS_ReflectorInit
        ; Setup parameters for call to function NLME_DeviceJoiningInit
        LCALL   ??NLME_DeviceJoiningInit?relay; Banked call to: NLME_DeviceJoiningInit
          CFI EndBlock cfiBlock0
//  192 }
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP     DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP    ?BRET
          CFI EndBlock cfiBlock1
//  193 
//  194 #if defined ( MANAGED_SCAN )
//  195 /*********************************************************************
//  196  * @fn      ZDOManagedScan_Next()
//  197  *
//  198  * @brief   Setup a managed scan.
//  199  *
//  200  * @param   none
//  201  *
//  202  * @return  none
//  203  */
//  204 static void ZDOManagedScan_Next( void )
//  205 {
//  206   // Is it the first time
//  207   if ( managedScanNextChannel == 0 && managedScanTimesPerChannel == 0 )
//  208   {
//  209     // Setup the defaults
//  210     managedScanNextChannel  = 1;
//  211 
//  212     while( managedScanNextChannel && (zgDefaultChannelList & managedScanNextChannel) == 0 )
//  213       managedScanNextChannel <<= 1;
//  214 
//  215     managedScanChannelMask = managedScanNextChannel;
//  216     managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  217   }
//  218   else
//  219   {
//  220     // Do we need to go to the next channel
//  221     if ( managedScanTimesPerChannel == 0 )
//  222     {
//  223       // Find next active channel
//  224       managedScanChannelMask  = managedScanNextChannel;
//  225       managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  226     }
//  227     else
//  228     {
//  229       managedScanTimesPerChannel--;
//  230 
//  231       if ( managedScanTimesPerChannel == 0 )
//  232       {
//  233         managedScanNextChannel  <<= 1;
//  234         while( managedScanNextChannel && (zgDefaultChannelList & managedScanNextChannel) == 0 )
//  235           managedScanNextChannel <<= 1;
//  236 
//  237         if ( managedScanNextChannel == 0 )
//  238           zdoDiscCounter  = NUM_DISC_ATTEMPTS + 1; // Stop
//  239       }
//  240     }
//  241   }
//  242 }
//  243 #endif // MANAGED_SCAN
//  244 
//  245 /*********************************************************************
//  246  * @fn      ZDODeviceSetup()
//  247  *
//  248  * @brief   Call set functions depending on the type of device compiled.
//  249  *
//  250  * @param   none
//  251  *
//  252  * @return  none
//  253  */
//  254 static void ZDODeviceSetup( void )
//  255 {
//  256   if ( ZG_BUILD_COORDINATOR_TYPE )
//  257   {
//  258     NLME_CoordinatorInit();
//  259   }
//  260 
//  261 #if defined ( REFLECTOR )
//  262   APS_ReflectorInit();
//  263 #endif
//  264 
//  265   if ( ZG_BUILD_JOINING_TYPE )
//  266   {
//  267     NLME_DeviceJoiningInit();
//  268   }
//  269 }
//  270 
//  271 /*********************************************************************
//  272  * @fn          ZDO_StartDevice
//  273  *
//  274  * @brief       This function starts a device in a network.
//  275  *
//  276  * @param       logicalType     - Device type to start
//  277  *              startMode       - indicates mode of device startup
//  278  *              beaconOrder     - indicates time betwen beacons
//  279  *              superframeOrder - indicates length of active superframe
//  280  *
//  281  * @return      none
//  282  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  283 void ZDO_StartDevice( byte logicalType, devStartModes_t startMode, byte beaconOrder, byte superframeOrder )
ZDO_StartDevice:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function ZDO_StartDevice
        CODE
//  284 {
        FUNCALL ZDO_StartDevice, NLME_NetworkDiscoveryRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, nwk_ScanJoiningOrphan
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, NLME_OrphanJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 11
        MOV     A,#-0xb
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0,R1
        MOV     ?V1,R2
//  285   ZStatus_t ret;
//  286 #if defined ( ZIGBEE_FREQ_AGILITY )
//  287   static uint8 discRetries = 0;
//  288 #endif
//  289 #if defined ( ZIGBEE_COMMISSIONING )
//  290   static uint8 scanCnt = 0;
//  291 #endif
//  292 
//  293   ret = ZUnsupportedMode;
//  294 
//  295   if ( ZG_BUILD_COORDINATOR_TYPE && logicalType == NODETYPE_COORDINATOR )
//  296   {
//  297     if ( startMode == MODE_HARD )
//  298     {
//  299       devState = DEV_COORD_STARTING;
//  300       ret = NLME_NetworkFormationRequest( zgConfigPANID, zgApsUseExtendedPANID, zgDefaultChannelList,
//  301                                           zgDefaultStartingScanDuration, beaconOrder,
//  302                                           superframeOrder, false );
//  303     }
//  304     else if ( startMode == MODE_RESUME )
//  305     {
//  306       // Just start the coordinator
//  307       devState = DEV_COORD_STARTING;
//  308       ret = NLME_StartRouterRequest( beaconOrder, beaconOrder, false );
//  309     }
//  310     else
//  311     {
//  312 #if defined( LCD_SUPPORTED )
//  313       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  314 #endif
//  315     }
//  316   }
//  317 
//  318   if ( ZG_BUILD_JOINING_TYPE && (logicalType == NODETYPE_ROUTER || logicalType == NODETYPE_DEVICE) )
        MOV     A,#0x1
        XRL     A,?V0
        JZ      ??ZDO_StartDevice_0
        MOV     A,#0x2
        XRL     A,?V0
        JZ      $+5
        LJMP    ??ZDO_StartDevice_1 & 0xFFFF
//  319   {
//  320     if ( (startMode == MODE_JOIN) || (startMode == MODE_REJOIN) )
??ZDO_StartDevice_0:
        MOV     A,R2
        JZ      ??ZDO_StartDevice_2
        MOV     A,#0x3
        XRL     A,?V1
        JNZ     ??ZDO_StartDevice_3
//  321     {
//  322       devState = DEV_NWK_DISC;
??ZDO_StartDevice_2:
        MOV     DPTR,#devState
        MOV     A,#0x2
        LCALL   ?Subroutine45 & 0xFFFF
//  323 
//  324   #if defined( MANAGED_SCAN )
//  325       ZDOManagedScan_Next();
//  326       ret = NLME_NetworkDiscoveryRequest( managedScanChannelMask, BEACON_ORDER_15_MSEC );
//  327   #else
//  328       ret = NLME_NetworkDiscoveryRequest( zgDefaultChannelList, zgDefaultStartingScanDuration );
??CrossCallReturnLabel_72:
        LCALL   ?XLOAD_R2345
        LCALL   ??NLME_NetworkDiscoveryRequest?relay; Banked call to: NLME_NetworkDiscoveryRequest
        MOV     A,R1
        MOV     R1,A
//  329     #if defined ( ZIGBEE_FREQ_AGILITY )
//  330       if ( !( ZDO_Config_Node_Descriptor.CapabilityFlags & CAPINFO_RCVR_ON_IDLE ) &&
//  331             ( ret == ZSuccess ) && ( ++discRetries == 4 ) )
//  332       {
//  333         // For devices with RxOnWhenIdle equals to FALSE, any network channel
//  334         // change will not be recieved. On these devices or routers that have
//  335         // lost the network, an active scan shall be conducted on the Default
//  336         // Channel list using the extended PANID to find the network. If the
//  337         // extended PANID isn't found using the Default Channel list, an scan
//  338         // should be completed using all channels.
//  339         zgDefaultChannelList = MAX_CHANNELS_24GHZ;
//  340       }
//  341     #endif // ZIGBEE_FREQ_AGILITY
//  342     #if defined ( ZIGBEE_COMMISSIONING )
//  343       if (startMode == MODE_REJOIN && scanCnt++ >= 5 )
        MOV     A,#0x3
        XRL     A,?V1
        JNZ     ??ZDO_StartDevice_4
        MOV     DPTR,#??scanCnt
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x1
        ADD     A,R0
        MOVX    @DPTR,A
        MOV     A,R0
        CLR     C
        SUBB    A,#0x5
        JC      ??ZDO_StartDevice_4
//  344       {
//  345         // When ApsUseExtendedPanID is commissioned to a non zero value via
//  346         // application specific means, the device shall conduct an active scan
//  347         // on the Default Channel list and join the PAN with the same
//  348         // ExtendedPanID. If the PAN is not found, an scan should be completed
//  349         // on all channels.
//  350         // When devices rejoin the network and the PAN is not found from
//  351         zgDefaultChannelList = MAX_CHANNELS_24GHZ;
        MOV     DPTR,#zgDefaultChannelList
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x8
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x7
        MOVX    @DPTR,A
        SJMP    ??ZDO_StartDevice_4
//  352       }
//  353     #endif // ZIGBEE_COMMISSIONING
//  354   #endif
//  355     }
//  356     else if ( startMode == MODE_RESUME )
??ZDO_StartDevice_3:
        MOV     A,#0x1
        XRL     A,?V1
        JNZ     ??ZDO_StartDevice_1
//  357     {
//  358       if ( logicalType == NODETYPE_ROUTER )
        MOV     A,#0x1
        XRL     A,?V0
        MOV     DPTR,#devState
        JNZ     ??ZDO_StartDevice_5
//  359       {
//  360         ZMacScanCnf_t scanCnf;
//  361         devState = DEV_NWK_ORPHAN;
        MOV     A,#0xa
        MOVX    @DPTR,A
//  362 
//  363         /* if router and nvram is available, fake successful orphan scan */
//  364         scanCnf.hdr.Status = ZSUCCESS;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
//  365         scanCnf.ScanType = ZMAC_ORPHAN_SCAN;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
//  366         scanCnf.UnscannedChannels = 0;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  367         scanCnf.ResultListSize = 0;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
//  368         nwk_ScanJoiningOrphan(&scanCnf);
        ; Setup parameters for call to function nwk_ScanJoiningOrphan
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   ??nwk_ScanJoiningOrphan?relay; Banked call to: nwk_ScanJoiningOrphan
//  369 
//  370         ret = ZSuccess;
        SJMP    ??ZDO_StartDevice_6
//  371       }
//  372       else
//  373       {
//  374         devState = DEV_NWK_ORPHAN;
??ZDO_StartDevice_5:
        MOV     A,#0xa
        LCALL   ?Subroutine45 & 0xFFFF
//  375         ret = NLME_OrphanJoinRequest( zgDefaultChannelList,
//  376                                       zgDefaultStartingScanDuration );
//  377       }
//  378     }
//  379     else
//  380     {
//  381 #if defined( LCD_SUPPORTED )
//  382       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  383 #endif
//  384     }
//  385   }
??CrossCallReturnLabel_73:
        LCALL   ?XLOAD_R2345
        LCALL   ??NLME_OrphanJoinRequest?relay; Banked call to: NLME_OrphanJoinRequest
        MOV     A,R1
        MOV     R1,A
//  386 
//  387   if ( ret != ZSuccess )
??ZDO_StartDevice_4:
        MOV     A,R1
        JZ      ??ZDO_StartDevice_6
//  388   {
//  389     osal_start_timerEx(ZDAppTaskID, ZDO_NETWORK_INIT, NWK_RETRY_DELAY );
??ZDO_StartDevice_1:
        ; Setup parameters for call to function osal_start_timerEx
        MOV     DPTR,#__Constant_3e8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay; Banked call to: osal_start_timerEx
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
//  390   }
//  391 }
??ZDO_StartDevice_6:
        MOV     A,#0xb
        LJMP    ??Subroutine160_0 & 0xFFFF
          CFI EndBlock cfiBlock2

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond3 Using cfiCommon0
          CFI Function ZDO_StartDevice
          CFI Conditional ??CrossCallReturnLabel_72
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond4 Using cfiCommon0
          CFI (cfiCond4) Function ZDO_StartDevice
          CFI (cfiCond4) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond4) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond4) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond4) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond4) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond4) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond4) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond4) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond4) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond4) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond4) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond4) CFA_SP SP+-2
          CFI (cfiCond4) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker5 Using cfiCommon1
          CFI (cfiPicker5) NoFunction
          CFI (cfiPicker5) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function NLME_NetworkDiscoveryRequest
        ; Setup parameters for call to function NLME_OrphanJoinRequest
        MOV     DPTR,#zgDefaultStartingScanDuration
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPTR,#zgDefaultChannelList
        RET
          CFI EndBlock cfiCond3
          CFI EndBlock cfiCond4
          CFI EndBlock cfiPicker5

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
??scanCnt:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  392 
//  393 /**************************************************************************************************
//  394  * @fn          zdoSendStateChangeMsg
//  395  *
//  396  * @brief       Helper function for ZDO_UpdateNwkStatus.
//  397  *
//  398  * input parameters
//  399  *
//  400  * @param       taskId - The OSAL task identifier to which to send the ZDO_STATE_CHANGE_EVT.
//  401  * @param       state - The current device state.
//  402  *
//  403  * output parameters
//  404  *
//  405  * None.
//  406  *
//  407  * @return      None.
//  408  **************************************************************************************************
//  409  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  410 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId)
zdoSendStateChangeMsg:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function zdoSendStateChangeMsg
        CODE
//  411 {
        FUNCALL zdoSendStateChangeMsg, osal_msg_find
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
        MOV     A,R2
        MOV     R6,A
//  412   osal_event_hdr_t *pMsg = (osal_event_hdr_t *)osal_msg_find(taskId, ZDO_STATE_CHANGE);
        ; Setup parameters for call to function osal_msg_find
        MOV     R2,#-0x2f
        MOV     R1,A
        LCALL   ??osal_msg_find?relay; Banked call to: osal_msg_find
        MOV     DPL,R2
        MOV     DPH,R3
//  413 
//  414   if (NULL == pMsg)
        MOV     A,DPL
        ORL     A,DPH
        JNZ     ??zdoSendStateChangeMsg_0
//  415   {
//  416     if (NULL == (pMsg = (osal_event_hdr_t *)osal_msg_allocate(sizeof(osal_event_hdr_t))))
        ; Setup parameters for call to function osal_msg_allocate
        MOV     R2,#0x2
        MOV     R3,#0x0
        LCALL   ??osal_msg_allocate?relay; Banked call to: osal_msg_allocate
        MOV     A,R2
        ORL     A,R3
        JNZ     ??zdoSendStateChangeMsg_1
//  417     {
//  418       // Upon failure to notify any EndPoint of the state change, re-set the ZDO event to
//  419       // try again later when more Heap may be available.
//  420       osal_set_event(ZDAppTaskID, ZDO_STATE_CHANGE_EVT);
        ; Setup parameters for call to function osal_set_event
        MOV     R2,#0x10
        MOV     R3,#0x0
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_set_event?relay; Banked call to: osal_set_event
        SJMP    ??zdoSendStateChangeMsg_2
//  421     }
//  422     else
//  423     {
//  424       pMsg->event = ZDO_STATE_CHANGE;
??zdoSendStateChangeMsg_1:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x2f
        MOVX    @DPTR,A
//  425       pMsg->status = state;
        MOV     A,R7
        INC     DPTR
        MOVX    @DPTR,A
//  426 
//  427       (void)osal_msg_send(taskId, (uint8 *)pMsg);
        ; Setup parameters for call to function osal_msg_send
        MOV     A,R6
        MOV     R1,A
        LCALL   ??osal_msg_send?relay; Banked call to: osal_msg_send
        SJMP    ??zdoSendStateChangeMsg_2
//  428     }
//  429   }
//  430   else
//  431   {
//  432     // Modify in place the status of an existing ZDO_STATE_CHANGE message to the EndPoint.
//  433     pMsg->status = state;
??zdoSendStateChangeMsg_0:
        MOV     A,R7
        INC     DPTR
        MOVX    @DPTR,A
//  434   }
//  435 }
??zdoSendStateChangeMsg_2:
        LJMP    ??Subroutine161_0 & 0xFFFF
          CFI EndBlock cfiBlock6
//  436 
//  437 /**************************************************************************************************
//  438  * @fn          ZDO_UpdateNwkStatus
//  439  *
//  440  * @brief       This function sends a ZDO_STATE_CHANGE message to the task of every EndPoint
//  441  *              registered with AF (except, of course, the ZDO_EP). Even if a single task has more
//  442  *              than one registered EndPoint, it will only receive one notification per state
//  443  *              change. Although the device may go through a sequence of state changes, the
//  444  *              Application task may only receive notification of the final, steady-state state
//  445  *              because it has the lowest priority and never even runs to receive the intermediate
//  446  *              state change notifications.
//  447  *
//  448  * input parameters
//  449  *
//  450  * @param       state - The current device state.
//  451  *
//  452  * output parameters
//  453  *
//  454  * None.
//  455  *
//  456  * @return      None.
//  457  **************************************************************************************************
//  458  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  459 void ZDO_UpdateNwkStatus(devStates_t state)
ZDO_UpdateNwkStatus:
          CFI Block cfiBlock7 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
        CODE
//  460 {
        FUNCALL ZDO_UpdateNwkStatus, zdoSendStateChangeMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, zdoSendStateChangeMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     ?V0,R1
//  461   epList_t *pItem = epList;
        MOV     DPTR,#epList
        LCALL   ??Subroutine158_0 & 0xFFFF
??CrossCallReturnLabel_247:
        SJMP    ??CrossCallReturnLabel_139
//  462 
//  463 #if defined MT_ZDO_CB_FUNC
//  464   if ( zdpExternalStateTaskID == -1 )
//  465   {
//  466     zdpExternalStateTaskID = MT_TaskID;
//  467   }
//  468 #endif
//  469 
//  470   while (pItem != NULL)
//  471   {
//  472     if (pItem->epDesc->endPoint != ZDO_EP)
??ZDO_UpdateNwkStatus_0:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_321:
        JZ      ??ZDO_UpdateNwkStatus_1
//  473     {
//  474       zdoSendStateChangeMsg(state, *(pItem->epDesc->task_id));
        ; Setup parameters for call to function zdoSendStateChangeMsg
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine56 & 0xFFFF
//  475     }
??CrossCallReturnLabel_323:
        MOV     R2,A
        MOV     R1,?V0
        LCALL   ??zdoSendStateChangeMsg?relay; Banked call to: zdoSendStateChangeMsg
//  476 
//  477     pItem = pItem->nextDesc;
??ZDO_UpdateNwkStatus_1:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine83 & 0xFFFF
//  478   }
??CrossCallReturnLabel_139:
        MOV     R7,A
        MOV     A,R6
        ORL     A,R7
        JNZ     ??ZDO_UpdateNwkStatus_0
//  479   
//  480   if ( zdpExternalStateTaskID != -1 )
        MOV     DPTR,#zdpExternalStateTaskID
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDO_UpdateNwkStatus_2
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
??ZDO_UpdateNwkStatus_2:
        JZ      ??ZDO_UpdateNwkStatus_3
//  481   {  
//  482     zdoSendStateChangeMsg( state, zdpExternalStateTaskID );
        ; Setup parameters for call to function zdoSendStateChangeMsg
        MOV     DPTR,#zdpExternalStateTaskID
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     R1,?V0
        LCALL   ??zdoSendStateChangeMsg?relay; Banked call to: zdoSendStateChangeMsg
//  483   }
//  484   
//  485   ZDAppNwkAddr.addr.shortAddr = NLME_GetShortAddr();
??ZDO_UpdateNwkStatus_3:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay; Banked call to: NLME_GetShortAddr
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?Subroutine51 & 0xFFFF
//  486   (void)NLME_GetExtAddr();  // Load the saveExtAddr pointer.
??CrossCallReturnLabel_84:
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   ??NLME_GetExtAddr?relay; Banked call to: NLME_GetExtAddr
          CFI EndBlock cfiBlock7
//  487 }
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock8
//  488 
//  489 #if defined ( REFLECTOR )
//  490 /*********************************************************************
//  491  * @fn          ZDO_RemoveEndDeviceBind
//  492  *
//  493  * @brief       Remove the end device bind
//  494  *
//  495  * @param  none
//  496  *
//  497  * @return      none
//  498  */
//  499 static void ZDO_RemoveEndDeviceBind( void )
//  500 {
//  501   if ( ZDO_EDBind != NULL )
//  502   {
//  503     // Free the RAM
//  504     if ( ZDO_EDBind->inClusters != NULL )
//  505     {
//  506       osal_mem_free( ZDO_EDBind->inClusters );
//  507     }
//  508     if ( ZDO_EDBind->outClusters != NULL )
//  509     {
//  510       osal_mem_free( ZDO_EDBind->outClusters );
//  511     }
//  512     osal_mem_free( ZDO_EDBind );
//  513     ZDO_EDBind = NULL;
//  514   }
//  515 }
//  516 #endif // REFLECTOR
//  517 
//  518 #if defined ( REFLECTOR )
//  519 /*********************************************************************
//  520  * @fn          ZDO_RemoveEndDeviceBind
//  521  *
//  522  * @brief       Remove the end device bind
//  523  *
//  524  * @param  none
//  525  *
//  526  * @return      none
//  527  */
//  528 static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse )
//  529 {
//  530   ZDP_EndDeviceBindRsp( TransSeq, dstAddr, Status, secUse );
//  531 
//  532 #if defined( LCD_SUPPORTED )
//  533   HalLcdWriteString( "End Device Bind", HAL_LCD_LINE_1 );
//  534   if ( Status == ZDP_SUCCESS )
//  535   {
//  536     HalLcdWriteString( "Success Sent", HAL_LCD_LINE_2 );
//  537   }
//  538   else
//  539   {
//  540     HalLcdWriteString( "Timeout", HAL_LCD_LINE_2 );
//  541   }
//  542 #endif
//  543 
//  544 }
//  545 #endif // REFLECTOR
//  546 
//  547 #if ( ZG_BUILD_COORDINATOR_TYPE )
//  548 /*********************************************************************
//  549  * @fn          ZDO_CompareClusterLists
//  550  *
//  551  * @brief       Compare one list to another list
//  552  *
//  553  * @param       numList1 - number of items in list 1
//  554  * @param       list1 - first list of cluster IDs
//  555  * @param       numList2 - number of items in list 2
//  556  * @param       list2 - second list of cluster IDs
//  557  * @param       pMatches - buffer to put matches
//  558  *
//  559  * @return      number of matches
//  560  */
//  561 static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
//  562                           byte numList2, uint16 *list2, uint16 *pMatches )
//  563 {
//  564   byte x, y;
//  565   uint16 z;
//  566   byte numMatches = 0;
//  567 
//  568   // Check the first in against the seconds out
//  569   for ( x = 0; x < numList1; x++ )
//  570   {
//  571     for ( y = 0; y < numList2; y++ )
//  572     {
//  573       z = list2[y];
//  574       if ( list1[x] == z )
//  575       {
//  576         pMatches[numMatches++] = z;
//  577       }
//  578     }
//  579   }
//  580 
//  581   return ( numMatches );
//  582 }
//  583 #endif // ZG_BUILD_COORDINATOR_TYPE
//  584 
//  585 /*********************************************************************
//  586  * Utility functions
//  587  */
//  588 
//  589 /*********************************************************************
//  590  * @fn          ZDO_CompareByteLists
//  591  *
//  592  * @brief       Compares two lists for matches.
//  593  *
//  594  * @param       ACnt  - number of entries in list A
//  595  * @param       AList  - List A
//  596  * @param       BCnt  - number of entries in list B
//  597  * @param       BList  - List B
//  598  *
//  599  * @return      true if a match is found
//  600  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  601 byte ZDO_AnyClusterMatches( byte ACnt, uint16 *AList, byte BCnt, uint16 *BList )
ZDO_AnyClusterMatches:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
        CODE
//  602 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V3,R1
        MOV     ?V2,R4
//  603   byte x, y;
//  604 
//  605   for ( x = 0; x < ACnt; x++ )
        MOV     ?V0,#0x0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_340:
        MOV     A,R0
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        SJMP    ??ZDO_AnyClusterMatches_0
??ZDO_AnyClusterMatches_1:
        INC     ?V0
??ZDO_AnyClusterMatches_0:
        MOV     A,?V0
        CLR     C
        SUBB    A,?V3
        JNC     ??ZDO_AnyClusterMatches_2
//  606   {
//  607     for ( y = 0; y < BCnt; y++ )
        MOV     ?V1,#0x0
        SJMP    ??ZDO_AnyClusterMatches_3
??ZDO_AnyClusterMatches_4:
        INC     ?V1
??ZDO_AnyClusterMatches_3:
        MOV     A,?V1
        CLR     C
        SUBB    A,?V2
        JNC     ??ZDO_AnyClusterMatches_1
//  608     {
//  609       if ( AList[x] == BList[y] )
        MOV     R0,?V0
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_225:
        MOV     A,R2
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,R1
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_250:
        MOV     R7,A
        MOV     R0,?V1
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_143:
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??ZDO_AnyClusterMatches_5
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
??ZDO_AnyClusterMatches_5:
        JNZ     ??ZDO_AnyClusterMatches_4
//  610       {
//  611         return true;
        MOV     R1,#0x1
        SJMP    ??ZDO_AnyClusterMatches_6
//  612       }
//  613     }
//  614   }
//  615 
//  616   return false;
??ZDO_AnyClusterMatches_2:
        MOV     R1,#0x0
??ZDO_AnyClusterMatches_6:
        SJMP    ??Subroutine159_0
          CFI EndBlock cfiBlock9
//  617 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond10 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_250
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond11 Using cfiCommon0
          CFI (cfiCond11) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond11) Conditional ??CrossCallReturnLabel_251
          CFI (cfiCond11) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond11) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond11) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond11) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond11) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond11) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond11) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond11) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond11) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond11) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond11) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond11) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond11) CFA_SP SP+-2
          CFI (cfiCond11) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond12 Using cfiCommon0
          CFI (cfiCond12) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond12) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond12) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond12) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond12) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond12) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond12) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond12) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond12) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond12) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond12) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond12) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond12) CFA_SP SP+-2
          CFI (cfiCond12) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker13 Using cfiCommon1
          CFI (cfiPicker13) NoFunction
          CFI (cfiPicker13) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond10
          CFI EndBlock cfiCond11
          CFI EndBlock cfiCond12
          CFI EndBlock cfiPicker13
        REQUIRE ??Subroutine158_0
        ; // Fall through to label ??Subroutine158_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine158_0:
          CFI Block cfiCond14 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_247
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function ZDO_ConvertOTAClusters
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond15) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond15) CFA_SP SP+-2
          CFI (cfiCond15) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+-2
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond17 Using cfiCommon0
          CFI (cfiCond17) Function ZDO_AnyClusterMatches
          CFI (cfiCond17) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond17) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond17) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond17) CFA_SP SP+-2
          CFI (cfiCond17) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond18 Using cfiCommon0
          CFI (cfiCond18) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond18) Conditional ??CrossCallReturnLabel_251
          CFI (cfiCond18) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond18) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond18) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond18) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond18) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond18) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond18) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond18) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond18) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond18) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond18) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond18) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond18) CFA_SP SP+-2
          CFI (cfiCond18) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond19 Using cfiCommon0
          CFI (cfiCond19) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond19) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond19) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond19) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond19) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond19) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond19) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond19) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond19) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond19) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond19) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond19) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond19) CFA_SP SP+-2
          CFI (cfiCond19) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker20 Using cfiCommon1
          CFI (cfiPicker20) NoFunction
          CFI (cfiPicker20) Picker
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiCond17
          CFI EndBlock cfiCond18
          CFI EndBlock cfiCond19
          CFI EndBlock cfiPicker20

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock21 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock21
        REQUIRE ??Subroutine159_0
        ; // Fall through to label ??Subroutine159_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine159_0:
          CFI Block cfiBlock22 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock22
//  618 
//  619 /*********************************************************************
//  620  * Callback functions from ZDProfile
//  621  */
//  622 
//  623 /*********************************************************************
//  624  * @fn          ZDO_ProcessNodeDescReq
//  625  *
//  626  * @brief       This function processes and responds to the
//  627  *              Node_Desc_req message.
//  628  *
//  629  * @param       inMsg - incoming message
//  630  *
//  631  * @return      none
//  632  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  633 void ZDO_ProcessNodeDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessNodeDescReq:
          CFI Block cfiBlock23 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
        CODE
//  634 {
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_NodeDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine57 & 0xFFFF
//  635   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  636   NodeDescriptorFormat_t *desc = NULL;
//  637 
//  638   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_94:
        JNZ     ??ZDO_ProcessNodeDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R5
??ZDO_ProcessNodeDescReq_0:
        JNZ     ??ZDO_ProcessNodeDescReq_1
//  639   {
//  640     desc = &ZDO_Config_Node_Descriptor;
//  641   }
//  642 
//  643   if ( desc != NULL )
//  644   {
//  645     ZDP_NodeDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_NodeDescMsg
        MOV     ?V0,#ZDO_Config_Node_Descriptor & 0xff
        MOV     ?V1,#(ZDO_Config_Node_Descriptor >> 8) & 0xff
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R6
        MOV     R2,A
        LCALL   ??ZDP_NodeDescMsg?relay; Banked call to: ZDP_NodeDescMsg
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP    ??ZDO_ProcessNodeDescReq_2
//  646   }
//  647   else
//  648   {
//  649     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  650               ZDP_INVALID_REQTYPE, aoi, Node_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessNodeDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V0,#0x2
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0,R4
        MOV     ?V1,R5
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine59 & 0xFFFF
//  651   }
??CrossCallReturnLabel_98:
        LCALL   ??ZDP_GenericRsp?relay; Banked call to: ZDP_GenericRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  652 }
??ZDO_ProcessNodeDescReq_2:
        SJMP    ??Subroutine161_0
          CFI EndBlock cfiBlock23

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock24 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
          CFI EndBlock cfiBlock24
        REQUIRE ??Subroutine160_0
        ; // Fall through to label ??Subroutine160_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine160_0:
          CFI Block cfiBlock25 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock25
        REQUIRE ??Subroutine161_0
        ; // Fall through to label ??Subroutine161_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine161_0:
          CFI Block cfiBlock26 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock26
//  653 
//  654 /*********************************************************************
//  655  * @fn          ZDO_ProcessPowerDescReq
//  656  *
//  657  * @brief       This function processes and responds to the
//  658  *              Node_Power_req message.
//  659  *
//  660  * @param       inMsg  - incoming request
//  661  *
//  662  * @return      none
//  663  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  664 void ZDO_ProcessPowerDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessPowerDescReq:
          CFI Block cfiBlock27 Using cfiCommon0
          CFI Function ZDO_ProcessPowerDescReq
        CODE
//  665 {
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_PowerDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine57 & 0xFFFF
//  666   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  667   NodePowerDescriptorFormat_t *desc = NULL;
//  668 
//  669   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_95:
        JNZ     ??ZDO_ProcessPowerDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R5
??ZDO_ProcessPowerDescReq_0:
        JNZ     ??ZDO_ProcessPowerDescReq_1
//  670   {
//  671     desc = &ZDO_Config_Power_Descriptor;
//  672   }
//  673 
//  674   if ( desc != NULL )
//  675   {
//  676     ZDP_PowerDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_PowerDescMsg
        MOV     ?V0,#ZDO_Config_Power_Descriptor & 0xff
        MOV     ?V1,#(ZDO_Config_Power_Descriptor >> 8) & 0xff
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R6
        MOV     R2,A
        LCALL   ??ZDP_PowerDescMsg?relay; Banked call to: ZDP_PowerDescMsg
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP    ??ZDO_ProcessPowerDescReq_2
//  677   }
//  678   else
//  679   {
//  680     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  681               ZDP_INVALID_REQTYPE, aoi, Power_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessPowerDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V0,#0x3
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0,R4
        MOV     ?V1,R5
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine59 & 0xFFFF
//  682   }
??CrossCallReturnLabel_99:
        LCALL   ??ZDP_GenericRsp?relay; Banked call to: ZDP_GenericRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  683 }
??ZDO_ProcessPowerDescReq_2:
        SJMP    ??Subroutine161_0
          CFI EndBlock cfiBlock27

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond28 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond29 Using cfiCommon0
          CFI (cfiCond29) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond29) Conditional ??CrossCallReturnLabel_99
          CFI (cfiCond29) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond29) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond29) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond29) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond29) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond29) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond29) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond29) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond29) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond29) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond29) CFA_SP SP+-2
          CFI (cfiCond29) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker30 Using cfiCommon1
          CFI (cfiPicker30) NoFunction
          CFI (cfiPicker30) Picker
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_408:
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,#-0x80
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_223:
        RET
          CFI EndBlock cfiCond28
          CFI EndBlock cfiCond29
          CFI EndBlock cfiPicker30

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond31 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond32 Using cfiCommon0
          CFI (cfiCond32) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond32) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond32) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond32) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond32) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond32) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond32) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond32) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond32) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond32) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond32) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond32) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond32) CFA_SP SP+-2
          CFI (cfiCond32) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker33 Using cfiCommon1
          CFI (cfiPicker33) NoFunction
          CFI (cfiPicker33) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_213:
        MOV     R4,A
        CLR     A
        ADDC    A,R1
        MOV     R5,A
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R4
        RET
          CFI EndBlock cfiCond31
          CFI EndBlock cfiCond32
          CFI EndBlock cfiPicker33
//  684 
//  685 /*********************************************************************
//  686  * @fn          ZDO_ProcessSimpleDescReq
//  687  *
//  688  * @brief       This function processes and responds to the
//  689  *              Simple_Desc_req message.
//  690  *
//  691  * @param       inMsg - incoming message (request)
//  692  *
//  693  * @return      none
//  694  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  695 void ZDO_ProcessSimpleDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessSimpleDescReq:
          CFI Block cfiBlock34 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
        CODE
//  696 {
        FUNCALL ZDO_ProcessSimpleDescReq, afFindSimpleDesc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, ZDP_SimpleDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  697   SimpleDescriptionFormat_t *sDesc = NULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine36 & 0xFFFF
//  698   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
??CrossCallReturnLabel_52:
        LCALL   ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_334:
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     R2,A
//  699   byte endPoint = inMsg->asdu[2];
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
//  700   byte free = false;
        MOV     ?V1,#0x0
//  701   byte stat = ZDP_SUCCESS;
        MOV     ?V0,#0x0
//  702 
//  703   if ( (endPoint == ZDO_EP) || (endPoint > MAX_ENDPOINTS) )
        JZ      ??ZDO_ProcessSimpleDescReq_0
        MOV     A,#-0x1
        XRL     A,R1
        JNZ     ??ZDO_ProcessSimpleDescReq_1
//  704   {
//  705     stat = ZDP_INVALID_EP;
??ZDO_ProcessSimpleDescReq_0:
        MOV     ?V0,#-0x7e
        SJMP    ??ZDO_ProcessSimpleDescReq_2
//  706   }
//  707   else if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??ZDO_ProcessSimpleDescReq_1:
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??ZDO_ProcessSimpleDescReq_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??ZDO_ProcessSimpleDescReq_3:
        JNZ     ??ZDO_ProcessSimpleDescReq_4
//  708   {
//  709     free = afFindSimpleDesc( &sDesc, endPoint );
        ; Setup parameters for call to function afFindSimpleDesc
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   ??afFindSimpleDesc?relay; Banked call to: afFindSimpleDesc
        MOV     A,R1
        MOV     ?V1,A
//  710     if ( sDesc == NULL )
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_296:
        JNZ     ??ZDO_ProcessSimpleDescReq_2
//  711     {
//  712       stat = ZDP_NOT_ACTIVE;
        MOV     ?V0,#-0x7d
        SJMP    ??ZDO_ProcessSimpleDescReq_2
//  713     }
//  714   }
//  715   else
//  716   {
//  717     if ( ZSTACK_ROUTER_BUILD )
//  718     {
//  719       stat = ZDP_DEVICE_NOT_FOUND;
//  720     }
//  721     else if ( ZSTACK_END_DEVICE_BUILD )
//  722     {
//  723       stat = ZDP_INVALID_REQTYPE;
??ZDO_ProcessSimpleDescReq_4:
        MOV     ?V0,#-0x80
//  724     }
//  725   }
//  726 
//  727   ZDP_SimpleDescMsg( inMsg, stat, sDesc );
??ZDO_ProcessSimpleDescReq_2:
        ; Setup parameters for call to function ZDP_SimpleDescMsg
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R1,?V0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??ZDP_SimpleDescMsg?relay; Banked call to: ZDP_SimpleDescMsg
//  728 
//  729   if ( free && sDesc )
        MOV     A,?V1
        JZ      ??ZDO_ProcessSimpleDescReq_5
        LCALL   ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_297:
        JZ      ??ZDO_ProcessSimpleDescReq_5
//  730   {
//  731     osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ??Subroutine200_0 & 0xFFFF
//  732   }
??CrossCallReturnLabel_462:
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
//  733 }
??ZDO_ProcessSimpleDescReq_5:
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock34
//  734 
//  735 /*********************************************************************
//  736  * @fn          ZDO_ProcessActiveEPReq
//  737  *
//  738  * @brief       This function processes and responds to the
//  739  *              Active_EP_req message.
//  740  *
//  741  * @param       inMsg  - incoming message (request)
//  742  *
//  743  * @return      none
//  744  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  745 void ZDO_ProcessActiveEPReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessActiveEPReq:
          CFI Block cfiBlock35 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
        CODE
//  746 {
        FUNCALL ZDO_ProcessActiveEPReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afNumEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  747   byte cnt = 0;
        MOV     ?V0,#0x0
//  748   uint16 aoi;
//  749   byte stat = ZDP_SUCCESS;
        MOV     ?V1,#0x0
//  750 
//  751   aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_100:
        MOV     ?V2,A
        CLR     A
        ADDC    A,R1
        MOV     ?V3,A
//  752 
//  753   if ( aoi == NLME_GetShortAddr() )
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay; Banked call to: NLME_GetShortAddr
        MOV     A,R2
        XRL     A,?V2
        JNZ     ??ZDO_ProcessActiveEPReq_0
        MOV     A,R3
        XRL     A,?V3
??ZDO_ProcessActiveEPReq_0:
        JNZ     ??ZDO_ProcessActiveEPReq_1
//  754   {
//  755     cnt = afNumEndPoints() - 1;  // -1 for ZDO endpoint descriptor
        ; Setup parameters for call to function afNumEndPoints
        LCALL   ??afNumEndPoints?relay; Banked call to: afNumEndPoints
        MOV     A,R1
        DEC     A
        MOV     ?V0,A
//  756     afEndPoints( (uint8 *)ZDOBuildBuf, true );
        ; Setup parameters for call to function afEndPoints
        MOV     R1,#0x1
        MOV     R2,#ZDOBuildBuf & 0xff
        MOV     R3,#(ZDOBuildBuf >> 8) & 0xff
        LCALL   ??afEndPoints?relay  ; Banked call to: afEndPoints
        SJMP    ??ZDO_ProcessActiveEPReq_2
//  757   }
//  758   else
//  759   {
//  760     stat = ZDP_INVALID_REQTYPE;
??ZDO_ProcessActiveEPReq_1:
        MOV     ?V1,#-0x80
//  761   }
//  762 
//  763   ZDP_ActiveEPRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat,
//  764                   aoi, cnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
??ZDO_ProcessActiveEPReq_2:
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_393:
        MOV     ?V4,A
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V4,#ZDOBuildBuf & 0xff
        MOV     ?V5,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,?V1
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL   ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_330:
        LCALL   ??Subroutine189_0 & 0xFFFF
??CrossCallReturnLabel_389:
        MOV     R1,A
        MOV     R2,#0x5
        MOV     R3,#-0x80
        LCALL   ??ZDP_EPRsp?relay    ; Banked call to: ZDP_EPRsp
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock35
//  765 }
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock36 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock36
//  766 
//  767 /*********************************************************************
//  768  * @fn          ZDO_ConvertOTAClusters
//  769  *
//  770  * @brief       This function will convert the over-the-air cluster list
//  771  *              format to an internal format.
//  772  *
//  773  * @param       inMsg  - incoming message (request)
//  774  *
//  775  * @return      pointer to incremented inBuf
//  776  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  777 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList )
ZDO_ConvertOTAClusters:
          CFI Block cfiBlock37 Using cfiCommon0
          CFI Function ZDO_ConvertOTAClusters
        CODE
//  778 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V1,R1
//  779   uint8 x;
//  780 
//  781   for ( x = 0; x < cnt; x++ )
        MOV     ?V0,#0x0
        SJMP    ??ZDO_ConvertOTAClusters_0
//  782   {
//  783     // convert ota format to internal
//  784     outList[x] = BUILD_UINT16( inBuf[0], inBuf[1] );
??ZDO_ConvertOTAClusters_1:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine158_0 & 0xFFFF
??CrossCallReturnLabel_248:
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R6
        ADD     A,R0
        CLR     A
        ADDC    A,R1
        MOV     R7,A
        MOV     R0,?V0
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_144:
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
//  785     inBuf += sizeof( uint16 );
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        JNC     ??ZDO_ConvertOTAClusters_2
        INC     R3
//  786   }
??ZDO_ConvertOTAClusters_2:
        INC     ?V0
??ZDO_ConvertOTAClusters_0:
        MOV     A,?V0
        CLR     C
        SUBB    A,?V1
        JC      ??ZDO_ConvertOTAClusters_1
//  787   return ( inBuf );
        LJMP    ??Subroutine161_0 & 0xFFFF
          CFI EndBlock cfiBlock37
//  788 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond38 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_143
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond39 Using cfiCommon0
          CFI (cfiCond39) Function ZDO_ConvertOTAClusters
          CFI (cfiCond39) Conditional ??CrossCallReturnLabel_144
          CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond39) CFA_SP SP+-2
          CFI (cfiCond39) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker40 Using cfiCommon1
          CFI (cfiPicker40) NoFunction
          CFI (cfiPicker40) Picker
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_228:
        MOV     A,R4
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,R1
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond38
          CFI EndBlock cfiCond39
          CFI EndBlock cfiPicker40
//  789 
//  790 /*********************************************************************
//  791  * @fn          ZDO_ProcessMatchDescReq
//  792  *
//  793  * @brief       This function processes and responds to the
//  794  *              Match_Desc_req message.
//  795  *
//  796  * @param       inMsg  - incoming message (request)
//  797  *
//  798  * @return      none
//  799  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  800 void ZDO_ProcessMatchDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMatchDescReq:
          CFI Block cfiBlock41 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
        CODE
//  801 {
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 5
        MOV     A,#-0x5
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V14,R2
        MOV     ?V15,R3
//  802   uint8 epCnt = 0;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
//  803   uint8 numInClusters;
//  804   uint16 *inClusters = NULL;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  805   uint8 numOutClusters;
//  806   uint16 *outClusters = NULL;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  807   epList_t *epDesc;
//  808   SimpleDescriptionFormat_t *sDesc = NULL;
//  809   uint8 allocated;
//  810   uint8 *msg;
//  811   uint16 aoi;
//  812   uint16 profileID;
//  813 
//  814   // Parse the incoming message
//  815   msg = inMsg->asdu;
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_281:
        ADDC    A,?V15
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_268:
        MOV     ?V3,A
//  816   aoi = BUILD_UINT16( msg[0], msg[1] );
        MOV     DPL,?V2
        MOV     DPH,A
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_475:
        MOV     R6,A
        CLR     A
        ADDC    A,R1
        MOV     R7,A
//  817   profileID = BUILD_UINT16( msg[2], msg[3] );
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     ?V0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V1,A
//  818   msg += 4;
        MOV     A,?V2
        ADD     A,#0x4
        MOV     ?V2,A
        JNC     ??ZDO_ProcessMatchDescReq_0
        INC     ?V3
//  819 
//  820   if ( ADDR_BCAST_NOT_ME == NLME_IsAddressBroadcast(aoi) )
??ZDO_ProcessMatchDescReq_0:
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??NLME_IsAddressBroadcast?relay; Banked call to: NLME_IsAddressBroadcast
        MOV     A,R1
        XRL     A,#0x1
        JZ      ??ZDO_ProcessMatchDescReq_1
//  821   {
//  822     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  823                           ZDAppNwkAddr.addr.shortAddr, 0, NULL, inMsg->SecurityUse );
//  824     return;
//  825   }
//  826   else if ( (ADDR_NOT_BCAST == NLME_IsAddressBroadcast(aoi)) && (aoi != ZDAppNwkAddr.addr.shortAddr) )
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??NLME_IsAddressBroadcast?relay; Banked call to: NLME_IsAddressBroadcast
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_2
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??ZDO_ProcessMatchDescReq_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
??ZDO_ProcessMatchDescReq_3:
        JZ      ??ZDO_ProcessMatchDescReq_2
//  827   {
//  828     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  829                              ZDAppNwkAddr.addr.shortAddr, 0, NULL, inMsg->SecurityUse );
??ZDO_ProcessMatchDescReq_1:
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_337:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        CLR     A
        MOV     ?V0,A
        MOV     ?V1,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     ?V0,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_159:
        LCALL   ??ZDP_EPRsp?relay    ; Banked call to: ZDP_EPRsp
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
//  830     return;
        LJMP    ??ZDO_ProcessMatchDescReq_4 & 0xFFFF
//  831   }
//  832 
//  833   if ((numInClusters = *msg++) &&
//  834       (inClusters = (uint16*)osal_mem_alloc( numInClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_2:
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_124:
        MOV     ?V8,R0
        JZ      ??ZDO_ProcessMatchDescReq_5
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine184_0 & 0xFFFF
??CrossCallReturnLabel_361:
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_85:
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_285:
        JZ      ??ZDO_ProcessMatchDescReq_5
//  835   {
//  836     msg = ZDO_ConvertOTAClusters( numInClusters, msg, inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine81 & 0xFFFF
//  837   }
??CrossCallReturnLabel_133:
        MOV     R1,?V8
        LCALL   ??ZDO_ConvertOTAClusters?relay; Banked call to: ZDO_ConvertOTAClusters
        MOV     ?V2,R2
        MOV     ?V3,R3
        SJMP    ??ZDO_ProcessMatchDescReq_6
//  838   else
//  839   {
//  840     numInClusters = 0;
??ZDO_ProcessMatchDescReq_5:
        MOV     ?V8,#0x0
//  841   }
//  842 
//  843   if ((numOutClusters = *msg++) &&
//  844       (outClusters = (uint16 *)osal_mem_alloc( numOutClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_6:
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_125:
        MOV     ?V7,R0
        JZ      ??ZDO_ProcessMatchDescReq_7
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine184_0 & 0xFFFF
??CrossCallReturnLabel_362:
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_86:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_286:
        JZ      ??ZDO_ProcessMatchDescReq_7
//  845   {
//  846     msg = ZDO_ConvertOTAClusters( numOutClusters, msg, outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine81 & 0xFFFF
//  847   }
??CrossCallReturnLabel_134:
        MOV     R1,?V7
        LCALL   ??ZDO_ConvertOTAClusters?relay; Banked call to: ZDO_ConvertOTAClusters
        SJMP    ??ZDO_ProcessMatchDescReq_8
//  848   else
//  849   {
//  850     numOutClusters = 0;
??ZDO_ProcessMatchDescReq_7:
        MOV     ?V7,#0x0
//  851   }
//  852 
//  853   // First count the number of endpoints that match.
//  854   epDesc = epList;
??ZDO_ProcessMatchDescReq_8:
        MOV     DPTR,#epList
        SJMP    ??ZDO_ProcessMatchDescReq_9
//  855   while ( epDesc )
//  856   {
//  857     // Don't search endpoint 0 and check if response is allowed
//  858     if ( epDesc->epDesc->endPoint != ZDO_EP && (epDesc->flags&eEP_AllowMatch) )
//  859     {
//  860       if ( epDesc->pfnDescCB )
//  861       {
//  862         sDesc = (SimpleDescriptionFormat_t *)epDesc->pfnDescCB( AF_DESCRIPTOR_SIMPLE, epDesc->epDesc->endPoint );
//  863         allocated = TRUE;
//  864       }
//  865       else
//  866       {
//  867         sDesc = epDesc->epDesc->simpleDesc;
//  868         allocated = FALSE;
//  869       }
//  870 
//  871       // Allow specific ProfileId or Wildcard ProfileID
//  872       if ( sDesc && ( ( sDesc->AppProfId == profileID ) || ( profileID == ZDO_WILDCARD_PROFILE_ID ) ) )
//  873       {
//  874         uint8 *uint8Buf = (uint8 *)ZDOBuildBuf;
//  875 
//  876         // Are there matching input clusters?
//  877         if ((ZDO_AnyClusterMatches( numInClusters, inClusters,
//  878                    sDesc->AppNumInClusters, sDesc->pAppInClusterList )) ||
//  879             // Are there matching output clusters?
//  880             (ZDO_AnyClusterMatches( numOutClusters, outClusters,
//  881                    sDesc->AppNumOutClusters, sDesc->pAppOutClusterList )))
//  882         {
//  883           // Notify the endpoint of the match.
//  884           uint8 bufLen = sizeof( ZDO_MatchDescRspSent_t ) + (numOutClusters + numInClusters) * sizeof(uint16);
//  885           ZDO_MatchDescRspSent_t *pRspSent = (ZDO_MatchDescRspSent_t *) osal_msg_allocate( bufLen );
//  886 
//  887           if (pRspSent)
//  888           {
//  889             pRspSent->hdr.event = ZDO_MATCH_DESC_RSP_SENT;
//  890             pRspSent->nwkAddr = inMsg->srcAddr.addr.shortAddr;
//  891             pRspSent->numInClusters = numInClusters;
//  892             pRspSent->numOutClusters = numOutClusters;
//  893 
//  894             if (numInClusters)
//  895             {
//  896               pRspSent->pInClusters = (uint16*) (pRspSent + 1);
//  897               osal_memcpy(pRspSent->pInClusters, inClusters, numInClusters * sizeof(uint16));
//  898             }
//  899             else
//  900             {
//  901               pRspSent->pInClusters = NULL;
//  902             }
//  903 
//  904             if (numOutClusters)
//  905             {
//  906               pRspSent->pOutClusters = (uint16*)(pRspSent + 1) + numInClusters;
//  907               osal_memcpy(pRspSent->pOutClusters, outClusters, numOutClusters * sizeof(uint16));
//  908             }
//  909             else
//  910             {
//  911               pRspSent->pOutClusters = NULL;
??ZDO_ProcessMatchDescReq_10:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  912             }
//  913 
//  914             osal_msg_send( *epDesc->epDesc->task_id, (uint8 *)pRspSent );
??ZDO_ProcessMatchDescReq_11:
        ; Setup parameters for call to function osal_msg_send
        MOV     R2,?V2
        MOV     R3,?V3
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_324:
        MOV     R1,A
        LCALL   ??osal_msg_send?relay; Banked call to: osal_msg_send
//  915           }
//  916 
//  917           uint8Buf[epCnt++] = sDesc->EndPoint;
??ZDO_ProcessMatchDescReq_12:
        MOV     DPL,?V10
        MOV     DPH,?V11
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#ZDOBuildBuf & 0xff
        ADD     A,R0
        MOV     DPL,A
        CLR     A
        ADDC    A,#(ZDOBuildBuf >> 8) & 0xff
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_91:
        INC     A
        MOVX    @DPTR,A
//  918         }
//  919       }
//  920 
//  921       if ( allocated )
??ZDO_ProcessMatchDescReq_13:
        MOV     A,?V9
        MOV     C,0xE0 /* A   */.0
        JNC     ??ZDO_ProcessMatchDescReq_14
//  922       {
//  923         osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V10
        MOV     R3,?V11
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
//  924       }
//  925     }
//  926     epDesc = epDesc->nextDesc;
??ZDO_ProcessMatchDescReq_14:
        MOV     DPL,?V12
        MOV     DPH,?V13
??ZDO_ProcessMatchDescReq_9:
        MOVX    A,@DPTR
        MOV     ?V12,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V13,A
        MOV     A,?V12
        ORL     A,?V13
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_15 & 0xFFFF
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        LCALL   ??Subroutine175_0 & 0xFFFF
??CrossCallReturnLabel_322:
        JZ      ??ZDO_ProcessMatchDescReq_14
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        JNC     ??ZDO_ProcessMatchDescReq_14
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_287:
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        INC     DPTR
        JZ      ??ZDO_ProcessMatchDescReq_16
        ; Setup parameters for indirect call
        LCALL   ??Subroutine176_0 & 0xFFFF
??CrossCallReturnLabel_315:
        MOV     R2,A
        MOV     R1,#0x1
        MOV     DPL,?V12
        MOV     DPH,?V13
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_141:
        LCALL   ?CALL_IND
        MOV     ?V10,R2
        MOV     ?V11,R3
        MOV     ?V9,#0x1
        SJMP    ??ZDO_ProcessMatchDescReq_17
??ZDO_ProcessMatchDescReq_16:
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_142:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V10,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V11,A
        MOV     ?V9,#0x0
??ZDO_ProcessMatchDescReq_17:
        MOV     A,?V10
        ORL     A,?V11
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_13 & 0xFFFF
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0
        JNZ     ??ZDO_ProcessMatchDescReq_18
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V1
??ZDO_ProcessMatchDescReq_18:
        JZ      ??ZDO_ProcessMatchDescReq_19
        MOV     A,#-0x1
        XRL     A,?V0
        JNZ     ??ZDO_ProcessMatchDescReq_20
        MOV     A,#-0x1
        XRL     A,?V1
??ZDO_ProcessMatchDescReq_20:
        JZ      $+5
        LJMP    ??ZDO_ProcessMatchDescReq_13 & 0xFFFF
??ZDO_ProcessMatchDescReq_19:
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_451:
        MOV     R1,?V8
        LCALL   ??ZDO_AnyClusterMatches?relay; Banked call to: ZDO_AnyClusterMatches
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_21
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     DPL,?V10
        MOV     DPH,?V11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_452:
        MOV     R1,?V7
        LCALL   ??ZDO_AnyClusterMatches?relay; Banked call to: ZDO_AnyClusterMatches
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_13 & 0xFFFF
??ZDO_ProcessMatchDescReq_21:
        ; Setup parameters for call to function osal_msg_allocate
        MOV     A,?V7
        ADD     A,?V8
        CLR     C
        RLC     A
        ADD     A,#0xa
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   ??osal_msg_allocate?relay; Banked call to: osal_msg_allocate
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_12 & 0xFFFF
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x2e
        MOVX    @DPTR,A
        MOV     DPL,?V14
        MOV     DPH,?V15
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_341:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_43:
        INC     DPTR
        MOV     A,?V8
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_27:
        MOV     A,?V7
        MOVX    @DPTR,A
        MOV     A,?V8
        JZ      ??ZDO_ProcessMatchDescReq_22
        MOV     A,R2
        ADD     A,#0x5
        MOV     R2,A
        CLR     A
        ADDC    A,?V3
        MOV     R3,A
        MOV     A,?V2
        ADD     A,#0xa
        MOV     R0,A
        CLR     A
        ADDC    A,?V3
        MOV     R1,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_256:
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_112:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R4,?V8
        MOV     A,R4
        ADD     A,R4
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_453:
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        SJMP    ??ZDO_ProcessMatchDescReq_23
??ZDO_ProcessMatchDescReq_22:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
??ZDO_ProcessMatchDescReq_23:
        MOV     A,?V7
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_10 & 0xFFFF
        MOV     R0,?V8
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_226:
        MOV     A,?V2
        ADD     A,R0
        MOV     R0,A
        MOV     A,?V3
        ADDC    A,R1
        MOV     R1,A
        MOV     A,R0
        ADD     A,#0xa
        MOV     R2,A
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_87:
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine68 & 0xFFFF
//  927   }
??CrossCallReturnLabel_113:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R4,?V7
        MOV     A,R4
        ADD     A,R4
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        LJMP    ??ZDO_ProcessMatchDescReq_11 & 0xFFFF
//  928 
//  929   if ( epCnt )
??ZDO_ProcessMatchDescReq_15:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JZ      ??ZDO_ProcessMatchDescReq_24
//  930   {
//  931     // Send the message if at least one match found.
//  932     if ( ZSuccess == ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
//  933               ZDAppNwkAddr.addr.shortAddr, epCnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse ) )
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine73 & 0xFFFF
//  934     {
//  935 #if defined( LCD_SUPPORTED )
//  936       HalLcdWriteScreen( "Match Desc Req", "Rsp Sent" );
//  937 #endif
//  938     }
//  939   }
??CrossCallReturnLabel_338:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0,#ZDOBuildBuf & 0xff
        MOV     ?V1,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_335:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     ?V0,#0x0
        SJMP    ??ZDO_ProcessMatchDescReq_25
          CFI CFA_XSP16 add(XSP16, 29)
//  940   else
//  941   {
//  942     // No match found
//  943     if (ADDR_NOT_BCAST == NLME_IsAddressBroadcast(aoi))
??ZDO_ProcessMatchDescReq_24:
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??NLME_IsAddressBroadcast?relay; Banked call to: NLME_IsAddressBroadcast
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_26
//  944     {
//  945       // send response message with match length = 0
//  946       ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
//  947                         ZDAppNwkAddr.addr.shortAddr, 0, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine73 & 0xFFFF
//  948 #if defined( LCD_SUPPORTED )
//  949       HalLcdWriteScreen( "Match Desc Req", "Rsp Non Matched" );
//  950 #endif
//  951     }
//  952     else
//  953     {
//  954       // no response mesage for broadcast message
//  955 #if defined( LCD_SUPPORTED )
//  956       HalLcdWriteScreen( "Match Desc Req", "Non Matched" );
//  957 #endif
//  958     }
//  959   }
??CrossCallReturnLabel_339:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0,#ZDOBuildBuf & 0xff
        MOV     ?V1,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
??ZDO_ProcessMatchDescReq_25:
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_160:
        LCALL   ??ZDP_EPRsp?relay    ; Banked call to: ZDP_EPRsp
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
//  960 
//  961   if ( inClusters != NULL )
??ZDO_ProcessMatchDescReq_26:
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_288:
        JZ      ??ZDO_ProcessMatchDescReq_27
//  962   {
//  963     osal_mem_free( inClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine201_0 & 0xFFFF
//  964   }
??CrossCallReturnLabel_454:
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
//  965 
//  966   if ( outClusters != NULL )
??ZDO_ProcessMatchDescReq_27:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_289:
        JZ      ??ZDO_ProcessMatchDescReq_4
//  967   {
//  968     osal_mem_free( outClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine201_0 & 0xFFFF
//  969   }
??CrossCallReturnLabel_455:
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
//  970 }
??ZDO_ProcessMatchDescReq_4:
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock41

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine137:
          CFI Block cfiCond42 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_225
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond43 Using cfiCommon0
          CFI (cfiCond43) Function ZDO_AnyClusterMatches
          CFI (cfiCond43) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_143
          CFI (cfiCond43) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond43) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond43) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond43) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond43) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond43) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond43) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond43) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond43) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond43) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond43) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond43) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond43) CFA_SP SP+-4
          CFI (cfiCond43) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond44 Using cfiCommon0
          CFI (cfiCond44) Function ZDO_ConvertOTAClusters
          CFI (cfiCond44) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_144
          CFI (cfiCond44) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond44) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond44) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond44) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond44) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond44) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond44) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond44) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond44) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond44) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond44) CFA_SP SP+-4
          CFI (cfiCond44) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond45) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond45) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond45) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond45) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond45) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond45) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond45) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond45) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond45) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond45) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond45) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+-2
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function ZDO_ParseAddrRsp
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond46) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond46) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_SP SP+-2
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker47 Using cfiCommon1
          CFI (cfiPicker47) NoFunction
          CFI (cfiPicker47) Picker
        MOV     A,R0
        ADD     A,R0
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        RET
          CFI EndBlock cfiCond42
          CFI EndBlock cfiCond43
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiPicker47

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond48 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_159
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond49 Using cfiCommon0
          CFI (cfiCond49) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond49) Conditional ??CrossCallReturnLabel_160
          CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond49) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond49) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond49) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond49) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond49) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond49) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond49) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond49) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond49) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond49) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond49) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond49) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond49) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond49) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond49) CFA_SP SP+-2
          CFI (cfiCond49) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker50 Using cfiCommon1
          CFI (cfiPicker50) NoFunction
          CFI (cfiPicker50) Picker
        MOV     A,?V14
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,?V15
        MOV     R5,A
        MOV     A,?V14
        LCALL   ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_241:
        ADDC    A,?V15
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     R2,#0x6
        MOV     R3,#-0x80
        RET
          CFI EndBlock cfiCond48
          CFI EndBlock cfiCond49
          CFI EndBlock cfiPicker50

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond51 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_141
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond52 Using cfiCommon0
          CFI (cfiCond52) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond52) Conditional ??CrossCallReturnLabel_142
          CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond52) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond52) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond52) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond52) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond52) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond52) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond52) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond52) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond52) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond52) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond52) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond52) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond52) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond52) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond52) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond52) CFA_SP SP+-2
          CFI (cfiCond52) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker53 Using cfiCommon1
          CFI (cfiPicker53) NoFunction
          CFI (cfiPicker53) Picker
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_325:
        RET
          CFI EndBlock cfiCond51
          CFI EndBlock cfiCond52
          CFI EndBlock cfiPicker53

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine135:
          CFI Block cfiCond54 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_141
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond55 Using cfiCommon0
          CFI (cfiCond55) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond55) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_142
          CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond55) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond55) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond55) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond55) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond55) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond55) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond55) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond55) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond55) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond55) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond55) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond55) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond55) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond55) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond55) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond55) CFA_SP SP+-4
          CFI (cfiCond55) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond56 Using cfiCommon0
          CFI (cfiCond56) Function ZDO_UpdateNwkStatus
          CFI (cfiCond56) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_323
          CFI (cfiCond56) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond56) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond56) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond56) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond56) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond56) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond56) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond56) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond56) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond56) CFA_SP SP+-4
          CFI (cfiCond56) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond57 Using cfiCommon0
          CFI (cfiCond57) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond57) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_324
          CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond57) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond57) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond57) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond57) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond57) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond57) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond57) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond57) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond57) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond57) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond57) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond57) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond57) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond57) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond57) CFA_SP SP+-4
          CFI (cfiCond57) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function ZDO_UpdateNwkStatus
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_321
          CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond58) CFA_SP SP+-4
          CFI (cfiCond58) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond59 Using cfiCommon0
          CFI (cfiCond59) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond59) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322
          CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond59) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond59) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond59) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond59) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond59) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond59) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond59) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond59) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond59) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond59) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond59) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond59) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond59) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond59) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond59) CFA_SP SP+-4
          CFI (cfiCond59) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond60 Using cfiCommon0
          CFI (cfiCond60) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond60) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_315
          CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond60) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond60) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond60) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond60) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond60) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond60) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond60) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond60) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond60) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond60) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond60) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond60) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond60) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond60) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond60) CFA_SP SP+-4
          CFI (cfiCond60) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_316
          CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond61) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond61) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond61) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond61) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond61) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond61) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond61) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond61) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond61) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond61) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond61) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond61) CFA_SP SP+-4
          CFI (cfiCond61) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_317
          CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond62) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond62) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond62) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond62) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond62) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond62) CFA_SP SP+-4
          CFI (cfiCond62) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_318
          CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond63) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond63) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond63) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond63) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond63) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond63) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond63) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond63) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond63) CFA_SP SP+-4
          CFI (cfiCond63) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_319
          CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond64) CFA_SP SP+-4
          CFI (cfiCond64) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond65 Using cfiCommon0
          CFI (cfiCond65) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond65) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_320
          CFI (cfiCond65) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond65) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond65) CFA_SP SP+-9
          CFI Block cfiPicker66 Using cfiCommon1
          CFI (cfiPicker66) NoFunction
          CFI (cfiPicker66) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
          CFI EndBlock cfiCond54
          CFI EndBlock cfiCond55
          CFI EndBlock cfiCond56
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiCond59
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiCond65
          CFI EndBlock cfiPicker66

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond67 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_133
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_134
          CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond68) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond68) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond68) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond68) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond68) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond68) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond68) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond68) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond68) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond68) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond68) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond68) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond68) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond68) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond68) CFA_SP SP+-2
          CFI (cfiCond68) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker69 Using cfiCommon1
          CFI (cfiPicker69) NoFunction
          CFI (cfiPicker69) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R2,?V2
        MOV     R3,?V3
        RET
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiPicker69

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond70 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_124
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_125
          CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond71) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond71) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond71) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond71) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond71) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond71) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond71) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond71) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond71) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond71) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond71) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond71) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond71) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond71) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond71) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond71) CFA_SP SP+-2
          CFI (cfiCond71) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker72 Using cfiCommon1
          CFI (cfiPicker72) NoFunction
          CFI (cfiPicker72) Picker
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOV     ?V2,DPL
        MOV     ?V3,DPH
        RET
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiPicker72

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond73 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_112
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond74 Using cfiCommon0
          CFI (cfiCond74) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond74) Conditional ??CrossCallReturnLabel_113
          CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond74) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond74) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond74) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond74) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond74) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond74) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond74) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond74) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond74) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond74) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond74) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond74) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond74) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond74) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond74) CFA_SP SP+-2
          CFI (cfiCond74) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker75 Using cfiCommon1
          CFI (cfiPicker75) NoFunction
          CFI (cfiPicker75) Picker
        MOVX    A,@DPTR
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        RET
          CFI EndBlock cfiCond73
          CFI EndBlock cfiCond74
          CFI EndBlock cfiPicker75

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond76 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_261
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond77 Using cfiCommon0
          CFI (cfiCond77) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond77) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond77) CFA_SP SP+-2
          CFI (cfiCond77) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker78 Using cfiCommon1
          CFI (cfiPicker78) NoFunction
          CFI (cfiPicker78) Picker
        MOV     R1,A
        MOV     DPL,R4
        MOV     DPH,R5
          CFI EndBlock cfiCond76
          CFI EndBlock cfiCond77
          CFI EndBlock cfiPicker78
        REQUIRE ??Subroutine162_0
        ; // Fall through to label ??Subroutine162_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine162_0:
          CFI Block cfiCond79 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_256
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond80) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond80) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond80) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond80) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond80) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond80) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond80) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond80) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+-2
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond81 Using cfiCommon0
          CFI (cfiCond81) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond81) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond81) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond81) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond81) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond81) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond81) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond81) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond81) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond81) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond81) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond81) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond81) CFA_SP SP+-2
          CFI (cfiCond81) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond82 Using cfiCommon0
          CFI (cfiCond82) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond82) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond82) CFA_SP SP+-2
          CFI (cfiCond82) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+-2
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond84) CFA_SP SP+-2
          CFI (cfiCond84) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond85 Using cfiCommon0
          CFI (cfiCond85) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond85) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond85) CFA_SP SP+-2
          CFI (cfiCond85) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker86 Using cfiCommon1
          CFI (cfiPicker86) NoFunction
          CFI (cfiPicker86) Picker
        MOV     A,R0
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiCond81
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiCond85
          CFI EndBlock cfiPicker86
        REQUIRE ??Subroutine163_0
        ; // Fall through to label ??Subroutine163_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine163_0:
          CFI Block cfiCond87 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_253
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond88 Using cfiCommon0
          CFI (cfiCond88) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond88) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond88) CFA_SP SP+-2
          CFI (cfiCond88) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond89 Using cfiCommon0
          CFI (cfiCond89) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond89) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond89) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond89) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond89) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond89) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond89) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond89) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond89) CFA_SP SP+-2
          CFI (cfiCond89) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond90 Using cfiCommon0
          CFI (cfiCond90) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond90) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond90) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond90) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond90) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond90) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond90) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond90) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond90) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond90) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond90) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond90) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond90) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond90) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond90) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond90) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond90) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond90) CFA_SP SP+-2
          CFI (cfiCond90) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond91) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond91) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond91) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond91) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond91) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond91) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond91) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond91) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+-2
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond92) CFA_SP SP+-2
          CFI (cfiCond92) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond93) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond93) CFA_SP SP+-2
          CFI (cfiCond93) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond94 Using cfiCommon0
          CFI (cfiCond94) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond94) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond94) CFA_SP SP+-2
          CFI (cfiCond94) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond95 Using cfiCommon0
          CFI (cfiCond95) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond95) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond95) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond95) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond95) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond95) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond95) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond95) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond95) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond95) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond95) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond95) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond95) CFA_SP SP+-2
          CFI (cfiCond95) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond96 Using cfiCommon0
          CFI (cfiCond96) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond96) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond96) CFA_SP SP+-2
          CFI (cfiCond96) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker97 Using cfiCommon1
          CFI (cfiPicker97) NoFunction
          CFI (cfiPicker97) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond87
          CFI EndBlock cfiCond88
          CFI EndBlock cfiCond89
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiCond94
          CFI EndBlock cfiCond95
          CFI EndBlock cfiCond96
          CFI EndBlock cfiPicker97
//  971 
//  972 #if defined ( REFLECTOR )
//  973 /*********************************************************************
//  974  * @fn      ZDO_ProcessBindUnbindReq()
//  975  *
//  976  * @brief   Called to process a Bind or Unbind Request message.
//  977  *
//  978  * @param   inMsg  - incoming message (request)
//  979  * @param   pReq - place to put parsed information
//  980  *
//  981  * @return  none
//  982  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  983 void ZDO_ProcessBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ProcessBindUnbindReq:
          CFI Block cfiBlock98 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
        CODE
//  984 {
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_LookupNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_GetEmptyPendingBindReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, bindAddrIndexGet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_NwkAddrReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_BindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_UnBindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  985   zAddrType_t SourceAddr;       // Binding Source addres
//  986   byte bindStat;
//  987 
//  988   SourceAddr.addrMode = Addr64Bit;
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
//  989   osal_cpyExtAddr( SourceAddr.addr.extAddr, pReq->srcAddress );
        ; Setup parameters for call to function sAddrExtCpy
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??sAddrExtCpy?relay  ; Banked call to: sAddrExtCpy
//  990 
//  991   // If the local device is not the primary binding cache
//  992   // check the src address of the bind request.
//  993   // If it is not the local device's extended address
//  994   // discard the request.
//  995   if ( !osal_ExtAddrEqual( SourceAddr.addr.extAddr, NLME_GetExtAddr()) ||
//  996         (pReq->dstAddress.addrMode != Addr64Bit &&
//  997          pReq->dstAddress.addrMode != AddrGroup) )
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   ??NLME_GetExtAddr?relay; Banked call to: NLME_GetExtAddr
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R4,?V2
        MOV     R5,?V3
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??sAddrExtCmp?relay  ; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??ZDO_ProcessBindUnbindReq_0
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_149:
        JZ      ??ZDO_ProcessBindUnbindReq_1
        MOVX    A,@DPTR
        XRL     A,#0x1
        JZ      ??ZDO_ProcessBindUnbindReq_1
//  998   {
//  999     bindStat = ZDP_NOT_SUPPORTED;
??ZDO_ProcessBindUnbindReq_0:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7c
        LJMP    ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
// 1000   }
// 1001   else
// 1002   {
// 1003     // Check source & destination endpoints
// 1004     if ( (pReq->srcEndpoint == 0 || pReq->srcEndpoint > MAX_ENDPOINTS)
// 1005         || (( pReq->dstAddress.addrMode == Addr64Bit ) &&
// 1006             (pReq->dstEndpoint == 0 || pReq->dstEndpoint > MAX_ENDPOINTS)) )
??ZDO_ProcessBindUnbindReq_1:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JZ      ??ZDO_ProcessBindUnbindReq_3
        CPL     A
        JZ      ??ZDO_ProcessBindUnbindReq_3
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_150:
        JNZ     ??ZDO_ProcessBindUnbindReq_4
        MOV     A,R6
        ADD     A,#0x14
        LCALL   ??Subroutine189_0 & 0xFFFF
??CrossCallReturnLabel_390:
        JZ      ??ZDO_ProcessBindUnbindReq_3
        CPL     A
        JNZ     ??ZDO_ProcessBindUnbindReq_4
// 1007     {
// 1008       bindStat = ZDP_INVALID_EP;
??ZDO_ProcessBindUnbindReq_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7e
        LJMP    ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
// 1009     }
// 1010     else
// 1011     {
// 1012       if ( inMsg->clusterID == Bind_req )
??ZDO_ProcessBindUnbindReq_4:
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_179:
        MOVX    A,@DPTR
        XRL     A,#0x21
        JNZ     ??ZDO_ProcessBindUnbindReq_5
        INC     DPTR
        MOVX    A,@DPTR
??ZDO_ProcessBindUnbindReq_5:
        JZ      $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_6 & 0xFFFF
// 1013       {
// 1014         // Assume the table is full
// 1015         bindStat = ZDP_TABLE_FULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x74
        LCALL   ?Subroutine36 & 0xFFFF
// 1016 
// 1017 #if defined( APP_TP ) || defined( APP_TP2 )
// 1018         // For ZigBee Conformance Testing
// 1019         if ( bindNumOfEntries() < gNWK_MAX_BINDING_ENTRIES )
// 1020 #endif
// 1021         {
// 1022 #if !defined ( ZDP_BIND_SKIP_VALIDATION )
// 1023           uint16 nwkAddr;
// 1024 
// 1025           // Verifies that a valid NWK address exists for the device
// 1026           // before creating a Binding entry. If NWK address does not
// 1027           // exist the request is sent out and the BindReq is saved, to
// 1028           // create the Bind Entry once the NwkAddrRsp is received
// 1029           if ( ( pReq->dstAddress.addrMode == Addr64Bit ) &&
// 1030                ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE ) )
??CrossCallReturnLabel_53:
        XRL     A,#0x3
        JZ      $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_7 & 0xFFFF
        ; Setup parameters for call to function APSME_LookupNwkAddr
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP102_8
        MOV     A,R6
        ADD     A,#0xb
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        LCALL   ??APSME_LookupNwkAddr?relay; Banked call to: APSME_LookupNwkAddr
        MOV     A,R1
        JZ      $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_7 & 0xFFFF
// 1031           {
// 1032             // find an empty bind slot in the pending Bind Req list
// 1033             ZDO_PendingBindReq_t *pPendingBind;
// 1034 
// 1035             if ( ( pPendingBind = ZDApp_GetEmptyPendingBindReq() ) != NULL )
        ; Setup parameters for call to function ZDApp_GetEmptyPendingBindReq
        LCALL   ??ZDApp_GetEmptyPendingBindReq?relay; Banked call to: ZDApp_GetEmptyPendingBindReq
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ProcessBindUnbindReq_8 & 0xFFFF
// 1036             {
// 1037               // copy the received request into the empty slot and all required info
// 1038               osal_memcpy( &(pPendingBind->bindReq), pReq, sizeof( ZDO_BindUnbindReq_t ) );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V4,R6
        MOV     ?V5,R7
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     R4,#0x15
        MOV     R5,#0x0
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
// 1039 
// 1040               pPendingBind->srcAddr = inMsg->srcAddr;
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        MOV     A,?V2
        ADD     A,#0x15
        MOV     R4,A
        CLR     A
        ADDC    A,?V3
        MOV     R5,A
        MOV     A,#0x9
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1041               pPendingBind->securityUse = inMsg->SecurityUse;
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_163:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V2
        ADD     A,#0x1e
        MOV     DPL,A
        CLR     A
        ADDC    A,?V3
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine33 & 0xFFFF
// 1042               pPendingBind->transSeq = inMsg->TransSeq;
??CrossCallReturnLabel_46:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V2
        ADD     A,#0x1f
        MOV     DPL,A
        CLR     A
        ADDC    A,?V3
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1043               pPendingBind->age = MAX_TIME_ADDR_REQ;
        MOV     A,?V2
        ADD     A,#0x20
        MOV     DPL,A
        CLR     A
        ADDC    A,?V3
        MOV     DPH,A
        MOV     A,#0x5
        MOVX    @DPTR,A
// 1044 
// 1045               // create an entry in Address Manager
// 1046               ( void )bindAddrIndexGet( &(pReq->dstAddress) );
        MOV     A,R6
        ADD     A,#0xb
        MOV     R6,A
        JNC     ??ZDO_ProcessBindUnbindReq_9
        INC     R7
??ZDO_ProcessBindUnbindReq_9:
        ; Setup parameters for call to function bindAddrIndexGet
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??bindAddrIndexGet?relay; Banked call to: bindAddrIndexGet
// 1047 
// 1048               ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
        ; Setup parameters for call to function ZDP_NwkAddrReq
        MOV     R5,#0x0
        MOV     R4,#0x0
        MOV     R1,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??ZDP_NwkAddrReq?relay; Banked call to: ZDP_NwkAddrReq
// 1049 
// 1050               osal_start_timerEx( ZDAppTaskID, ZDO_PENDING_BIND_REQ_EVT,
// 1051                                   AGE_OUT_PEND_BIND_REQ_DELAY );
        ; Setup parameters for call to function osal_start_timerEx
        MOV     DPTR,#__Constant_3e8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R2,#0x0
        MOV     R3,#0x10
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay; Banked call to: osal_start_timerEx
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
// 1052               return;
        SJMP    ??ZDO_ProcessBindUnbindReq_10
// 1053             }
// 1054           }
// 1055           // Add Bind entry
// 1056           else if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1057                                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??ZDO_ProcessBindUnbindReq_7:
        ; Setup parameters for call to function APSME_BindRequest
        LCALL   ?Subroutine97 & 0xFFFF
// 1058           {
// 1059             // valid entry
// 1060             bindStat = ZDP_SUCCESS;
// 1061 
// 1062             // Notify to save info into NV
// 1063             ZDApp_NVUpdate();
// 1064           }
// 1065 #else // ZDP_BIND_SKIP_VALIDATION  is defined
// 1066           // Create binding entry first independently of existance of  valid NWK addres
// 1067           // if NWK address does not exist a request is sent out
// 1068           if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1069                          &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
// 1070           {
// 1071             uint16 nwkAddr;
// 1072 
// 1073             // valid entry
// 1074             bindStat = ZDP_SUCCESS;
// 1075 
// 1076             // Notify to save info into NV
// 1077             ZDApp_NVUpdate();
// 1078 
// 1079             // Check for the destination address
// 1080             if ( pReq->dstAddress.addrMode == Addr64Bit )
// 1081             {
// 1082               if ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE )
// 1083               {
// 1084                 ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
// 1085               }
// 1086             }
// 1087           }
// 1088 #endif
// 1089         }
// 1090       }
??CrossCallReturnLabel_157:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_102:
        LCALL   ??APSME_BindRequest?relay; Banked call to: APSME_BindRequest
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R1
        JNZ     ??ZDO_ProcessBindUnbindReq_8
        SJMP    ??ZDO_ProcessBindUnbindReq_11
// 1091       else // Unbind_req
// 1092       {
// 1093         if ( APSME_UnBindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1094                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??ZDO_ProcessBindUnbindReq_6:
        ; Setup parameters for call to function APSME_UnBindRequest
        LCALL   ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_158:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_103:
        LCALL   ??APSME_UnBindRequest?relay; Banked call to: APSME_UnBindRequest
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R1
        JNZ     ??ZDO_ProcessBindUnbindReq_12
// 1095         {
// 1096           bindStat = ZDP_SUCCESS;
??ZDO_ProcessBindUnbindReq_11:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1097 
// 1098           // Notify to save info into NV
// 1099           ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL   ??ZDApp_NVUpdate?relay; Banked call to: ZDApp_NVUpdate
        SJMP    ??ZDO_ProcessBindUnbindReq_8
// 1100         }
// 1101         else
// 1102           bindStat = ZDP_NO_ENTRY;
??ZDO_ProcessBindUnbindReq_12:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
??ZDO_ProcessBindUnbindReq_2:
        MOVX    @DPTR,A
// 1103       }
// 1104     }
// 1105   }
// 1106 
// 1107   // Send back a response message
// 1108   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr),
// 1109                (inMsg->clusterID | ZDO_RESPONSE_BIT), 1, &bindStat,
// 1110                inMsg->SecurityUse );
??ZDO_ProcessBindUnbindReq_8:
        ; Setup parameters for call to function ZDP_SendData
        LCALL   ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_164:
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,?V0
        ADD     A,#0xc
        MOV     DPL,A
        CLR     A
        ADDC    A,?V1
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_269:
        ORL     A,#0x80
        MOV     ?V3,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_161:
        LCALL   ??ZDP_SendData?relay ; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
// 1111 }
??ZDO_ProcessBindUnbindReq_10:
        MOV     A,#0xc
          CFI EndBlock cfiBlock98
        REQUIRE ?Subroutine10
        ; // Fall through to label ?Subroutine10

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiBlock99 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Valid
        SJMP    ??Subroutine166_0
          CFI EndBlock cfiBlock99

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond100 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_163
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_164
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond101) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond101) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+-2
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker102 Using cfiCommon1
          CFI (cfiPicker102) NoFunction
          CFI (cfiPicker102) Picker
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_229:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiPicker102

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond103 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_157
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond104 Using cfiCommon0
          CFI (cfiCond104) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond104) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond104) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond104) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond104) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond104) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond104) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond104) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond104) CFA_SP SP+-2
          CFI (cfiCond104) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker105 Using cfiCommon1
          CFI (cfiPicker105) NoFunction
          CFI (cfiPicker105) Picker
        LCALL   ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_264:
        MOVX    A,@DPTR
        MOV     ?V2,A
        MOV     R0,#?V2
        RET
          CFI EndBlock cfiCond103
          CFI EndBlock cfiCond104
          CFI EndBlock cfiPicker105

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine147:
          CFI Block cfiCond106 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_157
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond107 Using cfiCommon0
          CFI (cfiCond107) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond107) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_158
          CFI (cfiCond107) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond107) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond107) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond107) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond107) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond107) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond107) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond107) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond107) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond107) CFA_SP SP+-4
          CFI (cfiCond107) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_184
          CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond108) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond108) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond108) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond108) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond108) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond108) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond108) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond108) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond108) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond108) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond108) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond108) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond108) CFA_SP SP+-4
          CFI (cfiCond108) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_185
          CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond109) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond109) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond109) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond109) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond109) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond109) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond109) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond109) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond109) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond109) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond109) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond109) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond109) CFA_SP SP+-4
          CFI (cfiCond109) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker110 Using cfiCommon1
          CFI (cfiPicker110) NoFunction
          CFI (cfiPicker110) Picker
        MOV     A,R6
          CFI EndBlock cfiCond106
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiPicker110
        REQUIRE ??Subroutine164_0
        ; // Fall through to label ??Subroutine164_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine164_0:
          CFI Block cfiCond111 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_193
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_194
          CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond112) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond112) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond112) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond112) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond112) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond112) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond112) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond112) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond112) CFA_SP SP+-5
          CFI (cfiCond112) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_157
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond113) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond113) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+-4
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_158
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+-4
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_184
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond115) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond115) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond115) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond115) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond115) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond115) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond115) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond115) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+-4
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_185
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond116) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond116) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond116) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond116) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond116) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond116) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond116) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond116) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+-4
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker117 Using cfiCommon1
          CFI (cfiPicker117) NoFunction
          CFI (cfiPicker117) Picker
        ADD     A,#0x14
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiPicker117

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond118 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_149
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond119 Using cfiCommon0
          CFI (cfiCond119) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond119) Conditional ??CrossCallReturnLabel_150
          CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond119) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond119) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond119) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond119) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond119) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond119) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond119) CFA_SP SP+-2
          CFI (cfiCond119) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker120 Using cfiCommon1
          CFI (cfiPicker120) NoFunction
          CFI (cfiPicker120) Picker
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_234:
        XRL     A,#0x3
        RET
          CFI EndBlock cfiCond118
          CFI EndBlock cfiCond119
          CFI EndBlock cfiPicker120

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond121 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_268
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond122 Using cfiCommon0
          CFI (cfiCond122) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond122) Conditional ??CrossCallReturnLabel_269
          CFI (cfiCond122) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond122) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond122) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond122) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond122) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond122) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond122) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond122) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond122) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond122) CFA_SP SP+-2
          CFI (cfiCond122) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond123 Using cfiCommon0
          CFI (cfiCond123) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond123) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond123) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond123) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond123) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond123) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond123) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond123) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond123) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond123) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond123) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond123) CFA_SP SP+-2
          CFI (cfiCond123) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker124 Using cfiCommon1
          CFI (cfiPicker124) NoFunction
          CFI (cfiPicker124) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond121
          CFI EndBlock cfiCond122
          CFI EndBlock cfiCond123
          CFI EndBlock cfiPicker124
        REQUIRE ??Subroutine165_0
        ; // Fall through to label ??Subroutine165_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine165_0:
          CFI Block cfiCond125 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_266
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond126) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond126) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond126) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond126) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond126) CFA_SP SP+-2
          CFI (cfiCond126) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_268
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond127) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond127) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond127) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond127) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond127) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond127) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond127) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond127) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond127) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond127) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond127) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_SP SP+-2
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_269
          CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond128) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond128) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond128) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond128) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond128) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond128) CFA_SP SP+-2
          CFI (cfiCond128) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond129 Using cfiCommon0
          CFI (cfiCond129) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond129) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond129) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond129) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond129) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond129) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond129) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond129) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond129) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond129) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond129) CFA_SP SP+-2
          CFI (cfiCond129) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker130 Using cfiCommon1
          CFI (cfiPicker130) NoFunction
          CFI (cfiPicker130) Picker
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiCond129
          CFI EndBlock cfiPicker130

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond131 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond132 Using cfiCommon0
          CFI (cfiCond132) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond132) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond132) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond132) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond132) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond132) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond132) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond132) CFA_SP SP+-2
          CFI (cfiCond132) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker133 Using cfiCommon1
          CFI (cfiPicker133) NoFunction
          CFI (cfiPicker133) Picker
        MOV     A,R6
        ADD     A,#0xb
        MOV     R4,A
        CLR     A
        ADDC    A,R7
        MOV     R5,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_481:
        MOV     R3,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond131
          CFI EndBlock cfiCond132
          CFI EndBlock cfiPicker133

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond134 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_52
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond135 Using cfiCommon0
          CFI (cfiCond135) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond135) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond135) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond135) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond135) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond135) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond135) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond135) CFA_SP SP+-2
          CFI (cfiCond135) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker136 Using cfiCommon1
          CFI (cfiPicker136) NoFunction
          CFI (cfiPicker136) Picker
        MOVX    @DPTR,A
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_233:
        RET
          CFI EndBlock cfiCond134
          CFI EndBlock cfiCond135
          CFI EndBlock cfiPicker136

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine143:
          CFI Block cfiCond137 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_149
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond138 Using cfiCommon0
          CFI (cfiCond138) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond138) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_150
          CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond138) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond138) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond138) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond138) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond138) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond138) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond138) CFA_SP SP+-4
          CFI (cfiCond138) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond139 Using cfiCommon0
          CFI (cfiCond139) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond139) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_52
          CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond139) CFA_SP SP+-4
          CFI (cfiCond139) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond140 Using cfiCommon0
          CFI (cfiCond140) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond140) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_53
          CFI (cfiCond140) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond140) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond140) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond140) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond140) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond140) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond140) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond140) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond140) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond140) CFA_SP SP+-4
          CFI (cfiCond140) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker141 Using cfiCommon1
          CFI (cfiPicker141) NoFunction
          CFI (cfiPicker141) Picker
        LCALL   ?Subroutine156 & 0xFFFF
??CrossCallReturnLabel_246:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond137
          CFI EndBlock cfiCond138
          CFI EndBlock cfiCond139
          CFI EndBlock cfiCond140
          CFI EndBlock cfiPicker141

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock142 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
          CFI EndBlock cfiBlock142
        REQUIRE ??Subroutine166_0
        ; // Fall through to label ??Subroutine166_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine166_0:
          CFI Block cfiBlock143 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x7
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock143
// 1112 #endif // REFLECTOR
// 1113 
// 1114 /*********************************************************************
// 1115  * @fn      ZDO_UpdateAddrManager
// 1116  *
// 1117  * @brief   Update the Address Manager.
// 1118  *
// 1119  * @param   nwkAddr - network address
// 1120  * @param   extAddr - extended address
// 1121  *
// 1122  * @return  none
// 1123  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1124 void ZDO_UpdateAddrManager( uint16 nwkAddr, uint8 *extAddr )
ZDO_UpdateAddrManager:
          CFI Block cfiBlock144 Using cfiCommon0
          CFI Function ZDO_UpdateAddrManager
        CODE
// 1125 {
        FUNCALL ZDO_UpdateAddrManager, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateAddrManager, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 13
        MOV     A,#-0xd
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
// 1126   AddrMgrEntry_t addrEntry;
// 1127 
// 1128   // Update the address manager
// 1129   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1130   addrEntry.nwkAddr = nwkAddr;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine51 & 0xFFFF
// 1131   AddrMgrExtAddrSet( addrEntry.extAddr, extAddr );
??CrossCallReturnLabel_88:
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrExtAddrSet?relay; Banked call to: AddrMgrExtAddrSet
// 1132   AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   ??AddrMgrEntryUpdate?relay; Banked call to: AddrMgrEntryUpdate
// 1133 }
        MOV     A,#0xd
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 XSP16+0
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock144

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond145 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_84
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond146 Using cfiCommon0
          CFI (cfiCond146) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond146) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond146) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond146) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond146) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond146) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond146) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond146) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond146) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond146) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond146) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond146) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond146) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond146) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond146) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond146) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond146) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond146) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond146) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond146) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond146) CFA_SP SP+-2
          CFI (cfiCond146) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond147) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond147) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond147) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond147) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond147) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond147) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond147) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond147) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+-2
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond148) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond148) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond148) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond148) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond148) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond148) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond148) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond148) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond148) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond148) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond148) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond148) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond148) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond148) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond148) CFA_SP SP+-2
          CFI (cfiCond148) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond149 Using cfiCommon0
          CFI (cfiCond149) Function ZDO_UpdateAddrManager
          CFI (cfiCond149) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond149) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond149) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond149) CFA_SP SP+-7
          CFI (cfiCond149) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+-2
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker151 Using cfiCommon1
          CFI (cfiPicker151) NoFunction
          CFI (cfiPicker151) Picker
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond145
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiPicker151
// 1134 
// 1135 /*********************************************************************
// 1136  * @fn      ZDO_ProcessServerDiscReq
// 1137  *
// 1138  * @brief   Process the Server_Discovery_req message.
// 1139  *
// 1140  * @param   inMsg  - incoming message (request)
// 1141  *
// 1142  * @return  none
// 1143  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1144 void ZDO_ProcessServerDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessServerDiscReq:
          CFI Block cfiBlock152 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
        CODE
// 1145 {
        FUNCALL ZDO_ProcessServerDiscReq, ZDP_ServerDiscRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine74 & 0xFFFF
// 1146   uint16 serverMask = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
// 1147   uint16 matchMask = serverMask & ZDO_Config_Node_Descriptor.ServerMask;
??CrossCallReturnLabel_120:
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     R0,A
        MOV     DPTR,#ZDO_Config_Node_Descriptor + 8
        MOVX    A,@DPTR
        ANL     A,R0
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,R1
        MOV     ?V1,A
// 1148 
// 1149   if ( matchMask )
        MOV     A,?V0
        ORL     A,?V1
        JZ      ??ZDO_ProcessServerDiscReq_0
// 1150   {
// 1151     ZDP_ServerDiscRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSUCCESS,
// 1152                 ZDAppNwkAddr.addr.shortAddr, matchMask, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_ServerDiscRsp
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine98 & 0xFFFF
// 1153   }
??CrossCallReturnLabel_394:
        MOV     R5,A
        MOV     R4,#0x0
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_154:
        LCALL   ??ZDP_ServerDiscRsp?relay; Banked call to: ZDP_ServerDiscRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
// 1154 }
??ZDO_ProcessServerDiscReq_0:
        LJMP    ??Subroutine161_0 & 0xFFFF
          CFI EndBlock cfiBlock152
// 1155 
// 1156 #if defined ( ZIGBEE_CHILD_AGING )
// 1157 /*********************************************************************
// 1158  * @fn          ZDO_ProcessEndDeviceTimeoutReq
// 1159  *
// 1160  * @brief       This function processes and responds to the
// 1161  *              End_Device_Timeout_Req message.
// 1162  *
// 1163  * @param       inMsg  - incoming message (request)
// 1164  *
// 1165  * @return      none
// 1166  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1167 void ZDO_ProcessEndDeviceTimeoutReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessEndDeviceTimeoutReq:
          CFI Block cfiBlock153 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
        CODE
// 1168 {
        FUNCALL ZDO_ProcessEndDeviceTimeoutReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1169   uint8 stat = ZDP_SUCCESS;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1170   uint8 *ieee = NULL;
// 1171   uint16 reqTimeout;
// 1172 
// 1173   // Only process this message if Child Table Management is enabled OR
// 1174   // If message was broadcast OR multicast OR
// 1175   // if the NWK src and the MAC src are not the same) drop message
// 1176   if ( ( zgChildAgingEnable == FALSE ) ||
// 1177        ( inMsg->wasBroadcast == TRUE ) ||
// 1178        ( inMsg->srcAddr.addr.shortAddr != inMsg->macSrcAddr ) )
        MOV     DPTR,#zgChildAgingEnable
        MOVX    A,@DPTR
        JZ      ??ZDO_ProcessEndDeviceTimeoutReq_0
        MOV     A,R2
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_189:
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,#0x1
        JZ      ??ZDO_ProcessEndDeviceTimeoutReq_0
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_342:
        MOV     A,R2
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessEndDeviceTimeoutReq_1
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessEndDeviceTimeoutReq_1:
        JNZ     ??ZDO_ProcessEndDeviceTimeoutReq_0
// 1179   {
// 1180     // the message does not come from a child, drop it
// 1181     return;
// 1182   }
// 1183 
// 1184   ieee = inMsg->asdu;
// 1185 
// 1186   reqTimeout = BUILD_UINT16( inMsg->asdu[Z_EXTADDR_LEN], inMsg->asdu[Z_EXTADDR_LEN+1] );
// 1187 
// 1188   if ( ( ( reqTimeout < ZDO_MIN_REQ_TIMEOUT ) || ( reqTimeout > ZDO_MAX_REQ_TIMEOUT ) ) ||
// 1189        ( ZSTACK_END_DEVICE_BUILD ) )
// 1190   {
// 1191     stat = ZDP_INVALID_REQTYPE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x80
        LCALL   ?Subroutine37 & 0xFFFF
// 1192   }
// 1193   else
// 1194   {
// 1195     associated_devices_t *pAssoc;
// 1196 
// 1197     if ( ( ( pAssoc = AssocGetWithExt( ieee ) ) != NULL ) &&
// 1198          ( ( pAssoc->nodeRelation >= CHILD_RFD ) &&
// 1199            ( pAssoc->nodeRelation <= CHILD_RFD_RX_IDLE ) ) )
// 1200     {
// 1201       pAssoc->timeoutCounter = reqTimeout;
// 1202       pAssoc->endDevKaTimeout = reqTimeout;
// 1203 
// 1204       // Set event to save NV
// 1205       ZDApp_NVUpdate();
// 1206     }
// 1207     else
// 1208     {
// 1209       stat = ZDP_DEVICE_NOT_FOUND;
// 1210     }
// 1211 
// 1212   }
// 1213 
// 1214   ZDP_EndDeviceTimeoutRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat,
// 1215                            inMsg->SecurityUse );
??CrossCallReturnLabel_54:
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0,#0x1f
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     R1,#0x1
        MOV     A,R2
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,R3
        MOV     R5,A
        MOV     A,R2
        ADD     A,#0xf
        MOV     R2,A
        JNC     ??ZDO_ProcessEndDeviceTimeoutReq_2
        INC     R3
??ZDO_ProcessEndDeviceTimeoutReq_2:
        LCALL   ??ZDP_SendData?relay ; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
          CFI EndBlock cfiBlock153
// 1216 }
??ZDO_ProcessEndDeviceTimeoutReq_0:
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiBlock154 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
        LJMP    ??Subroutine160_0 & 0xFFFF
          CFI EndBlock cfiBlock154
// 1217 #endif // ZIGBEE_CHILD_AGING
// 1218 
// 1219 /*********************************************************************
// 1220  * Call Back Functions from APS  - API
// 1221  */
// 1222 
// 1223 /*********************************************************************
// 1224  * @fn          ZDO_EndDeviceTimeoutCB
// 1225  *
// 1226  * @brief       This function handles the binding timer for the End
// 1227  *              Device Bind command.
// 1228  *
// 1229  * @param       none
// 1230  *
// 1231  * @return      none
// 1232  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1233 void ZDO_EndDeviceTimeoutCB( void )
ZDO_EndDeviceTimeoutCB:
          CFI Block cfiBlock155 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
        CODE
// 1234 {
        FUNCALL ZDO_EndDeviceTimeoutCB, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 1235 #if defined ( REFLECTOR )
// 1236   byte stat;
// 1237   if ( ZDO_EDBind )
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_290:
        JNZ     $+5
        LJMP    ??ZDO_EndDeviceTimeoutCB_0 & 0xFFFF
// 1238   {
// 1239     stat = ZDO_EDBind->status;
// 1240 
// 1241     // Send the response message to the first sent
// 1242     ZDO_SendEDBindRsp( ZDO_EDBind->SrcTransSeq, &(ZDO_EDBind->SrcAddr),
// 1243                         stat, ZDO_EDBind->SecurityUse );
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPTR,#ZDO_EDBind
        MOVX    A,@DPTR
        MOV     R1,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R1
        ADD     A,#0x16
        MOV     DPL,A
        CLR     A
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     DPTR,#ZDO_EDBind
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R5,A
        MOV     DPTR,#ZDO_EDBind
        MOVX    A,@DPTR
        MOV     R1,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R1
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        MOV     A,R0
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0,#0x20
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R1,#0x1
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??ZDP_SendData?relay ; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 1244 
// 1245     ZDO_RemoveEndDeviceBind();
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine171_0 & 0xFFFF
// 1246   }
??CrossCallReturnLabel_291:
        JZ      ??ZDO_EndDeviceTimeoutCB_0
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_122:
        LCALL   ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_292:
        JZ      ??ZDO_EndDeviceTimeoutCB_1
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_123:
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_456:
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
??ZDO_EndDeviceTimeoutCB_1:
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_108:
        LCALL   ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_293:
        JZ      ??ZDO_EndDeviceTimeoutCB_2
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_109:
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_457:
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
??ZDO_EndDeviceTimeoutCB_2:
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_458:
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1247 #endif  // REFLECTOR
// 1248 }
??ZDO_EndDeviceTimeoutCB_0:
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock155

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond156 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_122
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond157 Using cfiCommon0
          CFI (cfiCond157) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond157) Conditional ??CrossCallReturnLabel_123
          CFI (cfiCond157) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond157) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond157) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond157) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond157) CFA_SP SP+-2
          CFI (cfiCond157) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker158 Using cfiCommon1
          CFI (cfiPicker158) NoFunction
          CFI (cfiPicker158) Picker
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x10
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond156
          CFI EndBlock cfiCond157
          CFI EndBlock cfiPicker158

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond159 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_108
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond160) CFA_SP SP+-2
          CFI (cfiCond160) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker161 Using cfiCommon1
          CFI (cfiPicker161) NoFunction
          CFI (cfiPicker161) Picker
        MOV     DPTR,#ZDO_EDBind
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R0
        LCALL   ??Subroutine173_0 & 0xFFFF
??CrossCallReturnLabel_304:
        ADDC    A,R0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiPicker161
// 1249 
// 1250 /*********************************************************************
// 1251  * Optional Management Messages
// 1252  */
// 1253 
// 1254 /*********************************************************************
// 1255  * @fn          ZDO_ProcessMgmtLqiReq
// 1256  *
// 1257  * @brief       This function handles parsing the incoming Management
// 1258  *              LQI request and generate the response.
// 1259  *
// 1260  *   Note:      This function will limit the number of items returned
// 1261  *              to ZDO_MAX_LQI_ITEMS items.
// 1262  *
// 1263  * @param       inMsg - incoming message (request)
// 1264  *
// 1265  * @return      none
// 1266  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1267 void ZDO_ProcessMgmtLqiReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLqiReq:
          CFI Block cfiBlock162 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
        CODE
// 1268 {
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocCount
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocFindDevice
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, ZDP_MgmtLqiRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 64, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 64, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 37
        MOV     A,#-0x25
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 59)
        MOV     ?V12,R2
        MOV     ?V13,R3
// 1269   byte x;
// 1270   byte index;
// 1271   byte numItems;
// 1272   byte maxItems;
// 1273   ZDP_MgmtLqiItem_t* table = NULL;
        MOV     ?V10,#0x0
        MOV     ?V11,#0x0
// 1274   ZDP_MgmtLqiItem_t* item;
// 1275   neighborEntry_t    entry;
// 1276   byte aItems;
// 1277   associated_devices_t *aDevice;
// 1278   AddrMgrEntry_t  nwkEntry;
// 1279   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_282:
        ADDC    A,?V13
        MOV     DPH,A
        LCALL   ??Subroutine176_0 & 0xFFFF
??CrossCallReturnLabel_316:
        MOV     ?V6,A
// 1280 
// 1281   // Get the number of neighbor items
// 1282   NLME_GetRequest( nwkNumNeighborTableEntries, 0, &maxItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x64
        LCALL   ??NLME_GetRequest?relay; Banked call to: NLME_GetRequest
// 1283 
// 1284   // Get the number of associated items
// 1285   aItems = (uint8)AssocCount( PARENT, CHILD_FFD_RX_IDLE );
        ; Setup parameters for call to function AssocCount
        MOV     R2,#0x4
        MOV     R1,#0x0
        LCALL   ??AssocCount?relay   ; Banked call to: AssocCount
        MOV     A,R2
        MOV     ?V4,A
// 1286 
// 1287   // Total number of items
// 1288   maxItems += aItems;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,R2
        MOVX    @DPTR,A
// 1289 
// 1290   // Start with the supplied index
// 1291   if ( maxItems > StartIndex )
        MOV     R0,A
        MOV     A,?V6
        CLR     C
        SUBB    A,R0
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_0 & 0xFFFF
// 1292   {
// 1293     numItems = maxItems - StartIndex;
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,?V6
        MOV     ?V1,A
// 1294 
// 1295     // limit the size of the list
// 1296     if ( numItems > ZDO_MAX_LQI_ITEMS )
        CLR     C
        SUBB    A,#0x4
        JC      ??ZDO_ProcessMgmtLqiReq_1
// 1297       numItems = ZDO_MAX_LQI_ITEMS;
        MOV     ?V1,#0x3
// 1298 
// 1299     // Allocate the memory to build the table
// 1300     table = (ZDP_MgmtLqiItem_t*)osal_mem_alloc( (short)
// 1301               ( numItems * sizeof( ZDP_MgmtLqiItem_t ) ) );
??ZDO_ProcessMgmtLqiReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V1
        MOV     B,#0x1a
        MUL     AB
        MOV     R2,A
        MOV     R3,B
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V10,R2
        MOV     ?V11,R3
// 1302 
// 1303     if ( table != NULL )
        MOV     A,R2
        ORL     A,?V11
        JNZ     $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_2 & 0xFFFF
// 1304     {
// 1305       x = 0;
        MOV     ?V5,#0x0
// 1306       item = table;
        MOV     R6,?V10
        MOV     R7,?V11
// 1307       index = StartIndex;
        MOV     ?V0,?V6
        SJMP    ??ZDO_ProcessMgmtLqiReq_3
// 1308 
// 1309       // Loop through associated items and build list
// 1310       for ( ; x < numItems; x++ )
// 1311       {
// 1312         if ( index < aItems )
// 1313         {
// 1314           // get next associated device
// 1315           aDevice = AssocFindDevice( index++ );
// 1316 
// 1317           // set basic fields
// 1318           item->panID   = _NIB.nwkPanId;
// 1319           osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1320           item->nwkAddr = aDevice->shortAddr;
// 1321           item->permit  = ZDP_MGMT_BOOL_UNKNOWN;
// 1322           item->depth   = 0xFF;
// 1323           item->lqi     = aDevice->linkInfo.rxLqi;
// 1324 
// 1325           // set extented address
// 1326           nwkEntry.user    = ADDRMGR_USER_DEFAULT;
// 1327           nwkEntry.nwkAddr = aDevice->shortAddr;
// 1328 
// 1329           if ( AddrMgrEntryLookupNwk( &nwkEntry ) == TRUE )
// 1330           {
// 1331             osal_cpyExtAddr( item->extAddr, nwkEntry.extAddr );
// 1332           }
// 1333           else
// 1334           {
// 1335             osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
??ZDO_ProcessMgmtLqiReq_4:
        ; Setup parameters for call to function osal_memset
        LCALL   ?Subroutine108 & 0xFFFF
// 1336           }
??CrossCallReturnLabel_272:
        LCALL   ??osal_memset?relay  ; Banked call to: osal_memset
// 1337 
// 1338           // use association info to set other fields
// 1339           if ( aDevice->nodeRelation == PARENT )
??ZDO_ProcessMgmtLqiReq_5:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JNZ     ??ZDO_ProcessMgmtLqiReq_6
// 1340           {
// 1341             if (  aDevice->shortAddr == 0 )
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_294:
        JNZ     ??ZDO_ProcessMgmtLqiReq_7
// 1342             {
// 1343               item->devType = ZDP_MGMT_DT_COORD;
        LCALL   ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_184:
        MOVX    @DPTR,A
// 1344               item->depth = 0;
        LCALL   ?Subroutine118 & 0xFFFF
// 1345             }
??CrossCallReturnLabel_195:
        CLR     A
        SJMP    ??ZDO_ProcessMgmtLqiReq_8
// 1346             else
// 1347             {
// 1348               item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_7:
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_277:
        MOVX    @DPTR,A
// 1349               item->depth = _NIB.nodeDepth - 1;
        MOV     DPTR,#_NIB + 52
        MOVX    A,@DPTR
        DEC     A
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine118 & 0xFFFF
// 1350             }
// 1351 
// 1352             item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1353             item->relation = ZDP_MGMT_REL_PARENT;
// 1354           }
??CrossCallReturnLabel_196:
        POP     A
          CFI CFA_SP SP+0
??ZDO_ProcessMgmtLqiReq_8:
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_25:
        CLR     A
        SJMP    ??CrossCallReturnLabel_275
// 1355           else
// 1356           {
// 1357             // If not parent, then it's a child
// 1358             item->depth = _NIB.nodeDepth + 1;
??ZDO_ProcessMgmtLqiReq_6:
        MOV     DPTR,#_NIB + 52
        MOVX    A,@DPTR
        INC     A
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_197:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine23 & 0xFFFF
// 1359 
// 1360             if ( aDevice->nodeRelation < CHILD_FFD )
??CrossCallReturnLabel_30:
        CLR     C
        SUBB    A,#0x3
        MOV     A,R6
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_9 & 0xFFFF
// 1361             {
// 1362               item->devType = ZDP_MGMT_DT_ENDDEV;
        LCALL   ?Subroutine117 & 0xFFFF
// 1363 
// 1364               if ( aDevice->nodeRelation == CHILD_RFD )
// 1365               {
// 1366                 item->rxOnIdle = FALSE;
// 1367               }
// 1368               else
// 1369               {
// 1370                 item->rxOnIdle = TRUE;
// 1371               }
// 1372             }
??CrossCallReturnLabel_193:
        MOV     A,#0x2
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_31:
        XRL     A,#0x1
        JNZ     $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_10 & 0xFFFF
// 1373             else
// 1374             {
// 1375               item->devType = ZDP_MGMT_DT_ROUTER;
// 1376 
// 1377               if ( aDevice->nodeRelation == CHILD_FFD )
// 1378               {
// 1379                 item->rxOnIdle = FALSE;
// 1380               }
// 1381               else
// 1382               {
// 1383                 item->rxOnIdle = TRUE;
??ZDO_ProcessMgmtLqiReq_11:
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ??Subroutine169_0 & 0xFFFF
// 1384               }
??CrossCallReturnLabel_274:
        MOVX    @DPTR,A
// 1385             }
// 1386 
// 1387             item->relation = ZDP_MGMT_REL_CHILD;
        MOV     A,R6
        ADD     A,#0x16
        LCALL   ??Subroutine169_0 & 0xFFFF
??CrossCallReturnLabel_275:
        MOVX    @DPTR,A
// 1388           }
// 1389 
// 1390           item++;
        MOV     A,R6
        ADD     A,#0x1a
        MOV     R6,A
        JNC     ??ZDO_ProcessMgmtLqiReq_12
        INC     R7
??ZDO_ProcessMgmtLqiReq_12:
        INC     ?V5
??ZDO_ProcessMgmtLqiReq_3:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V1
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_13 & 0xFFFF
        MOV     A,?V0
        CLR     C
        SUBB    A,?V4
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_14 & 0xFFFF
        ; Setup parameters for call to function AssocFindDevice
        MOV     R2,?V0
        MOV     R3,#0x0
        LCALL   ??AssocFindDevice?relay; Banked call to: AssocFindDevice
        MOV     ?V2,R2
        MOV     ?V3,R3
        INC     ?V0
        MOV     DPTR,#_NIB + 33
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_37:
        LCALL   ??sAddrExtCpy?relay  ; Banked call to: sAddrExtCpy
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_350:
        MOV     A,R6
        ADD     A,#0x12
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_16:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_198:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_351:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_257:
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??AddrMgrEntryLookupNwk?relay; Banked call to: AddrMgrEntryLookupNwk
        MOV     A,R1
        XRL     A,#0x1
        JZ      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_4 & 0xFFFF
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   ??Subroutine167_0 & 0xFFFF
??CrossCallReturnLabel_271:
        LCALL   ??sAddrExtCpy?relay  ; Banked call to: sAddrExtCpy
        LJMP    ??ZDO_ProcessMgmtLqiReq_5 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_9:
        LCALL   ??Subroutine168_0 & 0xFFFF
??CrossCallReturnLabel_276:
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_32:
        XRL     A,#0x3
        JZ      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_11 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_10:
        LCALL   ?Subroutine148 & 0xFFFF
// 1391         }
??CrossCallReturnLabel_235:
        CLR     A
        LJMP    ??CrossCallReturnLabel_274 & 0xFFFF
// 1392         else
// 1393         {
// 1394           if ( StartIndex <= aItems )
??ZDO_ProcessMgmtLqiReq_14:
        MOV     A,?V4
        CLR     C
        SUBB    A,?V6
        JC      ??ZDO_ProcessMgmtLqiReq_15
// 1395             // Start with 1st neighbor
// 1396             index = 0;
        MOV     ?V0,#0x0
        SJMP    ??ZDO_ProcessMgmtLqiReq_16
// 1397           else
// 1398             // Start with >1st neighbor
// 1399             index = StartIndex - aItems;
??ZDO_ProcessMgmtLqiReq_15:
        MOV     A,?V6
        CLR     C
        SUBB    A,?V4
        MOV     ?V0,A
        SJMP    ??ZDO_ProcessMgmtLqiReq_16
// 1400           break;
// 1401         }
// 1402       }
// 1403 
// 1404       // Loop through neighbor items and finish list
// 1405       for ( ; x < numItems; x++ )
// 1406       {
// 1407         // Add next neighbor table item
// 1408         NLME_GetRequest( nwkNeighborTable, index++, &entry );
// 1409 
// 1410         // set ZDP_MgmtLqiItem_t fields
// 1411         item->panID    = entry.panId;
// 1412         osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1413         osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
// 1414         item->nwkAddr  = entry.neighborAddress;
// 1415         item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1416         item->relation = ZDP_MGMT_REL_UNKNOWN;
// 1417         item->permit   = ZDP_MGMT_BOOL_UNKNOWN;
// 1418         item->depth    = 0xFF;
// 1419         item->lqi      = entry.linkInfo.rxLqi;
// 1420 
// 1421         if ( item->nwkAddr == 0 )
// 1422         {
// 1423           item->devType = ZDP_MGMT_DT_COORD;
// 1424         }
// 1425         else
// 1426         {
// 1427           item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_17:
        LCALL   ?Subroutine96 & 0xFFFF
// 1428         }
??CrossCallReturnLabel_278:
        MOVX    @DPTR,A
// 1429 
// 1430         item++;
        MOV     A,R6
        ADD     A,#0x1a
        MOV     R6,A
        JNC     ??ZDO_ProcessMgmtLqiReq_18
        INC     R7
??ZDO_ProcessMgmtLqiReq_18:
        INC     ?V5
??ZDO_ProcessMgmtLqiReq_13:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V1
        JNC     ??ZDO_ProcessMgmtLqiReq_2
??ZDO_ProcessMgmtLqiReq_16:
        ; Setup parameters for call to function NLME_GetRequest
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP102_8
        MOV     R2,?V0
        MOV     R3,#0x0
        MOV     R1,#-0x79
        LCALL   ??NLME_GetRequest?relay; Banked call to: NLME_GetRequest
        INC     ?V0
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine29 & 0xFFFF
??CrossCallReturnLabel_38:
        LCALL   ??sAddrExtCpy?relay  ; Banked call to: sAddrExtCpy
        ; Setup parameters for call to function osal_memset
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_273:
        LCALL   ??osal_memset?relay  ; Banked call to: osal_memset
        MOV     A,R6
        ADD     A,#0x12
        MOV     R0,A
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_459:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_26:
        MOV     A,#0x3
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_17:
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_199:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_66:
        MOV     A,R0
        ORL     A,R1
        JNZ     ??ZDO_ProcessMgmtLqiReq_17
        LCALL   ?Subroutine113 & 0xFFFF
// 1431       }
// 1432     }
// 1433   }
??CrossCallReturnLabel_185:
        SJMP    ??CrossCallReturnLabel_278
// 1434   else
// 1435   {
// 1436     numItems = 0;
??ZDO_ProcessMgmtLqiReq_0:
        MOV     ?V1,#0x0
// 1437   }
// 1438 
// 1439   // Send response
// 1440   ZDP_MgmtLqiRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxItems,
// 1441                   StartIndex, numItems, table, false );
??ZDO_ProcessMgmtLqiReq_2:
        ; Setup parameters for call to function ZDP_MgmtLqiRsp
        MOV     ?V2,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 60)
        MOV     R0,#?V10
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 62)
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 63)
        MOV     A,?V6
        MOV     ?V1,A
        MOV     R0,#?V1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 64)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,#0x0
        MOV     A,?V12
        LCALL   ??Subroutine174_0 & 0xFFFF
??CrossCallReturnLabel_309:
        ADDC    A,?V13
        MOV     R3,A
        MOV     A,?V12
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_169:
        ADDC    A,?V13
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??ZDP_MgmtLqiRsp?relay; Banked call to: ZDP_MgmtLqiRsp
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 59)
// 1442 
// 1443   if ( table )
        MOV     A,?V10
        ORL     A,?V11
        JZ      ??ZDO_ProcessMgmtLqiReq_19
// 1444   {
// 1445     osal_mem_free( table );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V10
        MOV     R3,?V11
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
// 1446   }
// 1447 }
??ZDO_ProcessMgmtLqiReq_19:
        MOV     A,#0x25
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock162
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock163 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xe
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock163

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine119:
          CFI Block cfiCond164 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_198
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond165) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond165) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond165) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond165) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond165) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond165) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond165) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond165) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond165) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond165) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond165) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond165) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond165) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker166 Using cfiCommon1
          CFI (cfiPicker166) NoFunction
          CFI (cfiPicker166) Picker
        MOV     A,R6
        ADD     A,#0x19
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiPicker166

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine118:
          CFI Block cfiCond167 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_195
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_196
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond168) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond168) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond168) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond168) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond168) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond168) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond168) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond168) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond168) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond168) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond168) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond169 Using cfiCommon0
          CFI (cfiCond169) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond169) Conditional ??CrossCallReturnLabel_197
          CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond169) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond169) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond169) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond169) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond169) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond169) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond169) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond169) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond169) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond169) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond169) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond169) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond169) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond169) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker170 Using cfiCommon1
          CFI (cfiPicker170) NoFunction
          CFI (cfiPicker170) Picker
        LCALL   ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_238:
        RET
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiCond169
          CFI EndBlock cfiPicker170

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine150:
          CFI Block cfiCond171 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_195
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_196
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond172) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond172) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond172) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond172) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond172) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond172) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond172) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+-5
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_197
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond173) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond173) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond173) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond173) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond173) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond173) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond173) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+-5
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_16
          CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond174) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond174) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond174) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond174) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond174) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond174) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond174) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond174) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond174) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond174) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond174) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond174) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond174) CFA_SP SP+-4
          CFI (cfiCond174) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_17
          CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond175) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond175) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond175) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond175) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond175) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond175) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond175) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond175) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond175) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond175) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond175) CFA_SP SP+-4
          CFI (cfiCond175) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker176 Using cfiCommon1
          CFI (cfiPicker176) NoFunction
          CFI (cfiPicker176) Picker
        MOV     A,R6
        ADD     A,#0x18
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiPicker176

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine113:
          CFI Block cfiCond177 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_184
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond178 Using cfiCommon0
          CFI (cfiCond178) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond178) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond178) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond178) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond178) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond178) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond178) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond178) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond178) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond178) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond178) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond178) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond178) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond178) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond178) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond178) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond178) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond178) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond178) CFA_SP SP+-2
          CFI (cfiCond178) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker179 Using cfiCommon1
          CFI (cfiPicker179) NoFunction
          CFI (cfiPicker179) Picker
        LCALL   ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_265:
        CLR     A
        RET
          CFI EndBlock cfiCond177
          CFI EndBlock cfiCond178
          CFI EndBlock cfiPicker179

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine108:
          CFI Block cfiCond180 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_272
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_273
          CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond181) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond181) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond181) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond181) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond181) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond181) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond181) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond181) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond181) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond181) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond181) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond181) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond181) CFA_SP SP+-2
          CFI (cfiCond181) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker182 Using cfiCommon1
          CFI (cfiPicker182) NoFunction
          CFI (cfiPicker182) Picker
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R1,#-0x1
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiPicker182
        REQUIRE ??Subroutine167_0
        ; // Fall through to label ??Subroutine167_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine167_0:
          CFI Block cfiCond183 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_271
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_272
          CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond184) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond184) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond184) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond184) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond184) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond184) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond184) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond184) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond184) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond184) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond184) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond184) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond184) CFA_SP SP+-2
          CFI (cfiCond184) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_273
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond185) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond185) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond185) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond185) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond185) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond185) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond185) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond185) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond185) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+-2
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker186 Using cfiCommon1
          CFI (cfiPicker186) NoFunction
          CFI (cfiPicker186) Picker
        MOV     A,R6
        ADD     A,#0xa
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiPicker186

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond187 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_277
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond188) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond188) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond188) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond188) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond188) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond188) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond188) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond188) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond188) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond188) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_SP SP+-2
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker189 Using cfiCommon1
          CFI (cfiPicker189) NoFunction
          CFI (cfiPicker189) Picker
        MOV     A,R6
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiPicker189
        REQUIRE ??Subroutine168_0
        ; // Fall through to label ??Subroutine168_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine168_0:
          CFI Block cfiCond190 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_276
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond191) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond191) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond191) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond191) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond191) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_SP SP+-2
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond192) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond192) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond192) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond192) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond192) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond192) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond192) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond192) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond192) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond192) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+-2
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker193 Using cfiCommon1
          CFI (cfiPicker193) NoFunction
          CFI (cfiPicker193) Picker
        ADD     A,#0x14
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiPicker193
        REQUIRE ??Subroutine169_0
        ; // Fall through to label ??Subroutine169_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine169_0:
          CFI Block cfiCond194 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_274
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond195 Using cfiCommon0
          CFI (cfiCond195) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond195) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond195) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond195) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond195) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond195) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond195) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond195) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond195) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond195) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond195) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond195) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond195) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond195) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond195) CFA_SP SP+-2
          CFI (cfiCond195) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond196) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond196) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond196) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond196) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond196) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond196) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond196) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond196) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond196) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond196) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+-2
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond197) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond197) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond197) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond197) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond197) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond197) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond197) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond197) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond197) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond197) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond197) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+-2
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond198) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond198) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond198) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond198) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond198) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond198) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond198) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond198) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond198) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond198) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond198) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond198) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond198) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond198) CFA_SP SP+-2
          CFI (cfiCond198) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker199 Using cfiCommon1
          CFI (cfiPicker199) NoFunction
          CFI (cfiPicker199) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond194
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiPicker199

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond200 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_281
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond201 Using cfiCommon0
          CFI (cfiCond201) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond201) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond201) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond201) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond201) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond201) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond201) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond201) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond201) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond201) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond201) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond201) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond201) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond201) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond201) CFA_SP SP+-2
          CFI (cfiCond201) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond202 Using cfiCommon0
          CFI (cfiCond202) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond202) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond202) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond202) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond202) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond202) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond202) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond202) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond202) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond202) CFA_SP SP+-2
          CFI (cfiCond202) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond203) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond203) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond203) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond203) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond203) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+-2
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker204 Using cfiCommon1
          CFI (cfiPicker204) NoFunction
          CFI (cfiPicker204) Picker
        MOV     A,R2
          CFI EndBlock cfiCond200
          CFI EndBlock cfiCond201
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiPicker204
        REQUIRE ??Subroutine170_0
        ; // Fall through to label ??Subroutine170_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine170_0:
          CFI Block cfiCond205 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_279
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond206 Using cfiCommon0
          CFI (cfiCond206) Function ZDO_ParseAddrRsp
          CFI (cfiCond206) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond206) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond206) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond206) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond206) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond206) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond206) CFA_SP SP+-2
          CFI (cfiCond206) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond207) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond207) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond207) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond207) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond207) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond207) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond207) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond207) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond207) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond207) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+-2
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond208 Using cfiCommon0
          CFI (cfiCond208) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond208) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond208) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond208) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond208) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond208) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond208) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond208) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond208) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond208) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond208) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond208) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond208) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond208) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond208) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond208) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond208) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond208) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond208) CFA_SP SP+-2
          CFI (cfiCond208) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond209 Using cfiCommon0
          CFI (cfiCond209) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond209) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond209) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond209) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond209) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond209) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond209) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond209) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond209) CFA_SP SP+-2
          CFI (cfiCond209) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+-2
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker211 Using cfiCommon1
          CFI (cfiPicker211) NoFunction
          CFI (cfiPicker211) Picker
        LCALL   ??Subroutine173_0 & 0xFFFF
??CrossCallReturnLabel_307:
        RET
          CFI EndBlock cfiCond205
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiCond208
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiPicker211

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond212 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_296
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+-2
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker214 Using cfiCommon1
          CFI (cfiPicker214) NoFunction
          CFI (cfiPicker214) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiPicker214
        REQUIRE ??Subroutine171_0
        ; // Fall through to label ??Subroutine171_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine171_0:
          CFI Block cfiCond215 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_285
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_286
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond216) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond216) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond216) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond216) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond216) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond216) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond216) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond216) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond216) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond216) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond216) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond216) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond216) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+-2
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_287
          CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond217) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond217) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond217) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond217) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond217) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond217) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond217) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond217) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond217) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond217) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond217) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond217) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond217) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond217) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond217) CFA_SP SP+-2
          CFI (cfiCond217) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_288
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond218) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond218) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond218) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond218) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond218) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond218) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond218) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond218) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond218) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+-2
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_289
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond219) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond219) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond219) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond219) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond219) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond219) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond219) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond219) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond219) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond219) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+-2
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond220 Using cfiCommon0
          CFI (cfiCond220) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond220) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond220) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond220) CFA_SP SP+-2
          CFI (cfiCond220) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+-2
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+-2
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+-2
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond224) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond224) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond224) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond224) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond224) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond224) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond224) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond224) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond224) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond224) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond224) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+-2
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+-2
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond226 Using cfiCommon0
          CFI (cfiCond226) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond226) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond226) CFA_SP SP+-2
          CFI (cfiCond226) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond227 Using cfiCommon0
          CFI (cfiCond227) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond227) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond227) CFA_SP SP+-2
          CFI (cfiCond227) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker228 Using cfiCommon1
          CFI (cfiPicker228) NoFunction
          CFI (cfiPicker228) Picker
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_300:
        ORL     A,R1
        RET
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiCond226
          CFI EndBlock cfiCond227
          CFI EndBlock cfiPicker228

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond229 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond230 Using cfiCommon0
          CFI (cfiCond230) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond230) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond230) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond230) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond230) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond230) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond230) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond230) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond230) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond230) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond230) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond230) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond230) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond230) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond230) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond230) CFA_SP SP+-2
          CFI (cfiCond230) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker231 Using cfiCommon1
          CFI (cfiPicker231) NoFunction
          CFI (cfiPicker231) Picker
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_352:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,#(_NIB + 53) & 0xff
        MOV     R5,#((_NIB + 53) >> 8) & 0xff
        MOV     A,R6
        LCALL   ??Subroutine174_0 & 0xFFFF
??CrossCallReturnLabel_312:
        ADDC    A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond229
          CFI EndBlock cfiCond230
          CFI EndBlock cfiPicker231

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond232 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_30
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_31
          CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond233) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond233) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond233) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond233) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond233) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond233) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond233) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond233) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond233) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond233) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond233) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond233) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond233) CFA_SP SP+-2
          CFI (cfiCond233) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond234) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond234) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond234) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond234) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond234) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond234) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond234) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond234) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond234) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond234) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+-2
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker235 Using cfiCommon1
          CFI (cfiPicker235) NoFunction
          CFI (cfiPicker235) Picker
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_211:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiPicker235

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond236 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_25
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_26
          CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond237) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond237) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond237) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond237) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond237) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond237) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond237) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond237) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond237) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond237) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond237) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond237) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond237) CFA_SP SP+-2
          CFI (cfiCond237) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker238 Using cfiCommon1
          CFI (cfiPicker238) NoFunction
          CFI (cfiPicker238) Picker
        MOVX    @DPTR,A
        LCALL   ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_236:
        MOV     A,#0x2
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x16
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiPicker238

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine148:
          CFI Block cfiCond239 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_235
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_25
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond240) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond240) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond240) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond240) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+-4
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond241 Using cfiCommon0
          CFI (cfiCond241) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond241) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_26
          CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond241) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond241) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond241) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond241) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond241) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond241) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond241) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond241) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond241) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond241) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond241) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond241) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond241) CFA_SP SP+-4
          CFI (cfiCond241) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker242 Using cfiCommon1
          CFI (cfiPicker242) NoFunction
          CFI (cfiPicker242) Picker
        MOV     A,R6
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiCond241
          CFI EndBlock cfiPicker242

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond243 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond244 Using cfiCommon0
          CFI (cfiCond244) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond244) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond244) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond244) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond244) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond244) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond244) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond244) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond244) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond244) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond244) CFA_SP SP+-2
          CFI (cfiCond244) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker245 Using cfiCommon1
          CFI (cfiPicker245) NoFunction
          CFI (cfiPicker245) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x17
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,#0x2
        MOVX    @DPTR,A
        LCALL   ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_237:
        MOV     A,#-0x1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond243
          CFI EndBlock cfiCond244
          CFI EndBlock cfiPicker245
// 1448 
// 1449 /*********************************************************************
// 1450  * @fn          ZDO_ProcessMgmtNwkDiscReq
// 1451  *
// 1452  * @brief       This function handles parsing the incoming Management
// 1453  *              Network Discover request and starts the request.
// 1454  *
// 1455  * @param       inMsg - incoming message (request)
// 1456  *
// 1457  * @return      none
// 1458  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1459 void ZDO_ProcessMgmtNwkDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtNwkDiscReq:
          CFI Block cfiBlock246 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
        CODE
// 1460 {
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscReq2
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscTerm
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 7
        MOV     A,#-0x7
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        LCALL   ?Subroutine92 & 0xFFFF
// 1461   NLME_ScanFields_t scan;
// 1462   uint8             index;
// 1463   uint8             *msg;
// 1464 
// 1465   msg = inMsg->asdu;
??CrossCallReturnLabel_301:
        LCALL   ?Subroutine70 & 0xFFFF
// 1466   scan.channels = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_116:
        LCALL   ??osal_build_uint32?relay; Banked call to: osal_build_uint32
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?XSTORE_R0123
// 1467   msg += 4;
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        JNC     ??ZDO_ProcessMgmtNwkDiscReq_0
        INC     R7
// 1468   scan.duration = *msg++;
??ZDO_ProcessMgmtNwkDiscReq_0:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine46 & 0xFFFF
// 1469   index         = *msg;
??CrossCallReturnLabel_76:
        MOVX    A,@DPTR
        MOV     R0,A
// 1470   scan.scanType = ZMAC_ACTIVE_SCAN;
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1471   scan.scanApp  = NLME_DISC_SCAN;
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1472 
// 1473   // Save off the information to be used for the response
// 1474   zdappMgmtNwkDiscReqInProgress          = true;
        MOV     DPTR,#zdappMgmtNwkDiscReqInProgress
        MOVX    @DPTR,A
// 1475   zdappMgmtNwkDiscRspAddr.addrMode       = Addr16Bit;
        MOV     DPTR,#zdappMgmtNwkDiscRspAddr + 8
        INC     A
        LCALL   ?Subroutine53 & 0xFFFF
// 1476   zdappMgmtNwkDiscRspAddr.addr.shortAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_92:
        INC     DPTR
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_460:
        MOV     DPTR,#zdappMgmtNwkDiscRspAddr
        LCALL   ?Subroutine51 & 0xFFFF
// 1477   zdappMgmtNwkDiscStartIndex             = index;
??CrossCallReturnLabel_89:
        MOV     A,R0
        MOV     DPTR,#zdappMgmtNwkDiscStartIndex
        LCALL   ?Subroutine33 & 0xFFFF
// 1478   zdappMgmtNwkDiscRspTransSeq            = inMsg->TransSeq;
??CrossCallReturnLabel_47:
        MOV     DPTR,#zdappMgmtNwkDiscRspTransSeq
        MOVX    @DPTR,A
// 1479 
// 1480   if ( NLME_NwkDiscReq2( &scan ) != ZSuccess )
        ; Setup parameters for call to function NLME_NwkDiscReq2
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   ??NLME_NwkDiscReq2?relay; Banked call to: NLME_NwkDiscReq2
        MOV     A,R1
        JZ      ??ZDO_ProcessMgmtNwkDiscReq_1
// 1481   {
// 1482     NLME_NwkDiscTerm();
        ; Setup parameters for call to function NLME_NwkDiscTerm
        LCALL   ??NLME_NwkDiscTerm?relay; Banked call to: NLME_NwkDiscTerm
// 1483 
// 1484     // zdappMgmtNwkDiscReqInProgress will be reset in the confirm callback
// 1485   }
// 1486 }
??ZDO_ProcessMgmtNwkDiscReq_1:
        MOV     A,#0x7
        LJMP    ??Subroutine160_0 & 0xFFFF
          CFI EndBlock cfiBlock246

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond247 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_301
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_SP SP+-2
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker249 Using cfiCommon1
          CFI (cfiPicker249) NoFunction
          CFI (cfiPicker249) Picker
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     A,R2
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiPicker249
        REQUIRE ??Subroutine172_0
        ; // Fall through to label ??Subroutine172_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine172_0:
          CFI Block cfiCond250 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_303
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_301
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+-2
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-2
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker253 Using cfiCommon1
          CFI (cfiPicker253) NoFunction
          CFI (cfiPicker253) Picker
        LCALL   ??Subroutine173_0 & 0xFFFF
??CrossCallReturnLabel_308:
        ADDC    A,?V1
        RET
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiPicker253

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine144:
          CFI Block cfiCond254 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_120
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function ZDO_ProcessUserDescSet
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_121
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+-4
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_151
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+-4
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function ZDO_ParseAddrRsp
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_152
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond257) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond257) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+-4
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_153
          CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond258) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond258) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond258) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond258) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond258) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond258) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond258) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond258) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond258) CFA_SP SP+-4
          CFI (cfiCond258) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker259 Using cfiCommon1
          CFI (cfiPicker259) NoFunction
          CFI (cfiPicker259) Picker
        MOV     A,R6
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiPicker259
        REQUIRE ??Subroutine173_0
        ; // Fall through to label ??Subroutine173_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine173_0:
          CFI Block cfiCond260 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_108
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond261 Using cfiCommon0
          CFI (cfiCond261) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond261) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_109
          CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond261) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond261) CFA_SP SP+-4
          CFI (cfiCond261) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond262 Using cfiCommon0
          CFI (cfiCond262) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond262) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_281
          CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond262) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond262) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond262) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond262) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond262) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond262) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond262) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond262) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond262) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond262) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond262) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond262) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond262) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond262) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond262) CFA_SP SP+-4
          CFI (cfiCond262) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond263 Using cfiCommon0
          CFI (cfiCond263) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond263) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_282
          CFI (cfiCond263) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond263) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond263) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond263) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond263) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond263) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond263) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond263) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond263) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond263) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond263) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond263) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond263) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond263) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond263) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond263) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond263) CFA_SP SP+-4
          CFI (cfiCond263) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond264 Using cfiCommon0
          CFI (cfiCond264) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond264) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_283
          CFI (cfiCond264) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond264) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond264) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond264) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond264) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond264) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond264) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond264) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond264) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond264) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond264) CFA_SP SP+-4
          CFI (cfiCond264) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_284
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond265) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond265) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond265) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond265) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond265) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+-4
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_279
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+-4
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond267 Using cfiCommon0
          CFI (cfiCond267) Function ZDO_ParseAddrRsp
          CFI (cfiCond267) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_280
          CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond267) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond267) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond267) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond267) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond267) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond267) CFA_SP SP+-4
          CFI (cfiCond267) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_301
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+-4
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_302
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+-4
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_303
          CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond270) CFA_SP SP+-4
          CFI (cfiCond270) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_120
          CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond271) CFA_SP SP+-4
          CFI (cfiCond271) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function ZDO_ProcessUserDescSet
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_121
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+-4
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond273 Using cfiCommon0
          CFI (cfiCond273) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond273) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_151
          CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond273) CFA_SP SP+-4
          CFI (cfiCond273) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function ZDO_ParseAddrRsp
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_152
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+-4
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond275 Using cfiCommon0
          CFI (cfiCond275) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond275) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_153
          CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond275) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond275) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond275) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond275) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond275) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond275) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond275) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond275) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond275) CFA_SP SP+-4
          CFI (cfiCond275) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker276 Using cfiCommon1
          CFI (cfiPicker276) NoFunction
          CFI (cfiPicker276) Picker
        ADD     A,#0x13
        MOV     DPL,A
        CLR     A
        RET
          CFI EndBlock cfiCond260
          CFI EndBlock cfiCond261
          CFI EndBlock cfiCond262
          CFI EndBlock cfiCond263
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiCond275
          CFI EndBlock cfiPicker276

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond277 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_46
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond278 Using cfiCommon0
          CFI (cfiCond278) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond278) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond278) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond278) CFA_SP SP+-2
          CFI (cfiCond278) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker279 Using cfiCommon1
          CFI (cfiPicker279) NoFunction
          CFI (cfiPicker279) Picker
        MOVX    @DPTR,A
        LCALL   ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_231:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond277
          CFI EndBlock cfiCond278
          CFI EndBlock cfiPicker279
// 1487 
// 1488 #if defined ( ZDO_MGMT_NWKDISC_RESPONSE )
// 1489 /*********************************************************************
// 1490  * @fn          ZDO_FinishProcessingMgmtNwkDiscReq
// 1491  *
// 1492  * @brief       This function finishes the processing of the Management
// 1493  *              Network Discover Request and generates the response.
// 1494  *
// 1495  *   Note:      This function will limit the number of items returned
// 1496  *              to ZDO_MAX_NWKDISC_ITEMS items.
// 1497  *
// 1498  * @param       ResultCountSrcAddr - source of the request
// 1499  * @param       msg - pointer to incoming message
// 1500  * @param       SecurityUse -
// 1501  *
// 1502  * @return      none
// 1503  */
// 1504 void ZDO_FinishProcessingMgmtNwkDiscReq( void )
// 1505 {
// 1506   byte count, i, ResultCount = 0;
// 1507   networkDesc_t *newDesc = NULL, *pList, *NetworkList;
// 1508 
// 1509   NetworkList = nwk_getNwkDescList();
// 1510 
// 1511   // Count the number of nwk descriptors in the list
// 1512   pList = nwk_getNwkDescList();
// 1513   while (pList)
// 1514   {
// 1515     ResultCount++;
// 1516     pList = pList->nextDesc;
// 1517   }
// 1518 
// 1519   if ( ZSTACK_ROUTER_BUILD )
// 1520   {
// 1521     // Look for my PanID.
// 1522     pList = nwk_getNwkDescList();
// 1523     while ( pList )
// 1524     {
// 1525       if ( pList->panId == _NIB.nwkPanId )
// 1526       {
// 1527         break;
// 1528       }
// 1529 
// 1530 
// 1531       if ( !pList->nextDesc )
// 1532       {
// 1533         break;
// 1534       }
// 1535       pList = pList->nextDesc;
// 1536     }
// 1537 
// 1538 
// 1539     // If my Pan not present (query to a star network ZC or an isolated ZR?),
// 1540     // prepend it.
// 1541     if ( !pList || (pList->panId != _NIB.nwkPanId) )
// 1542     {
// 1543       newDesc = (networkDesc_t *)osal_mem_alloc( sizeof( networkDesc_t ) );
// 1544       if ( newDesc )
// 1545       {
// 1546         byte pJoin;
// 1547 
// 1548         newDesc->panId = _NIB.nwkPanId;
// 1549         newDesc->logicalChannel = _NIB.nwkLogicalChannel;
// 1550         newDesc->version = NLME_GetProtocolVersion();
// 1551         newDesc->stackProfile = zgStackProfile;
// 1552 
// 1553         //Extended PanID
// 1554         osal_cpyExtAddr( newDesc->extendedPANID, _NIB.extendedPANID);
// 1555 
// 1556         ZMacGetReq( ZMacAssociationPermit, &pJoin );
// 1557         newDesc->chosenRouter = ((pJoin) ? ZDAppNwkAddr.addr.shortAddr :
// 1558                                            INVALID_NODE_ADDR);
// 1559 
// 1560         newDesc->nextDesc = NetworkList;
// 1561         NetworkList = newDesc;
// 1562         ResultCount++;
// 1563       }
// 1564     }
// 1565   }
// 1566 
// 1567   // Calc the count and apply a max count.
// 1568   if ( zdappMgmtNwkDiscStartIndex > ResultCount )
// 1569   {
// 1570     count = 0;
// 1571   }
// 1572   else
// 1573   {
// 1574     count = ResultCount - zdappMgmtNwkDiscStartIndex;
// 1575     if ( count > ZDO_MAX_NWKDISC_ITEMS )
// 1576     {
// 1577       count = ZDO_MAX_NWKDISC_ITEMS;
// 1578     }
// 1579 
// 1580     // Move the list pointer up to the start index.
// 1581     for ( i = 0; i < zdappMgmtNwkDiscStartIndex; i++ )
// 1582     {
// 1583       NetworkList = NetworkList->nextDesc;
// 1584     }
// 1585   }
// 1586 
// 1587   ZDP_MgmtNwkDiscRsp( zdappMgmtNwkDiscRspTransSeq,
// 1588                      &zdappMgmtNwkDiscRspAddr, ZSuccess, ResultCount,
// 1589                       zdappMgmtNwkDiscStartIndex,
// 1590                       count,
// 1591                       NetworkList,
// 1592                       false );
// 1593 
// 1594   if ( ZSTACK_ROUTER_BUILD )
// 1595   {
// 1596     if ( newDesc != NULL )
// 1597     {
// 1598       osal_mem_free( newDesc );
// 1599     }
// 1600   }
// 1601 
// 1602   NLME_NwkDiscTerm();
// 1603 }
// 1604 #endif
// 1605 
// 1606 /*********************************************************************
// 1607  * @fn          ZDO_ProcessMgmtRtgReq
// 1608  *
// 1609  * @brief       This function finishes the processing of the Management
// 1610  *              Routing Request and generates the response.
// 1611  *
// 1612  *   Note:      This function will limit the number of items returned
// 1613  *              to ZDO_MAX_RTG_ITEMS items.
// 1614  *
// 1615  * @param       inMsg - incoming message (request)
// 1616  *
// 1617  * @return      none
// 1618  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1619 void ZDO_ProcessMgmtRtgReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtRtgReq:
          CFI Block cfiBlock280 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
        CODE
// 1620 {
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, ZDP_MgmtRtgRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V2,R2
        MOV     ?V3,R3
// 1621   byte x;
// 1622   byte maxNumItems;
// 1623   byte numItems = 0;
        MOV     R6,#0x0
// 1624   uint8 *pBuf = NULL;
        MOV     ?V6,R6
        MOV     ?V7,R6
// 1625   rtgItem_t *pList;
// 1626   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_283:
        ADDC    A,?V3
        MOV     DPH,A
        LCALL   ??Subroutine176_0 & 0xFFFF
??CrossCallReturnLabel_317:
        MOV     R7,A
// 1627 
// 1628   // Get the number of table items
// 1629   NLME_GetRequest( nwkNumRoutingTableEntries, 0, &maxNumItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x63
        LCALL   ??NLME_GetRequest?relay; Banked call to: NLME_GetRequest
// 1630 
// 1631   if ( maxNumItems > StartIndex )
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R7
        CLR     C
        SUBB    A,R0
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtRtgReq_0 & 0xFFFF
// 1632   {
// 1633     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R7
        MOV     R6,A
// 1634 
// 1635     // limit the size of the list
// 1636     if ( numItems > ZDO_MAX_RTG_ITEMS )
        CLR     C
        SUBB    A,#0xb
        JC      ??ZDO_ProcessMgmtRtgReq_1
// 1637     {
// 1638       numItems = ZDO_MAX_RTG_ITEMS;
        MOV     R6,#0xa
// 1639     }
// 1640 
// 1641     // Allocate the memory to build the table
// 1642     pBuf = osal_mem_alloc( (short)(sizeof( rtgItem_t ) * numItems) );
??ZDO_ProcessMgmtRtgReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        MOV     B,#0x7
        MUL     AB
        MOV     R2,A
        MOV     R3,B
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     ?V6,R2
        MOV     ?V7,R3
// 1643 
// 1644     if ( pBuf != NULL )
        MOV     A,R2
        ORL     A,?V7
        JZ      ??ZDO_ProcessMgmtRtgReq_2
// 1645     {
// 1646       // Convert buffer to list
// 1647       pList = (rtgItem_t *)pBuf;
// 1648 
// 1649       // Loop through items and build list
// 1650       for ( x = 0; x < numItems; x++ )
        MOV     ?V4,#0x0
        SJMP    ??ZDO_ProcessMgmtRtgReq_3
// 1651       {
// 1652         NLME_GetRequest( nwkRoutingTable, (uint16)(x + StartIndex), (void*)pList );
// 1653 
// 1654         // Remap the status to the RoutingTableList Record Format defined in the ZigBee spec
// 1655         switch( pList->status )
// 1656         {
// 1657           case RT_ACTIVE:
// 1658             pList->status = ZDO_MGMT_RTG_ENTRY_ACTIVE;
// 1659             break;
// 1660 
// 1661           case RT_DISC:
// 1662             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_UNDERWAY;
// 1663             break;
// 1664 
// 1665           case RT_LINK_FAIL:
// 1666             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_FAILED;
// 1667             break;
// 1668 
// 1669           case RT_INIT:
// 1670           case RT_REPAIR:
// 1671           default:
// 1672             pList->status = ZDO_MGMT_RTG_ENTRY_INACTIVE;
??ZDO_ProcessMgmtRtgReq_4:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x3
??ZDO_ProcessMgmtRtgReq_5:
        MOVX    @DPTR,A
// 1673             break;
// 1674         }
// 1675 
// 1676         // Increment pointer to next record
// 1677         pList++;
        MOV     A,?V0
        ADD     A,#0x7
        MOV     ?V0,A
        JNC     ??ZDO_ProcessMgmtRtgReq_6
        INC     ?V1
??ZDO_ProcessMgmtRtgReq_6:
        INC     ?V4
??ZDO_ProcessMgmtRtgReq_3:
        MOV     A,?V4
        CLR     C
        SUBB    A,R6
        JNC     ??ZDO_ProcessMgmtRtgReq_0
        ; Setup parameters for call to function NLME_GetRequest
        MOV     R4,?V0
        MOV     R5,?V1
        MOV     A,?V4
        ADD     A,R7
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        MOV     R1,#-0x75
        LCALL   ??NLME_GetRequest?relay; Banked call to: NLME_GetRequest
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_7
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_8
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_9
        SJMP    ??ZDO_ProcessMgmtRtgReq_4
??ZDO_ProcessMgmtRtgReq_7:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_8:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x1
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_9:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x2
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
// 1678       }
// 1679     }
// 1680     else
// 1681     {
// 1682       numItems = 0;
??ZDO_ProcessMgmtRtgReq_2:
        MOV     R6,#0x0
// 1683     }
// 1684   }
// 1685 
// 1686   // Send response
// 1687   ZDP_MgmtRtgRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxNumItems, StartIndex, numItems,
// 1688                         (rtgItem_t *)pBuf, false );
??ZDO_ProcessMgmtRtgReq_0:
        ; Setup parameters for call to function ZDP_MgmtRtgRsp
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R6
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R7
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,#0x0
        MOV     A,?V2
        LCALL   ??Subroutine174_0 & 0xFFFF
??CrossCallReturnLabel_310:
        ADDC    A,?V3
        MOV     R3,A
        MOV     A,?V2
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_170:
        ADDC    A,?V3
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??ZDP_MgmtRtgRsp?relay; Banked call to: ZDP_MgmtRtgRsp
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
// 1689 
// 1690   if ( pBuf != NULL )
        MOV     A,?V6
        ORL     A,?V7
        JZ      ??ZDO_ProcessMgmtRtgReq_10
// 1691   {
// 1692     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V6
        MOV     R3,?V7
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
// 1693   }
// 1694 }
??ZDO_ProcessMgmtRtgReq_10:
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        LJMP    ??Subroutine195_0 & 0xFFFF
          CFI EndBlock cfiBlock280
// 1695 
// 1696 /*********************************************************************
// 1697  * @fn          ZDO_ProcessMgmtBindReq
// 1698  *
// 1699  * @brief       This function finishes the processing of the Management
// 1700  *              Bind Request and generates the response.
// 1701  *
// 1702  *   Note:      This function will limit the number of items returned
// 1703  *              to ZDO_MAX_BIND_ITEMS items.
// 1704  *
// 1705  * @param       inMsg - incoming message (request)
// 1706  *
// 1707  * @return      none
// 1708  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1709 void ZDO_ProcessMgmtBindReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtBindReq:
          CFI Block cfiBlock281 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
        CODE
// 1710 {
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, ZDP_MgmtBindRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V4,R2
        MOV     ?V5,R3
// 1711 #if defined ( REFLECTOR )
// 1712   byte x;
// 1713   uint16 maxNumItems;
// 1714   uint16 numItems;
// 1715   uint8 *pBuf = NULL;
        MOV     ?V8,#0x0
        MOV     ?V9,#0x0
// 1716   apsBindingItem_t *pList;
// 1717   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_284:
        ADDC    A,?V5
        MOV     DPH,A
        LCALL   ??Subroutine176_0 & 0xFFFF
??CrossCallReturnLabel_318:
        MOV     ?V2,A
// 1718   uint8 status;
// 1719 
// 1720   // Get the number of table items
// 1721   APSME_GetRequest( apsNumBindingTableEntries, 0, (byte*)(&maxNumItems) );
        ; Setup parameters for call to function APSME_GetRequest
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x5d
        LCALL   ??APSME_GetRequest?relay; Banked call to: APSME_GetRequest
// 1722 
// 1723   if ( maxNumItems > StartIndex )
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_463:
        CLR     C
        MOV     A,?V2
        SUBB    A,R2
        CLR     A
        SUBB    A,R3
        JNC     ??ZDO_ProcessMgmtBindReq_0
// 1724   {
// 1725     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R0,?V2
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R0
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x0
        MOV     R7,A
// 1726   }
// 1727   else
// 1728   {
// 1729     numItems = 0;
// 1730   }
// 1731 
// 1732   // limit the size of the list
// 1733   if ( numItems > ZDO_MAX_BIND_ITEMS )
        CLR     C
        MOV     A,R6
        SUBB    A,#0x4
        MOV     A,R7
        SUBB    A,#0x0
        JC      ??ZDO_ProcessMgmtBindReq_1
// 1734   {
// 1735     numItems = ZDO_MAX_BIND_ITEMS;
        MOV     R6,#0x3
        MOV     R7,#0x0
        SJMP    ??ZDO_ProcessMgmtBindReq_2
// 1736   }
// 1737 
// 1738   // Allocate the memory to build the table
// 1739   if ( numItems && (pBuf = osal_mem_alloc( sizeof( apsBindingItem_t ) * numItems )) )
??ZDO_ProcessMgmtBindReq_1:
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ProcessMgmtBindReq_0
??ZDO_ProcessMgmtBindReq_2:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     A,R2
        MOV     B,#0x15
        MUL     AB
        MOV     R2,A
        MOV     R0,B
        MOV     B,#0x15
        MOV     A,R3
        MUL     AB
        ADD     A,R0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     ?V8,R2
        MOV     ?V9,R3
        MOV     A,R2
        ORL     A,?V9
        JZ      ??ZDO_ProcessMgmtBindReq_0
// 1740   {
// 1741     status = ZSuccess;
        MOV     ?V3,#0x0
// 1742 
// 1743     // Convert buffer to list
// 1744     pList = (apsBindingItem_t *)pBuf;
// 1745 
// 1746     // Loop through items and build list
// 1747     for ( x = 0; x < numItems; x++ )
        MOV     ?V6,#0x0
??ZDO_ProcessMgmtBindReq_3:
        CLR     C
        MOV     A,?V6
        SUBB    A,R6
        CLR     A
        SUBB    A,R7
        JNC     ??ZDO_ProcessMgmtBindReq_4
// 1748     {
// 1749       APSME_GetRequest( apsBindingTable, (x + StartIndex), (void*)pList );
        ; Setup parameters for call to function APSME_GetRequest
        MOV     R4,?V0
        MOV     R5,?V1
        MOV     R0,?V2
        MOV     A,?V6
        ADD     A,R0
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        MOV     R1,#-0x5e
        LCALL   ??APSME_GetRequest?relay; Banked call to: APSME_GetRequest
// 1750       pList++;
        MOV     A,?V0
        ADD     A,#0x15
        MOV     ?V0,A
        JNC     ??ZDO_ProcessMgmtBindReq_5
        INC     ?V1
// 1751     }
??ZDO_ProcessMgmtBindReq_5:
        INC     ?V6
        SJMP    ??ZDO_ProcessMgmtBindReq_3
// 1752 
// 1753   }
// 1754   else
// 1755   {
// 1756     status = ZDP_NOT_PERMITTED;
??ZDO_ProcessMgmtBindReq_0:
        MOV     ?V3,#-0x75
// 1757     numItems = 0;
        MOV     R6,#0x0
// 1758   }
// 1759 
// 1760   // Send response
// 1761   ZDP_MgmtBindRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, (byte)maxNumItems, StartIndex,
// 1762                    (byte)numItems, (apsBindingItem_t *)pBuf, false );
??ZDO_ProcessMgmtBindReq_4:
        ; Setup parameters for call to function ZDP_MgmtBindRsp
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R0,#?V8
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R6
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,?V2
        MOV     ?V0,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,?V3
        MOV     A,?V4
        LCALL   ??Subroutine174_0 & 0xFFFF
??CrossCallReturnLabel_311:
        ADDC    A,?V5
        MOV     R3,A
        MOV     A,?V4
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_171:
        ADDC    A,?V5
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??ZDP_MgmtBindRsp?relay; Banked call to: ZDP_MgmtBindRsp
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
// 1763 
// 1764   if ( pBuf )
        MOV     A,?V8
        ORL     A,?V9
        JZ      ??ZDO_ProcessMgmtBindReq_6
// 1765   {
// 1766     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V8
        MOV     R3,?V9
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
// 1767   }
// 1768 #else
// 1769   (void)inMsg;
// 1770 #endif
// 1771 }
??ZDO_ProcessMgmtBindReq_6:
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock281
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock282 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock282

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine145:
          CFI Block cfiCond283 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_313
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond284 Using cfiCommon0
          CFI (cfiCond284) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond284) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond284) CFA_SP SP+-2
          CFI (cfiCond284) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker285 Using cfiCommon1
          CFI (cfiPicker285) NoFunction
          CFI (cfiPicker285) Picker
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,?V0
          CFI EndBlock cfiCond283
          CFI EndBlock cfiCond284
          CFI EndBlock cfiPicker285
        REQUIRE ??Subroutine174_0
        ; // Fall through to label ??Subroutine174_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine174_0:
          CFI Block cfiCond286 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_309
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 64)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_37
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond287) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond287) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond287) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond287) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond287) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond287) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond287) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+-4
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_38
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond288) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond288) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond288) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond288) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond288) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+-4
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond289) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond289) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+-2
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond290) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond290) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond290) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond290) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+-2
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond291) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond291) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+-2
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+-2
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker293 Using cfiCommon1
          CFI (cfiPicker293) NoFunction
          CFI (cfiPicker293) Picker
        ADD     A,#0x2
        MOV     R2,A
        CLR     A
        RET
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiPicker293

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine104:
          CFI Block cfiCond294 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_169
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 64)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond295) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond295) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond295) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+-2
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond296) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond296) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond296) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond296) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond296) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond296) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+-2
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+-2
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker299 Using cfiCommon1
          CFI (cfiPicker299) NoFunction
          CFI (cfiPicker299) Picker
        LCALL   ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_242:
        RET
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiPicker299

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine155:
          CFI Block cfiCond300 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_159
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_160
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond301) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond301) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond301) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond301) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond301) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond301) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond301) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond301) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond301) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond301) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond301) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond301) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+-4
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_169
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond302) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond302) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond302) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond302) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond302) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond302) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond302) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond302) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond302) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+-4
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 64)
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_170
          CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond303) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond303) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond303) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond303) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond303) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond303) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond303) CFA_SP SP+-4
          CFI (cfiCond303) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond304 Using cfiCommon0
          CFI (cfiCond304) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond304) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_171
          CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond304) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond304) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond304) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond304) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond304) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond304) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond304) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond304) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond304) CFA_SP SP+-4
          CFI (cfiCond304) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_172
          CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond305) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond305) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond305) CFA_SP SP+-4
          CFI (cfiCond305) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_173
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+-5
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond307 Using cfiCommon0
          CFI (cfiCond307) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond307) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_98
          CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond307) CFA_SP SP+-6
          CFI (cfiCond307) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond308 Using cfiCommon0
          CFI (cfiCond308) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond308) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_99
          CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond308) CFA_SP SP+-6
          CFI (cfiCond308) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_154
          CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond309) CFA_SP SP+-6
          CFI (cfiCond309) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function ZDO_ProcessUserDescReq
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_155
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+-6
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function ZDO_ProcessUserDescReq
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_156
          CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond311) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond311) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond311) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond311) CFA_SP SP+-6
          CFI (cfiCond311) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_46
          CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond312) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond312) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond312) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond312) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond312) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond312) CFA_SP SP+-6
          CFI (cfiCond312) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond313 Using cfiCommon0
          CFI (cfiCond313) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond313) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_47
          CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond313) CFA_SP SP+-6
          CFI (cfiCond313) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond314 Using cfiCommon0
          CFI (cfiCond314) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond314) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_167
          CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond314) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond314) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond314) CFA_SP SP+-6
          CFI (cfiCond314) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_168
          CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond315) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond315) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond315) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond315) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond315) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond315) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond315) CFA_SP SP+-7
          CFI (cfiCond315) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker316 Using cfiCommon1
          CFI (cfiPicker316) NoFunction
          CFI (cfiPicker316) Picker
        ADD     A,#0xf
        MOV     DPL,A
        CLR     A
        RET
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiCond307
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiCond313
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiPicker316

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond317 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_323
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond318) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond318) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond318) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond318) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond318) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond318) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond318) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond318) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond318) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond318) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond318) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+-2
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker319 Using cfiCommon1
          CFI (cfiPicker319) NoFunction
          CFI (cfiPicker319) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiPicker319
        REQUIRE ??Subroutine175_0
        ; // Fall through to label ??Subroutine175_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine175_0:
          CFI Block cfiCond320 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_321
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond321 Using cfiCommon0
          CFI (cfiCond321) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond321) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond321) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond321) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond321) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond321) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond321) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond321) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond321) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond321) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond321) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond321) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond321) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond321) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond321) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond321) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond321) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond321) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond321) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond321) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond321) CFA_SP SP+-2
          CFI (cfiCond321) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond322 Using cfiCommon0
          CFI (cfiCond322) Function ZDO_UpdateNwkStatus
          CFI (cfiCond322) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond322) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond322) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond322) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond322) CFA_SP SP+-2
          CFI (cfiCond322) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond323 Using cfiCommon0
          CFI (cfiCond323) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond323) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond323) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond323) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond323) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond323) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond323) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond323) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond323) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond323) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond323) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond323) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond323) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond323) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond323) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond323) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond323) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond323) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond323) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond323) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond323) CFA_SP SP+-2
          CFI (cfiCond323) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker324 Using cfiCommon1
          CFI (cfiPicker324) NoFunction
          CFI (cfiPicker324) Picker
        INC     DPTR
          CFI EndBlock cfiCond320
          CFI EndBlock cfiCond321
          CFI EndBlock cfiCond322
          CFI EndBlock cfiCond323
          CFI EndBlock cfiPicker324
        REQUIRE ??Subroutine176_0
        ; // Fall through to label ??Subroutine176_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine176_0:
          CFI Block cfiCond325 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_315
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond326 Using cfiCommon0
          CFI (cfiCond326) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond326) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond326) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond326) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond326) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond326) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond326) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond326) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond326) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond326) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond326) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond326) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond326) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond326) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond326) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond326) CFA_SP SP+-2
          CFI (cfiCond326) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond327 Using cfiCommon0
          CFI (cfiCond327) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond327) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond327) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond327) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond327) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond327) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond327) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond327) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond327) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond327) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond327) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond327) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond327) CFA_SP SP+-2
          CFI (cfiCond327) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond328 Using cfiCommon0
          CFI (cfiCond328) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond328) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond328) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond328) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond328) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond328) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond328) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond328) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond328) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond328) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond328) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond328) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond328) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond328) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond328) CFA_SP SP+-2
          CFI (cfiCond328) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond329 Using cfiCommon0
          CFI (cfiCond329) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond329) Conditional ??CrossCallReturnLabel_319
          CFI (cfiCond329) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond329) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond329) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond329) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond329) CFA_SP SP+-2
          CFI (cfiCond329) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond330 Using cfiCommon0
          CFI (cfiCond330) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond330) Conditional ??CrossCallReturnLabel_320
          CFI (cfiCond330) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond330) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond330) CFA_SP SP+-7
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function ZDO_UpdateNwkStatus
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_321
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+-2
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond332) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond332) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond332) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond332) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond332) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond332) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond332) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond332) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond332) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond332) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+-2
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function ZDO_UpdateNwkStatus
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+-2
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond334 Using cfiCommon0
          CFI (cfiCond334) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond334) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond334) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond334) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond334) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond334) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond334) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond334) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond334) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond334) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond334) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond334) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond334) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond334) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond334) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond334) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond334) CFA_SP SP+-2
          CFI (cfiCond334) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker335 Using cfiCommon1
          CFI (cfiPicker335) NoFunction
          CFI (cfiPicker335) Picker
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_326:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond325
          CFI EndBlock cfiCond326
          CFI EndBlock cfiCond327
          CFI EndBlock cfiCond328
          CFI EndBlock cfiCond329
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiCond334
          CFI EndBlock cfiPicker335
// 1772 
// 1773 /*********************************************************************
// 1774  * @fn          ZDO_ProcessMgmtDirectJoinReq
// 1775  *
// 1776  * @brief       This function finishes the processing of the Management
// 1777  *              Direct Join Request and generates the response.
// 1778  *
// 1779  * @param       inMsg - incoming message (request)
// 1780  *
// 1781  * @return      none
// 1782  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1783 void ZDO_ProcessMgmtDirectJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtDirectJoinReq:
          CFI Block cfiBlock336 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
        CODE
// 1784 {
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, NLME_DirectJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1785   uint8 *deviceAddr;
// 1786   uint8 capInfo;
// 1787   uint8 stat;
// 1788 
// 1789   // Parse the message
// 1790   deviceAddr = inMsg->asdu;
// 1791   capInfo = inMsg->asdu[Z_EXTADDR_LEN];
// 1792 
// 1793   stat = (byte) NLME_DirectJoinRequest( deviceAddr, capInfo );
        MOV     A,R6
        LCALL   ??Subroutine170_0 & 0xFFFF
??CrossCallReturnLabel_279:
        ADDC    A,R7
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_127:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??NLME_DirectJoinRequest?relay; Banked call to: NLME_DirectJoinRequest
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1794 
// 1795   ZDP_MgmtDirectJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0,#0x35
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_328:
        LCALL   ??ZDP_SendData?relay ; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1796 }
        LJMP    ?Subroutine9 & 0xFFFF
          CFI EndBlock cfiBlock336

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond337 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_328
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-2
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker339 Using cfiCommon1
          CFI (cfiPicker339) NoFunction
          CFI (cfiPicker339) Picker
        MOV     R1,#0x1
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiPicker339
        REQUIRE ??Subroutine177_0
        ; // Fall through to label ??Subroutine177_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine177_0:
          CFI Block cfiCond340 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_327
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_328
          CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond341) CFA_SP SP+-2
          CFI (cfiCond341) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+-2
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker343 Using cfiCommon1
          CFI (cfiPicker343) NoFunction
          CFI (cfiPicker343) Picker
        LCALL   ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_331:
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiPicker343

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine141:
          CFI Block cfiCond344 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_330
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond345 Using cfiCommon0
          CFI (cfiCond345) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond345) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_328
          CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond345) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond345) CFA_SP SP+-4
          CFI (cfiCond345) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond346 Using cfiCommon0
          CFI (cfiCond346) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond346) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_329
          CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond346) CFA_SP SP+-4
          CFI (cfiCond346) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond347 Using cfiCommon0
          CFI (cfiCond347) Function ZDO_ProcessUserDescSet
          CFI (cfiCond347) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_327
          CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond347) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond347) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond347) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond347) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond347) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond347) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond347) CFA_SP SP+-4
          CFI (cfiCond347) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiPicker348 Using cfiCommon1
          CFI (cfiPicker348) NoFunction
          CFI (cfiPicker348) Picker
        MOV     A,R6
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,R7
        MOV     R5,A
        MOV     A,R6
        ADD     A,#0xf
        RET
          CFI EndBlock cfiCond344
          CFI EndBlock cfiCond345
          CFI EndBlock cfiCond346
          CFI EndBlock cfiCond347
          CFI EndBlock cfiPicker348
// 1797 
// 1798 /*********************************************************************
// 1799  * @fn          ZDO_ProcessMgmtLeaveReq
// 1800  *
// 1801  * @brief       This function processes a Management Leave Request
// 1802  *              and generates the response.
// 1803  *
// 1804  * @param       inMsg - incoming message (request)
// 1805  *
// 1806  * @return      none
// 1807  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1808 void ZDO_ProcessMgmtLeaveReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLeaveReq:
          CFI Block cfiBlock349 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
        CODE
// 1809 {
        FUNCALL ZDO_ProcessMgmtLeaveReq, AddrMgrExtAddrValid
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_LeaveReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_SetPollRate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ?Subroutine92 & 0xFFFF
// 1810   NLME_LeaveReq_t req;
// 1811   ZStatus_t       status;
// 1812   uint8           option;
// 1813   uint8 *msg = inMsg->asdu;
??CrossCallReturnLabel_302:
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_251:
        MOV     R7,A
// 1814 
// 1815   if ( ( AddrMgrExtAddrValid( msg ) == FALSE                 ) ||
// 1816        ( osal_ExtAddrEqual( msg, NLME_GetExtAddr() ) == TRUE )    )
        ; Setup parameters for call to function AddrMgrExtAddrValid
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??AddrMgrExtAddrValid?relay; Banked call to: AddrMgrExtAddrValid
        MOV     A,R1
        JZ      ??ZDO_ProcessMgmtLeaveReq_0
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   ??NLME_GetExtAddr?relay; Banked call to: NLME_GetExtAddr
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R4,?V2
        MOV     R5,?V3
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??sAddrExtCmp?relay  ; Banked call to: sAddrExtCmp
        MOV     A,R1
        XRL     A,#0x1
        JNZ     ??ZDO_ProcessMgmtLeaveReq_1
// 1817   {
// 1818     // Remove this device
// 1819     req.extAddr = NULL;
??ZDO_ProcessMgmtLeaveReq_0:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        SJMP    ??ZDO_ProcessMgmtLeaveReq_2
// 1820   }
// 1821   else
// 1822   {
// 1823     // Remove child device
// 1824     req.extAddr = msg;
??ZDO_ProcessMgmtLeaveReq_1:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
// 1825   }
??ZDO_ProcessMgmtLeaveReq_2:
        LCALL   ?Subroutine46 & 0xFFFF
// 1826 
// 1827   option = msg[Z_EXTADDR_LEN];
??CrossCallReturnLabel_74:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
// 1828   if ( option & ZDP_MGMT_LEAVE_REQ_RC )
        MOV     C,0xE0 /* A   */.6
        JNC     ??ZDO_ProcessMgmtLeaveReq_3
// 1829   {
// 1830     req.removeChildren = TRUE;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1831   }
// 1832 
// 1833   if ( option & ZDP_MGMT_LEAVE_REQ_REJOIN )
??ZDO_ProcessMgmtLeaveReq_3:
        MOV     A,R0
        MOV     C,0xE0 /* A   */.7
        JNC     ??ZDO_ProcessMgmtLeaveReq_4
// 1834   {
// 1835      req.rejoin = TRUE;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1836   }
// 1837 
// 1838   req.silent = FALSE;
??ZDO_ProcessMgmtLeaveReq_4:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1839 
// 1840   status = NLME_LeaveReq( &req );
        ; Setup parameters for call to function NLME_LeaveReq
        INC     A
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??NLME_LeaveReq?relay; Banked call to: NLME_LeaveReq
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1841 
// 1842   if ( ZG_BUILD_ENDDEVICE_TYPE )
// 1843   {
// 1844     // Stop polling and get ready to reset
// 1845     NLME_SetPollRate( 0 );
        ; Setup parameters for call to function NLME_SetPollRate
        MOV     R2,#0x0
        MOV     R3,#0x0
        LCALL   ??NLME_SetPollRate?relay; Banked call to: NLME_SetPollRate
// 1846   }
// 1847 
// 1848   ZDP_MgmtLeaveRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, FALSE );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V2,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V2,#0x34
        MOV     ?V3,#-0x80
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_162:
        LCALL   ??ZDP_SendData?relay ; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1849 }
        MOV     A,#0x6
        LJMP    ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock349

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond350 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_161
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_162
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+-2
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker352 Using cfiCommon1
          CFI (cfiPicker352) NoFunction
          CFI (cfiPicker352) Picker
        MOV     R1,#0x1
        MOV     A,?V0
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,?V1
        MOV     R5,A
        MOV     A,?V0
        ADD     A,#0xf
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        RET
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiPicker352

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond353 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_76
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond354) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond354) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond354) CFA_SP SP+-2
          CFI (cfiCond354) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+-2
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker356 Using cfiCommon1
          CFI (cfiPicker356) NoFunction
          CFI (cfiPicker356) Picker
        LCALL   ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_368:
        INC     DPTR
        RET
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiPicker356
// 1850 
// 1851 
// 1852 /*********************************************************************
// 1853  * @fn          ZDO_ProcessMgmtPermitJoinReq
// 1854  *
// 1855  * @brief       This function processes a Management Permit Join Request
// 1856  *              and generates the response.
// 1857  *
// 1858  * @param       inMsg - incoming message (request)
// 1859  *
// 1860  * @return      none
// 1861  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1862 void ZDO_ProcessMgmtPermitJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtPermitJoinReq:
          CFI Block cfiBlock357 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
        CODE
// 1863 {
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, NLME_PermitJoiningRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1864   uint8 stat;
// 1865   uint8 duration;
// 1866   uint8 tcsig;
// 1867 
// 1868   duration = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_DURATION];
// 1869   tcsig    = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_TC_SIG];
// 1870 
// 1871   // Set the network layer permit join duration
// 1872   stat = (byte) NLME_PermitJoiningRequest( duration );
        ; Setup parameters for call to function NLME_PermitJoiningRequest
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_151:
        LCALL   ??Subroutine176_0 & 0xFFFF
??CrossCallReturnLabel_319:
        MOV     R1,A
        LCALL   ??NLME_PermitJoiningRequest?relay; Banked call to: NLME_PermitJoiningRequest
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1873 
// 1874   // Handle the Trust Center Significance
// 1875   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 1876   {
// 1877     if ( tcsig == TRUE )
// 1878     {
// 1879       ZDSecMgrPermitJoining( duration );
// 1880     }
// 1881   }
// 1882 
// 1883   // Send a response if unicast
// 1884   if ( !inMsg->wasBroadcast )
        MOV     A,R6
        ADD     A,#0xb
        LCALL   ??Subroutine189_0 & 0xFFFF
??CrossCallReturnLabel_391:
        JNZ     ??ZDO_ProcessMgmtPermitJoinReq_0
// 1885   {
// 1886     ZDP_MgmtPermitJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0,#0x36
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ?Subroutine95 & 0xFFFF
// 1887   }
??CrossCallReturnLabel_329:
        LCALL   ??ZDP_SendData?relay ; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1888 }
??ZDO_ProcessMgmtPermitJoinReq_0:
        LJMP    ?Subroutine9 & 0xFFFF
          CFI EndBlock cfiBlock357
// 1889 
// 1890 /*
// 1891  * This function stub allows the next higher layer to be notified of
// 1892  * a permit joining timeout.
// 1893  */
// 1894 /*********************************************************************
// 1895  * @fn          ZDO_ProcessMgmtPermitJoinTimeout
// 1896  *
// 1897  * @brief       This function stub allows the next higher layer to be
// 1898  *              notified of a permit joining timeout. Currently, this
// 1899  *              directly bypasses the APS layer.
// 1900  *
// 1901  * @param       none
// 1902  *
// 1903  * @return      none
// 1904  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1905 void ZDO_ProcessMgmtPermitJoinTimeout( void )
NLME_PermitJoiningTimeout:
          CFI Block cfiBlock358 Using cfiCommon0
          CFI Function NLME_PermitJoiningTimeout
        CODE
// 1906 {
        ; Saved register size: 0
        ; Auto size: 0
// 1907   #if defined( ZDO_MGMT_PERMIT_JOIN_RESPONSE )
// 1908   // Currently, only the ZDSecMgr needs to be notified
// 1909   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 1910   {
// 1911     ZDSecMgrPermitJoiningTimeout();
// 1912   }
// 1913   #endif
// 1914 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock358
// 1915 
// 1916 /*********************************************************************
// 1917  * @fn          ZDO_ProcessUserDescReq
// 1918  *
// 1919  * @brief       This function finishes the processing of the User
// 1920  *              Descriptor Request and generates the response.
// 1921  *
// 1922  * @param       inMsg - incoming message (request)
// 1923  *
// 1924  * @return      none
// 1925  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1926 void ZDO_ProcessUserDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescReq:
          CFI Block cfiBlock359 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescReq
        CODE
// 1927 {
        FUNCALL ZDO_ProcessUserDescReq, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_UserDescRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 17
        MOV     A,#-0x11
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1928   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_101:
        MOV     ?V0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V1,A
// 1929   UserDescriptorFormat_t userDesc;
// 1930 
// 1931   if ( (aoi == ZDAppNwkAddr.addr.shortAddr) && (ZSUCCESS == osal_nv_read(
// 1932              ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc )) )
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,?V0
        JNZ     ??ZDO_ProcessUserDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V1
??ZDO_ProcessUserDescReq_0:
        JNZ     ??ZDO_ProcessUserDescReq_1
        ; Setup parameters for call to function osal_nv_read
        MOV     R0,?XSP + 0
        MOV     R1,?XSP + 1
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V2,#0x11
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x7f
        MOV     R3,#0x0
        LCALL   ??osal_nv_read?relay ; Banked call to: osal_nv_read
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     ??ZDO_ProcessUserDescReq_1
// 1933   {
// 1934     ZDP_UserDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), aoi, &userDesc, false );
        ; Setup parameters for call to function ZDP_UserDescRsp
        MOV     ?V2,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R4,?V0
        MOV     R5,?V1
        LCALL   ?Subroutine94 & 0xFFFF
// 1935   }
??CrossCallReturnLabel_155:
        LCALL   ??ZDP_UserDescRsp?relay; Banked call to: ZDP_UserDescRsp
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        SJMP    ??ZDO_ProcessUserDescReq_2
// 1936   else
// 1937   {
// 1938     ZDP_GenericRsp(inMsg->TransSeq, &(inMsg->srcAddr),
// 1939            ZDP_NOT_SUPPORTED, aoi, User_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessUserDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V2,#0x11
        MOV     ?V3,#-0x80
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        LCALL   ?Subroutine98 & 0xFFFF
// 1940   }
??CrossCallReturnLabel_395:
        MOV     R5,A
        MOV     R4,#-0x7c
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_156:
        LCALL   ??ZDP_GenericRsp?relay; Banked call to: ZDP_GenericRsp
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
// 1941 }
??ZDO_ProcessUserDescReq_2:
        MOV     A,#0x11
        LJMP    ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock359

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond360 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_154
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function ZDO_ProcessUserDescReq
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+-2
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function ZDO_ProcessUserDescReq
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_156
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+-2
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker363 Using cfiCommon1
          CFI (cfiPicker363) NoFunction
          CFI (cfiPicker363) Picker
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_224:
        RET
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiPicker363

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine136:
          CFI Block cfiCond364 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_99
          CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond365) CFA_SP SP+-4
          CFI (cfiCond365) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_154
          CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond366) CFA_SP SP+-4
          CFI (cfiCond366) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function ZDO_ProcessUserDescReq
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_155
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+-4
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function ZDO_ProcessUserDescReq
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_156
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+-4
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker369 Using cfiCommon1
          CFI (cfiPicker369) NoFunction
          CFI (cfiPicker369) Picker
        MOV     A,R6
        ADD     A,#0x2
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        MOV     A,R6
        LCALL   ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_243:
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiPicker369

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond370 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_100
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function ZDO_ProcessUserDescReq
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_101
          CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond371) CFA_SP SP+-2
          CFI (cfiCond371) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker372 Using cfiCommon1
          CFI (cfiPicker372) NoFunction
          CFI (cfiPicker372) Picker
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_214:
        RET
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiPicker372

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine129:
          CFI Block cfiCond373 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_95
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+-4
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_100
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+-4
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond376 Using cfiCommon0
          CFI (cfiCond376) Function ZDO_ProcessUserDescReq
          CFI (cfiCond376) Conditional ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_101
          CFI (cfiCond376) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond376) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond376) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond376) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond376) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond376) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond376) CFA_SP SP+-4
          CFI (cfiCond376) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker377 Using cfiCommon1
          CFI (cfiPicker377) NoFunction
          CFI (cfiPicker377) Picker
        LCALL   ?Subroutine156 & 0xFFFF
??CrossCallReturnLabel_245:
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_354:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_478:
        RET
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiCond376
          CFI EndBlock cfiPicker377

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine156:
          CFI Block cfiCond378 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_149
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_150
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+-6
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_52
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+-6
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond381 Using cfiCommon0
          CFI (cfiCond381) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond381) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_53
          CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond381) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond381) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond381) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond381) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond381) CFA_SP SP+-6
          CFI (cfiCond381) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond382 Using cfiCommon0
          CFI (cfiCond382) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond382) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_94
          CFI (cfiCond382) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond382) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond382) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond382) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond382) CFA_SP SP+-6
          CFI (cfiCond382) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_95
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+-6
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_100
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+-6
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function ZDO_ProcessUserDescReq
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_101
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+-6
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker386 Using cfiCommon1
          CFI (cfiPicker386) NoFunction
          CFI (cfiPicker386) Picker
        MOV     A,R6
        ADD     A,#0x13
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiCond381
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiPicker386
// 1942 
// 1943 /*********************************************************************
// 1944  * @fn          ZDO_ProcessUserDescSet
// 1945  *
// 1946  * @brief       This function finishes the processing of the User
// 1947  *              Descriptor Set and generates the response.
// 1948  *
// 1949  * @param       inMsg - incoming message (request)
// 1950  *
// 1951  * @return      none
// 1952  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1953 void ZDO_ProcessUserDescSet( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescSet:
          CFI Block cfiBlock387 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
        CODE
// 1954 {
        FUNCALL ZDO_ProcessUserDescSet, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 21
        MOV     A,#-0x15
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine74 & 0xFFFF
// 1955   uint8 *msg;
// 1956   uint16 aoi;
// 1957   UserDescriptorFormat_t userDesc;
// 1958   uint8 outMsg[3];
// 1959   uint8 status;
// 1960 
// 1961   msg = inMsg->asdu;
// 1962   aoi = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_121:
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        CLR     A
        XCH     A,R2
        MOV     R3,A
        MOV     A,R4
        ADD     A,R2
        MOV     ?V0,A
        CLR     A
        ADDC    A,R3
        MOV     ?V1,A
// 1963 
// 1964   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,?V0
        JNZ     ??ZDO_ProcessUserDescSet_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V1
??ZDO_ProcessUserDescSet_0:
        JZ      $+5
        LJMP    ??ZDO_ProcessUserDescSet_1 & 0xFFFF
// 1965   {
// 1966     userDesc.len = (msg[2] < AF_MAX_USER_DESCRIPTOR_LEN) ? msg[2] : AF_MAX_USER_DESCRIPTOR_LEN;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x10
        JNC     ??ZDO_ProcessUserDescSet_2
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        SJMP    ??ZDO_ProcessUserDescSet_3
??ZDO_ProcessUserDescSet_2:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x10
??ZDO_ProcessUserDescSet_3:
        MOVX    @DPTR,A
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine47 & 0xFFFF
// 1967     msg ++;  // increment one for the length field
// 1968 
// 1969     osal_memcpy( userDesc.desc, &msg[2], userDesc.len );
??CrossCallReturnLabel_77:
        INC     DPTR
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V4,R1
        MOV     ?V5,R2
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1970     osal_nv_write( ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc );
        ; Setup parameters for call to function osal_nv_write
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V2,R0
        MOV     ?V3,R1
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     ?V2,#0x11
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x7f
        MOV     R3,#0x0
        LCALL   ??osal_nv_write?relay; Banked call to: osal_nv_write
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1971     if ( userDesc.len != 0 )
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     DPTR,#ZDO_Config_Node_Descriptor
        JZ      ??ZDO_ProcessUserDescSet_4
// 1972     {
// 1973       ZDO_Config_Node_Descriptor.UserDescAvail = TRUE;
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.4
        SJMP    ??ZDO_ProcessUserDescSet_5
// 1974     }
// 1975     else
// 1976     {
// 1977       ZDO_Config_Node_Descriptor.UserDescAvail = FALSE;
??ZDO_ProcessUserDescSet_4:
        MOVX    A,@DPTR
        CLR     0xE0 /* A   */.4
??ZDO_ProcessUserDescSet_5:
        MOVX    @DPTR,A
// 1978     }
// 1979 
// 1980     status = ZDP_SUCCESS;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        SJMP    ??ZDO_ProcessUserDescSet_6
// 1981   }
// 1982   else
// 1983   {
// 1984     status =  ZDP_NOT_SUPPORTED;
??ZDO_ProcessUserDescSet_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7c
??ZDO_ProcessUserDescSet_6:
        MOVX    @DPTR,A
// 1985   }
// 1986 
// 1987   outMsg[0] = status;
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1988   outMsg[1] = LO_UINT16( aoi );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0
        MOVX    @DPTR,A
// 1989   outMsg[2] = LO_UINT16( aoi );
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0
        MOVX    @DPTR,A
// 1990 
// 1991   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr), User_Desc_conf, 3, outMsg,
// 1992                inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_SendData
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_407:
        ADDC    A,R7
        LCALL   ??Subroutine179_0 & 0xFFFF
??CrossCallReturnLabel_336:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP100_8
        MOV     ?V0,R0
        MOV     ?V1,R1
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     ?V0,#0x14
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV     R1,#0x3
        LCALL   ??Subroutine177_0 & 0xFFFF
??CrossCallReturnLabel_327:
        LCALL   ??ZDP_SendData?relay ; Banked call to: ZDP_SendData
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1993 }
        MOV     A,#0x15
        LJMP    ?Subroutine10 & 0xFFFF
          CFI EndBlock cfiBlock387

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond388 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_120
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function ZDO_ProcessUserDescSet
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond389) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond389) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+-2
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker390 Using cfiCommon1
          CFI (cfiPicker390) NoFunction
          CFI (cfiPicker390) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        LCALL   ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_305:
        ADDC    A,R7
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_332:
        RET
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiPicker390

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine132:
          CFI Block cfiCond391 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_120
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond392 Using cfiCommon0
          CFI (cfiCond392) Function ZDO_ProcessUserDescSet
          CFI (cfiCond392) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_121
          CFI (cfiCond392) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond392) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond392) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond392) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond392) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond392) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond392) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond392) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond392) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond392) CFA_SP SP+-4
          CFI (cfiCond392) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond393 Using cfiCommon0
          CFI (cfiCond393) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond393) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_9
          CFI (cfiCond393) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond393) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond393) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond393) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond393) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond393) CFA_SP SP+-4
          CFI (cfiCond393) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond394 Using cfiCommon0
          CFI (cfiCond394) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond394) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_10
          CFI (cfiCond394) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond394) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond394) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond394) CFA_SP SP+-4
          CFI (cfiCond394) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker395 Using cfiCommon1
          CFI (cfiPicker395) NoFunction
          CFI (cfiPicker395) Picker
        MOV     DPH,A
        MOVX    A,@DPTR
          CFI EndBlock cfiCond391
          CFI EndBlock cfiCond392
          CFI EndBlock cfiCond393
          CFI EndBlock cfiCond394
          CFI EndBlock cfiPicker395
        REQUIRE ??Subroutine178_0
        ; // Fall through to label ??Subroutine178_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine178_0:
          CFI Block cfiCond396 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_334
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond397 Using cfiCommon0
          CFI (cfiCond397) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond397) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_120
          CFI (cfiCond397) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond397) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond397) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond397) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond397) CFA_SP SP+-4
          CFI (cfiCond397) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function ZDO_ProcessUserDescSet
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_121
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond398) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+-4
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_9
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+-4
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond400 Using cfiCommon0
          CFI (cfiCond400) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond400) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_10
          CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond400) CFA_SP SP+-4
          CFI (cfiCond400) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker401 Using cfiCommon1
          CFI (cfiPicker401) NoFunction
          CFI (cfiPicker401) Picker
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond396
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiCond400
          CFI EndBlock cfiPicker401

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond402 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_337
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond403) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond403) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond403) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond403) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond403) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond403) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond403) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond403) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond403) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond403) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond403) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond403) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond403) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond403) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond403) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond403) CFA_SP SP+-2
          CFI (cfiCond403) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond404 Using cfiCommon0
          CFI (cfiCond404) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond404) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond404) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond404) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond404) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond404) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond404) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond404) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond404) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond404) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond404) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond404) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond404) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond404) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond404) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond404) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond404) CFA_SP SP+-2
          CFI (cfiCond404) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker405 Using cfiCommon1
          CFI (cfiPicker405) NoFunction
          CFI (cfiPicker405) Picker
        MOV     A,?V14
        LCALL   ??Subroutine193_0 & 0xFFFF
??CrossCallReturnLabel_406:
        ADDC    A,?V15
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiCond404
          CFI EndBlock cfiPicker405
        REQUIRE ??Subroutine179_0
        ; // Fall through to label ??Subroutine179_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine179_0:
          CFI Block cfiCond406 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_336
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond407 Using cfiCommon0
          CFI (cfiCond407) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond407) Conditional ??CrossCallReturnLabel_337
          CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond407) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond407) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond407) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond407) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond407) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond407) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond407) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond407) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond407) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond407) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond407) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond407) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond407) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond407) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond407) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond407) CFA_SP SP+-2
          CFI (cfiCond407) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond408 Using cfiCommon0
          CFI (cfiCond408) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond408) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond408) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond408) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond408) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond408) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond408) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond408) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond408) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond408) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond408) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond408) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond408) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond408) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond408) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond408) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond408) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond408) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond408) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond408) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond408) CFA_SP SP+-2
          CFI (cfiCond408) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond409 Using cfiCommon0
          CFI (cfiCond409) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond409) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond409) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond409) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond409) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond409) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond409) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond409) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond409) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond409) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond409) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond409) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond409) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond409) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond409) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond409) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond409) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond409) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond409) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond409) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond409) CFA_SP SP+-2
          CFI (cfiCond409) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker410 Using cfiCommon1
          CFI (cfiPicker410) NoFunction
          CFI (cfiPicker410) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond406
          CFI EndBlock cfiCond407
          CFI EndBlock cfiCond408
          CFI EndBlock cfiCond409
          CFI EndBlock cfiPicker410
        REQUIRE ??Subroutine180_0
        ; // Fall through to label ??Subroutine180_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine180_0:
          CFI Block cfiCond411 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_335
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond412 Using cfiCommon0
          CFI (cfiCond412) Function ZDO_ProcessUserDescSet
          CFI (cfiCond412) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond412) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond412) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond412) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond412) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond412) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond412) CFA_SP SP+-2
          CFI (cfiCond412) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_337
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond413) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond413) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond413) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond413) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond413) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond413) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond413) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond413) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond413) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond413) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond413) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond413) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+-2
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond414) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond414) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond414) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond414) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond414) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond414) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond414) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond414) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond414) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond414) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond414) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond414) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond414) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond414) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond414) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond414) CFA_SP SP+-2
          CFI (cfiCond414) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond415 Using cfiCommon0
          CFI (cfiCond415) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond415) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond415) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond415) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond415) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond415) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond415) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond415) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond415) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond415) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond415) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond415) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond415) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond415) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond415) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond415) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond415) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond415) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond415) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond415) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond415) CFA_SP SP+-2
          CFI (cfiCond415) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker416 Using cfiCommon1
          CFI (cfiPicker416) NoFunction
          CFI (cfiPicker416) Picker
        MOVX    A,@DPTR
        MOV     ?V0,A
        MOV     R0,#?V0
        RET
          CFI EndBlock cfiCond411
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiCond415
          CFI EndBlock cfiPicker416
// 1994 
// 1995 /*********************************************************************
// 1996  * @fn          ZDO_ProcessDeviceAnnce
// 1997  *
// 1998  * @brief       This function processes a device annouce message.
// 1999  *
// 2000  * @param       inMsg - incoming message
// 2001  *
// 2002  * @return      none
// 2003  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2004 void ZDO_ProcessDeviceAnnce( zdoIncomingMsg_t *inMsg )
ZDO_ProcessDeviceAnnce:
          CFI Block cfiBlock417 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
        CODE
// 2005 {
        FUNCALL ZDO_ProcessDeviceAnnce, ZDO_ParseDeviceAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborRemoveAllStranded
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_CheckNewAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, ZMacSetReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborUpdateNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, RTG_RemoveRtgEntry
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 32
        MOV     A,#-0x20
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 42)
// 2006   ZDO_DeviceAnnce_t Annce;
// 2007   AddrMgrEntry_t addrEntry;
// 2008   uint8 parentExt[Z_EXTADDR_LEN];
// 2009 
// 2010   // Parse incoming message
// 2011   ZDO_ParseDeviceAnnce( inMsg, &Annce );
        ; Setup parameters for call to function ZDO_ParseDeviceAnnce
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        LCALL   ??ZDO_ParseDeviceAnnce?relay; Banked call to: ZDO_ParseDeviceAnnce
// 2012 
// 2013   if ( ZSTACK_END_DEVICE_BUILD )
// 2014   {
// 2015     // Make sure the message didn't come from myself - end device only
// 2016     if ( osal_ExtAddrEqual( NLME_GetExtAddr(), Annce.extAddr ) && Annce.nwkAddr == NLME_GetShortAddr() )
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   ??NLME_GetExtAddr?relay; Banked call to: NLME_GetExtAddr
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   ??sAddrExtCmp?relay  ; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_0
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay; Banked call to: NLME_GetShortAddr
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R0,?V0
        MOV     R1,?V1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_1
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_1:
        JNZ     $+5
        LJMP    ??ZDO_ProcessDeviceAnnce_2 & 0xFFFF
// 2017     {
// 2018       return;
// 2019     }
// 2020   }
// 2021 
// 2022 #if defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
// 2023   // Clean up the neighbor table
// 2024   nwkNeighborRemoveAllStranded();
??ZDO_ProcessDeviceAnnce_0:
        ; Setup parameters for call to function nwkNeighborRemoveAllStranded
        LCALL   ??nwkNeighborRemoveAllStranded?relay; Banked call to: nwkNeighborRemoveAllStranded
// 2025 
// 2026   // If address conflict is detected, no need to update the address manager
// 2027   if ( NLME_CheckNewAddrSet( Annce.nwkAddr, Annce.extAddr )== ZFailure )
        ; Setup parameters for call to function NLME_CheckNewAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_465:
        LCALL   ??NLME_CheckNewAddrSet?relay; Banked call to: NLME_CheckNewAddrSet
        MOV     A,R1
        XRL     A,#0x1
        JNZ     $+5
        LJMP    ??ZDO_ProcessDeviceAnnce_2 & 0xFFFF
// 2028   {
// 2029     return;
// 2030   }
// 2031 #endif
// 2032 
// 2033 #if defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
// 2034   // Check for parent's address
// 2035   NLME_GetCoordExtAddr( parentExt );
        ; Setup parameters for call to function NLME_GetCoordExtAddr
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??NLME_GetCoordExtAddr?relay; Banked call to: NLME_GetCoordExtAddr
// 2036   if ( osal_ExtAddrEqual( parentExt, Annce.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??sAddrExtCmp?relay  ; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_3
// 2037   {
// 2038     if ( Annce.nwkAddr != NLME_GetCoordShortAddr() )
        ; Setup parameters for call to function NLME_GetCoordShortAddr
        LCALL   ??NLME_GetCoordShortAddr?relay; Banked call to: NLME_GetCoordShortAddr
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R0,?V0
        MOV     R1,?V1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_4
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_4:
        JZ      ??ZDO_ProcessDeviceAnnce_3
// 2039     {
// 2040       // Set the Parent's MAC's new short address
// 2041       _NIB.nwkCoordAddress = Annce.nwkAddr;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_343:
        MOV     DPTR,#_NIB + 23
        LCALL   ??Subroutine162_0 & 0xFFFF
// 2042       ZMacSetReq( ZMacCoordShortAddress, (byte*)&(_NIB.nwkCoordAddress) );
??CrossCallReturnLabel_258:
        ; Setup parameters for call to function ZMacSetReq
        MOV     R2,#(_NIB + 23) & 0xff
        MOV     R3,#((_NIB + 23) >> 8) & 0xff
        MOV     R1,#0x4b
        LCALL   ??ZMacSetReq?relay   ; Banked call to: ZMacSetReq
// 2043     }
// 2044   }
// 2045 
// 2046   if ( ZSTACK_ROUTER_BUILD )
// 2047   {
// 2048     // If the device annce comes from a end device child that has moved
// 2049     // to another parent, remove it from associated device list
// 2050 
// 2051     // If the dev annce is coming from other device's children,
// 2052     // (The dev annce from its own children shall be unicast to itself,
// 2053     // So check the mac destination address)
// 2054     // Remove it from the associated device list. If it is not
// 2055     // a child, no action will be taken in AssocRemove() anyway.
// 2056     if ( inMsg->macDestAddr != NLME_GetShortAddr() )
// 2057     {
// 2058       associated_devices_t *dev_ptr;
// 2059 
// 2060       // If it's an end device child
// 2061       dev_ptr = AssocGetWithExt( Annce.extAddr );
// 2062       if ( dev_ptr )
// 2063       {
// 2064         if ( dev_ptr->nodeRelation == CHILD_RFD ||
// 2065              dev_ptr->nodeRelation == CHILD_RFD_RX_IDLE )
// 2066         {
// 2067           AssocRemove( Annce.extAddr );
// 2068         }
// 2069       }
// 2070 
// 2071 #if defined ( ZIGBEE_CHILD_AGING )
// 2072       // Remove the address from the SrcMatch table,
// 2073       // just in case the device was aged out by Child Management Table process
// 2074       if ( ( pNwkNotMyChildListDelete != NULL ) &&
// 2075            ( zgChildAgingEnable == TRUE ) )
// 2076       {
// 2077         pNwkNotMyChildListDelete( Annce.nwkAddr );
// 2078       }
// 2079 #endif // ZIGBEE_CHILD_AGING
// 2080     }
// 2081 
// 2082     if ( Annce.nwkAddr != NLME_GetShortAddr() )
// 2083     {
// 2084       // If an associated device is found with matched extended Address,
// 2085       // update its short address
// 2086       if ( AssocChangeNwkAddr( Annce.nwkAddr, Annce.extAddr ) )
// 2087       {
// 2088         // Set event to save NV
// 2089         ZDApp_NVUpdate();
// 2090       }
// 2091     }
// 2092   }
// 2093 
// 2094   // Update the neighbor table
// 2095   nwkNeighborUpdateNwkAddr( Annce.nwkAddr, Annce.extAddr );
??ZDO_ProcessDeviceAnnce_3:
        ; Setup parameters for call to function nwkNeighborUpdateNwkAddr
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_466:
        LCALL   ??nwkNeighborUpdateNwkAddr?relay; Banked call to: nwkNeighborUpdateNwkAddr
// 2096 
// 2097   // Assume that the device has moved, remove existing routing entries
// 2098   RTG_RemoveRtgEntry( Annce.nwkAddr, 0 );
        ; Setup parameters for call to function RTG_RemoveRtgEntry
        MOV     R1,#0x0
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_464:
        LCALL   ??RTG_RemoveRtgEntry?relay; Banked call to: RTG_RemoveRtgEntry
// 2099 
// 2100 #endif // ZIGBEE_STOCHASTIC_ADDRESSING
// 2101 
// 2102   // Fill in the extended address in address manager if we don't have it already.
// 2103   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        LCALL   ?Subroutine52 & 0xFFFF
// 2104   addrEntry.nwkAddr = Annce.nwkAddr;
??CrossCallReturnLabel_90:
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine162_0 & 0xFFFF
// 2105   if ( AddrMgrEntryLookupNwk( &addrEntry ) )
??CrossCallReturnLabel_259:
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??AddrMgrEntryLookupNwk?relay; Banked call to: AddrMgrEntryLookupNwk
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_5
// 2106   {
// 2107     osal_memset( parentExt, 0, Z_EXTADDR_LEN );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??osal_memset?relay  ; Banked call to: osal_memset
// 2108     if ( osal_ExtAddrEqual( parentExt, addrEntry.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??sAddrExtCmp?relay  ; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_5
// 2109     {
// 2110       AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrExtAddrSet?relay; Banked call to: AddrMgrExtAddrSet
// 2111       AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??AddrMgrEntryUpdate?relay; Banked call to: AddrMgrEntryUpdate
// 2112     }
// 2113   }
// 2114 
// 2115   // Update the short address in address manager if it's been changed
// 2116   AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
??ZDO_ProcessDeviceAnnce_5:
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrExtAddrSet?relay; Banked call to: AddrMgrExtAddrSet
// 2117   if ( AddrMgrEntryLookupExt( &addrEntry ) )
        ; Setup parameters for call to function AddrMgrEntryLookupExt
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??AddrMgrEntryLookupExt?relay; Banked call to: AddrMgrEntryLookupExt
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_2
// 2118   {
// 2119     if ( addrEntry.nwkAddr != Annce.nwkAddr )
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_344:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_6
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_6:
        JZ      ??ZDO_ProcessDeviceAnnce_2
// 2120     {
// 2121       addrEntry.nwkAddr = Annce.nwkAddr;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_345:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine162_0 & 0xFFFF
// 2122       AddrMgrEntryUpdate( &addrEntry );
??CrossCallReturnLabel_260:
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP101_8
        LCALL   ??AddrMgrEntryUpdate?relay; Banked call to: AddrMgrEntryUpdate
// 2123     }
// 2124   }
// 2125 }
??ZDO_ProcessDeviceAnnce_2:
        MOV     A,#0x20
        LJMP    ??Subroutine160_0 & 0xFFFF
          CFI EndBlock cfiBlock417

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond418 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_91
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond419) CFA_SP SP+-2
          CFI (cfiCond419) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker420 Using cfiCommon1
          CFI (cfiPicker420) NoFunction
          CFI (cfiPicker420) Picker
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiPicker420
// 2126 
// 2127 /*********************************************************************
// 2128  * @fn          ZDO_BuildSimpleDescBuf
// 2129  *
// 2130  * @brief       Build a byte sequence representation of a Simple Descriptor.
// 2131  *
// 2132  * @param       buf  - pointer to a byte array big enough for data.
// 2133  * @param       desc - SimpleDescriptionFormat_t *
// 2134  *
// 2135  * @return      none
// 2136  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2137 void ZDO_BuildSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_BuildSimpleDescBuf:
          CFI Block cfiBlock421 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
        CODE
// 2138 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2139   byte cnt;
// 2140   uint16 *ptr;
// 2141 
// 2142   *buf++ = desc->EndPoint;
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine35 & 0xFFFF
// 2143   *buf++ = HI_UINT16( desc->AppProfId );
??CrossCallReturnLabel_50:
        MOV     R0,DPL
        MOV     R1,DPH
        LCALL   ?Subroutine25 & 0xFFFF
// 2144   *buf++ = LO_UINT16( desc->AppProfId );
// 2145   *buf++ = HI_UINT16( desc->AppDeviceId );
??CrossCallReturnLabel_35:
        MOV     A,R4
        ADD     A,#0x3
        MOV     R0,A
        CLR     A
        ADDC    A,R5
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine25 & 0xFFFF
// 2146   *buf++ = LO_UINT16( desc->AppDeviceId );
// 2147 
// 2148   *buf++ = (byte)(desc->AppDevVer << 4);
??CrossCallReturnLabel_36:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf0
        LCALL   ?Subroutine30 & 0xFFFF
// 2149 
// 2150   *buf++ = desc->AppNumInClusters;
??CrossCallReturnLabel_39:
        MOVX    A,@DPTR
        LCALL   ?Subroutine30 & 0xFFFF
// 2151   ptr = desc->pAppInClusterList;
??CrossCallReturnLabel_40:
        INC     DPTR
        LCALL   ??Subroutine181_0 & 0xFFFF
// 2152   for ( cnt = 0; cnt < desc->AppNumInClusters; ptr++, cnt++ )
??CrossCallReturnLabel_346:
        MOV     R6,#0x0
        SJMP    ??ZDO_BuildSimpleDescBuf_0
// 2153   {
// 2154     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_1:
        LCALL   ?Subroutine19 & 0xFFFF
// 2155     *buf++ = LO_UINT16( *ptr );
// 2156   }
??CrossCallReturnLabel_21:
        JNC     ??ZDO_BuildSimpleDescBuf_2
        INC     R1
??ZDO_BuildSimpleDescBuf_2:
        INC     R6
??ZDO_BuildSimpleDescBuf_0:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,R6
        CLR     C
        SUBB    A,R7
        JC      ??ZDO_BuildSimpleDescBuf_1
// 2157 
// 2158   *buf++ = desc->AppNumOutClusters;
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine35 & 0xFFFF
// 2159   ptr = desc->pAppOutClusterList;
??CrossCallReturnLabel_51:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine181_0 & 0xFFFF
// 2160   for ( cnt = 0; cnt < desc->AppNumOutClusters; ptr++, cnt++ )
??CrossCallReturnLabel_347:
        MOV     R6,#0x0
        SJMP    ??ZDO_BuildSimpleDescBuf_3
// 2161   {
// 2162     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_4:
        LCALL   ?Subroutine19 & 0xFFFF
// 2163     *buf++ = LO_UINT16( *ptr );
// 2164   }
??CrossCallReturnLabel_22:
        JNC     ??ZDO_BuildSimpleDescBuf_5
        INC     R1
??ZDO_BuildSimpleDescBuf_5:
        INC     R6
??ZDO_BuildSimpleDescBuf_3:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,R6
        CLR     C
        SUBB    A,R7
        JC      ??ZDO_BuildSimpleDescBuf_4
// 2165 }
        LJMP    ??Subroutine161_0 & 0xFFFF
          CFI EndBlock cfiBlock421

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond422 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_350
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_351
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond423) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond423) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond423) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond423) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+-2
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker424 Using cfiCommon1
          CFI (cfiPicker424) NoFunction
          CFI (cfiPicker424) Picker
        MOV     DPL,?V2
        MOV     DPH,?V3
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiPicker424
        REQUIRE ??Subroutine181_0
        ; // Fall through to label ??Subroutine181_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine181_0:
          CFI Block cfiCond425 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_340
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_341
          CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond426) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond426) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond426) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond426) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond426) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond426) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond426) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond426) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond426) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond426) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond426) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond426) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond426) CFA_SP SP+-2
          CFI (cfiCond426) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_342
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+-2
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+-2
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond429 Using cfiCommon0
          CFI (cfiCond429) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond429) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond429) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond429) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond429) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond429) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond429) CFA_SP SP+-2
          CFI (cfiCond429) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond430 Using cfiCommon0
          CFI (cfiCond430) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond430) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond430) CFA_SP SP+-2
          CFI (cfiCond430) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-2
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+-2
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond433 Using cfiCommon0
          CFI (cfiCond433) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond433) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond433) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond433) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond433) CFA_SP SP+-2
          CFI (cfiCond433) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function ZDO_ParseUserDescRsp
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond434) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond434) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+-2
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond435) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond435) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond435) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond435) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond435) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond435) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond435) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+-2
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond436 Using cfiCommon0
          CFI (cfiCond436) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond436) Conditional ??CrossCallReturnLabel_351
          CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond436) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond436) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond436) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond436) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond436) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond436) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond436) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond436) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond436) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond436) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond436) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond436) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond436) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond436) CFA_SP SP+-2
          CFI (cfiCond436) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker437 Using cfiCommon1
          CFI (cfiPicker437) NoFunction
          CFI (cfiPicker437) Picker
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_356:
        RET
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiCond429
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiCond436
          CFI EndBlock cfiPicker437

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond438 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond439 Using cfiCommon0
          CFI (cfiCond439) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond439) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond439) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond439) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond439) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond439) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond439) CFA_SP SP+-2
          CFI (cfiCond439) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker440 Using cfiCommon1
          CFI (cfiPicker440) NoFunction
          CFI (cfiPicker440) Picker
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_222:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        RET
          CFI EndBlock cfiCond438
          CFI EndBlock cfiCond439
          CFI EndBlock cfiPicker440

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond441 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_39
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond442 Using cfiCommon0
          CFI (cfiCond442) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond442) Conditional ??CrossCallReturnLabel_40
          CFI (cfiCond442) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond442) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond442) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond442) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond442) CFA_SP SP+-2
          CFI (cfiCond442) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker443 Using cfiCommon1
          CFI (cfiPicker443) NoFunction
          CFI (cfiPicker443) Picker
        LCALL   ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_357:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond441
          CFI EndBlock cfiCond442
          CFI EndBlock cfiPicker443

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond444 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_35
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond445 Using cfiCommon0
          CFI (cfiCond445) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond445) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond445) CFA_SP SP+-2
          CFI (cfiCond445) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker446 Using cfiCommon1
          CFI (cfiPicker446) NoFunction
          CFI (cfiPicker446) Picker
        INC     DPTR
        LCALL   ??Subroutine182_0 & 0xFFFF
??CrossCallReturnLabel_358:
        LCALL   ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_360:
        RET
          CFI EndBlock cfiCond444
          CFI EndBlock cfiCond445
          CFI EndBlock cfiPicker446

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine124:
          CFI Block cfiCond447 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_35
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_36
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+-4
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond449 Using cfiCommon0
          CFI (cfiCond449) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond449) Conditional ??CrossCallReturnLabel_359, ??CrossCallReturnLabel_21
          CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond449) CFA_SP SP+-4
          CFI (cfiCond449) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_359, ??CrossCallReturnLabel_22
          CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond450) CFA_SP SP+-4
          CFI (cfiCond450) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker451 Using cfiCommon1
          CFI (cfiPicker451) NoFunction
          CFI (cfiPicker451) Picker
        MOV     DPL,R0
        MOV     DPH,R1
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiPicker451
        REQUIRE ??Subroutine182_0
        ; // Fall through to label ??Subroutine182_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine182_0:
          CFI Block cfiCond452 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_358, ??CrossCallReturnLabel_35
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_358, ??CrossCallReturnLabel_36
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+-4
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_35
          CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond454) CFA_SP SP+-4
          CFI (cfiCond454) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_36
          CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond455) CFA_SP SP+-4
          CFI (cfiCond455) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_359, ??CrossCallReturnLabel_21
          CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond456) CFA_SP SP+-4
          CFI (cfiCond456) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond457 Using cfiCommon0
          CFI (cfiCond457) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond457) Conditional ??CrossCallReturnLabel_359, ??CrossCallReturnLabel_22
          CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond457) CFA_SP SP+-4
          CFI (cfiCond457) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker458 Using cfiCommon1
          CFI (cfiPicker458) NoFunction
          CFI (cfiPicker458) Picker
        MOVX    A,@DPTR
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiCond457
          CFI EndBlock cfiPicker458
        REQUIRE ??Subroutine183_0
        ; // Fall through to label ??Subroutine183_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine183_0:
          CFI Block cfiCond459 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_357, ??CrossCallReturnLabel_39
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_357, ??CrossCallReturnLabel_40
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+-4
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond461 Using cfiCommon0
          CFI (cfiCond461) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond461) Conditional ??CrossCallReturnLabel_358, ??CrossCallReturnLabel_35
          CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond461) CFA_SP SP+-4
          CFI (cfiCond461) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_358, ??CrossCallReturnLabel_36
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+-4
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_35
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+-4
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond464 Using cfiCommon0
          CFI (cfiCond464) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond464) Conditional ??CrossCallReturnLabel_360, ??CrossCallReturnLabel_36
          CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond464) CFA_SP SP+-4
          CFI (cfiCond464) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_359, ??CrossCallReturnLabel_21
          CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond465) CFA_SP SP+-4
          CFI (cfiCond465) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_359, ??CrossCallReturnLabel_22
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+-4
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker467 Using cfiCommon1
          CFI (cfiPicker467) NoFunction
          CFI (cfiPicker467) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        INC     DPTR
        INC     R2
        MOV     R3,DPH
        RET
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiPicker467

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond468 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_21
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_22
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+-2
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker470 Using cfiCommon1
          CFI (cfiPicker470) NoFunction
          CFI (cfiPicker470) Picker
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_221:
        LCALL   ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_359:
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        RET
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiPicker470

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine133:
          CFI Block cfiCond471 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_51
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+-4
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_21
          CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond473) CFA_SP SP+-4
          CFI (cfiCond473) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond474 Using cfiCommon0
          CFI (cfiCond474) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond474) Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_22
          CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond474) CFA_SP SP+-4
          CFI (cfiCond474) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker475 Using cfiCommon1
          CFI (cfiPicker475) NoFunction
          CFI (cfiPicker475) Picker
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        RET
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiCond474
          CFI EndBlock cfiPicker475
// 2166 
// 2167 #if ( ZG_BUILD_COORDINATOR_TYPE )
// 2168 /*********************************************************************
// 2169  * @fn      ZDO_MatchEndDeviceBind()
// 2170  *
// 2171  * @brief
// 2172  *
// 2173  *   Called to match end device binding requests
// 2174  *
// 2175  * @param  bindReq  - binding request information
// 2176  * @param  SecurityUse - Security enable/disable
// 2177  *
// 2178  * @return  none
// 2179  */
// 2180 void ZDO_MatchEndDeviceBind( ZDEndDeviceBind_t *bindReq )
// 2181 {
// 2182   zAddrType_t dstAddr;
// 2183   uint8 sendRsp = FALSE;
// 2184   uint8 status;
// 2185 
// 2186   // Is this the first request?
// 2187   if ( matchED == NULL )
// 2188   {
// 2189     // Create match info structure
// 2190     matchED = (ZDMatchEndDeviceBind_t *)osal_mem_alloc( sizeof ( ZDMatchEndDeviceBind_t ) );
// 2191     if ( matchED )
// 2192     {
// 2193       // Clear the structure
// 2194       osal_memset( (uint8 *)matchED, 0, sizeof ( ZDMatchEndDeviceBind_t ) );
// 2195 
// 2196       // Copy the first request's information
// 2197       if ( !ZDO_CopyMatchInfo( &(matchED->ed1), bindReq ) )
// 2198       {
// 2199         status = ZDP_NO_ENTRY;
// 2200         sendRsp = TRUE;
// 2201       }
// 2202     }
// 2203     else
// 2204     {
// 2205       status = ZDP_NO_ENTRY;
// 2206       sendRsp = TRUE;
// 2207     }
// 2208 
// 2209     if ( !sendRsp )
// 2210     {
// 2211       // Set into the correct state
// 2212       matchED->state = ZDMATCH_WAIT_REQ;
// 2213 
// 2214       // Setup the timeout
// 2215       APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
// 2216     }
// 2217   }
// 2218   else
// 2219   {
// 2220       matchED->state = ZDMATCH_SENDING_BINDS;
// 2221 
// 2222       // Copy the 2nd request's information
// 2223       if ( !ZDO_CopyMatchInfo( &(matchED->ed2), bindReq ) )
// 2224       {
// 2225         status = ZDP_NO_ENTRY;
// 2226         sendRsp = TRUE;
// 2227       }
// 2228 
// 2229       // Make a source match for ed1
// 2230       matchED->ed1numMatched = ZDO_CompareClusterLists(
// 2231                   matchED->ed1.numOutClusters, matchED->ed1.outClusters,
// 2232                   matchED->ed2.numInClusters, matchED->ed2.inClusters, ZDOBuildBuf );
// 2233       if ( matchED->ed1numMatched )
// 2234       {
// 2235         // Save the match list
// 2236         matchED->ed1Matched = osal_mem_alloc( (short)(matchED->ed1numMatched * sizeof ( uint16 )) );
// 2237         if ( matchED->ed1Matched )
// 2238         {
// 2239           osal_memcpy( matchED->ed1Matched, ZDOBuildBuf, (matchED->ed1numMatched * sizeof ( uint16 )) );
// 2240         }
// 2241         else
// 2242         {
// 2243           // Allocation error, stop
// 2244           status = ZDP_NO_ENTRY;
// 2245           sendRsp = TRUE;
// 2246         }
// 2247       }
// 2248 
// 2249       // Make a source match for ed2
// 2250       matchED->ed2numMatched = ZDO_CompareClusterLists(
// 2251                   matchED->ed2.numOutClusters, matchED->ed2.outClusters,
// 2252                   matchED->ed1.numInClusters, matchED->ed1.inClusters, ZDOBuildBuf );
// 2253       if ( matchED->ed2numMatched )
// 2254       {
// 2255         // Save the match list
// 2256         matchED->ed2Matched = osal_mem_alloc( (short)(matchED->ed2numMatched * sizeof ( uint16 )) );
// 2257         if ( matchED->ed2Matched )
// 2258         {
// 2259           osal_memcpy( matchED->ed2Matched, ZDOBuildBuf, (matchED->ed2numMatched * sizeof ( uint16 )) );
// 2260         }
// 2261         else
// 2262         {
// 2263           // Allocation error, stop
// 2264           status = ZDP_NO_ENTRY;
// 2265           sendRsp = TRUE;
// 2266         }
// 2267       }
// 2268 
// 2269       if ( (sendRsp == FALSE) && (matchED->ed1numMatched || matchED->ed2numMatched) )
// 2270       {
// 2271         // Do the first unbind/bind state
// 2272         ZDMatchSendState( ZDMATCH_REASON_START, ZDP_SUCCESS, 0 );
// 2273       }
// 2274       else
// 2275       {
// 2276         status = ZDP_NO_MATCH;
// 2277         sendRsp = TRUE;
// 2278       }
// 2279   }
// 2280 
// 2281   if ( sendRsp )
// 2282   {
// 2283     // send response to this requester
// 2284     dstAddr.addrMode = Addr16Bit;
// 2285     dstAddr.addr.shortAddr = bindReq->srcAddr;
// 2286     ZDP_EndDeviceBindRsp( bindReq->TransSeq, &dstAddr, status, bindReq->SecurityUse );
// 2287 
// 2288     if ( matchED->state == ZDMATCH_SENDING_BINDS )
// 2289     {
// 2290       // send response to first requester
// 2291       dstAddr.addrMode = Addr16Bit;
// 2292       dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
// 2293       ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, status, matchED->ed1.SecurityUse );
// 2294     }
// 2295 
// 2296     // Process ended - release memory used
// 2297     ZDO_RemoveMatchMemory();
// 2298   }
// 2299 }
// 2300 
// 2301 /*********************************************************************
// 2302  * @fn      ZDO_RemoveMatchMemory()
// 2303  *
// 2304  * @brief   Called to clear the memory used for the end device bind.
// 2305  *
// 2306  * @param  none
// 2307  *
// 2308  * @return  none
// 2309  */
// 2310 static void ZDO_RemoveMatchMemory( void )
// 2311 {
// 2312   if ( matchED != NULL )
// 2313   {
// 2314     if ( matchED->ed2Matched != NULL )
// 2315     {
// 2316       osal_mem_free( matchED->ed2Matched );
// 2317     }
// 2318     if ( matchED->ed1Matched != NULL )
// 2319     {
// 2320       osal_mem_free( matchED->ed1Matched );
// 2321     }
// 2322     if ( matchED->ed1.inClusters != NULL )
// 2323     {
// 2324       osal_mem_free( matchED->ed1.inClusters );
// 2325     }
// 2326     if ( matchED->ed1.outClusters != NULL )
// 2327     {
// 2328       osal_mem_free( matchED->ed1.outClusters );
// 2329     }
// 2330     if ( matchED->ed2.inClusters != NULL )
// 2331     {
// 2332       osal_mem_free( matchED->ed2.inClusters );
// 2333     }
// 2334     if ( matchED->ed2.outClusters != NULL )
// 2335     {
// 2336       osal_mem_free( matchED->ed2.outClusters );
// 2337     }
// 2338 
// 2339     osal_mem_free( matchED );
// 2340     matchED = (ZDMatchEndDeviceBind_t *)NULL;
// 2341   }
// 2342 }
// 2343 
// 2344 /*********************************************************************
// 2345  * @fn      ZDO_CopyMatchInfo()
// 2346  *
// 2347  * @brief   Called to copy memory used for the end device bind.
// 2348  *
// 2349  * @param  srcReq - source information
// 2350  * @param  dstReq - destination location
// 2351  *
// 2352  * @return  TRUE if copy was successful.
// 2353  */
// 2354 static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq )
// 2355 {
// 2356   uint8 allOK = TRUE;
// 2357 
// 2358   // Copy bind information into the match info structure
// 2359   osal_memcpy( (uint8 *)destReq, srcReq, sizeof ( ZDEndDeviceBind_t ) );
// 2360 
// 2361   // Initialize the destination cluster pointers
// 2362   destReq->inClusters = NULL;
// 2363   destReq->outClusters = NULL;
// 2364 
// 2365   // Copy input cluster IDs
// 2366   if ( srcReq->numInClusters )
// 2367   {
// 2368     destReq->inClusters = osal_mem_alloc( (short)(srcReq->numInClusters * sizeof ( uint16 )) );
// 2369     if ( destReq->inClusters )
// 2370     {
// 2371       // Copy the clusters
// 2372       osal_memcpy( (uint8*)(destReq->inClusters), (uint8 *)(srcReq->inClusters),
// 2373                       (srcReq->numInClusters * sizeof ( uint16 )) );
// 2374     }
// 2375     else
// 2376     {
// 2377       allOK = FALSE;
// 2378     }
// 2379   }
// 2380 
// 2381   // Copy output cluster IDs
// 2382   if ( srcReq->numOutClusters )
// 2383   {
// 2384     destReq->outClusters = osal_mem_alloc( (short)(srcReq->numOutClusters * sizeof ( uint16 )) );
// 2385     if ( destReq->outClusters )
// 2386     {
// 2387       // Copy the clusters
// 2388       osal_memcpy( (uint8 *)(destReq->outClusters), (uint8 *)(srcReq->outClusters),
// 2389                       (srcReq->numOutClusters * sizeof ( uint16 )) );
// 2390     }
// 2391     else
// 2392     {
// 2393       allOK = FALSE;
// 2394     }
// 2395   }
// 2396 
// 2397   if ( allOK == FALSE )
// 2398   {
// 2399     if ( destReq->inClusters != NULL )
// 2400     {
// 2401       osal_mem_free( destReq->inClusters );
// 2402     }
// 2403     if ( destReq->outClusters != NULL )
// 2404     {
// 2405       osal_mem_free( destReq->outClusters );
// 2406     }
// 2407   }
// 2408 
// 2409   return ( allOK );
// 2410 }
// 2411 
// 2412 /*********************************************************************
// 2413  * @fn      ZDMatchSendState()
// 2414  *
// 2415  * @brief   State machine for the End device match message algorithm.
// 2416  *
// 2417  * @param  reason - state of algoritm
// 2418  * @param  status - initial message status
// 2419  * @param  TransSeq - next transaction sequence number
// 2420  *
// 2421  * @return  FALSE if error and we are not currently matching, TRUE
// 2422  *          if success.
// 2423  */
// 2424 uint8 ZDMatchSendState( uint8 reason, uint8 status, uint8 TransSeq )
// 2425 {
// 2426   uint8 *dstIEEEAddr = NULL;
// 2427   uint8 dstEP = 0xFF;
// 2428   zAddrType_t dstAddr;
// 2429   zAddrType_t destinationAddr;
// 2430   uint16 msgType;
// 2431   uint16 clusterID = 0xFFFF;
// 2432   ZDEndDeviceBind_t *ed = NULL;
// 2433   uint8 rspStatus = ZDP_SUCCESS;
// 2434 
// 2435   if ( matchED == NULL )
// 2436   {
// 2437     return ( FALSE );
// 2438   }
// 2439 
// 2440   // Check sequence number
// 2441   if ( reason == ZDMATCH_REASON_BIND_RSP || reason == ZDMATCH_REASON_UNBIND_RSP )
// 2442   {
// 2443     if ( TransSeq != matchED->transSeq )
// 2444     {
// 2445       return( FALSE ); // ignore the message
// 2446     }
// 2447   }
// 2448 
// 2449   // turn off timer
// 2450   APS_SetEndDeviceBindTimeout( 0, ZDO_EndDeviceBindMatchTimeoutCB );
// 2451 
// 2452   if ( reason == ZDMATCH_REASON_TIMEOUT )
// 2453   {
// 2454     rspStatus = ZDP_TIMEOUT;    // The process will stop
// 2455   }
// 2456 
// 2457   if ( reason == ZDMATCH_REASON_START || reason == ZDMATCH_REASON_BIND_RSP )
// 2458   {
// 2459     matchED->sending = ZDMATCH_SENDING_UNBIND;
// 2460 
// 2461     if ( reason == ZDMATCH_REASON_BIND_RSP && status != ZDP_SUCCESS )
// 2462     {
// 2463       rspStatus = status;
// 2464     }
// 2465   }
// 2466   else if ( reason == ZDMATCH_REASON_UNBIND_RSP )
// 2467   {
// 2468     if ( status == ZDP_SUCCESS )
// 2469     {
// 2470       matchED->sending = ZDMATCH_SENDING_UNBIND;
// 2471     }
// 2472     else
// 2473     {
// 2474       matchED->sending = ZDMATCH_SENDING_BIND;
// 2475     }
// 2476   }
// 2477 
// 2478   if ( reason != ZDMATCH_REASON_START && matchED->sending == ZDMATCH_SENDING_UNBIND )
// 2479   {
// 2480     // Move to the next cluster ID
// 2481     if ( matchED->ed1numMatched )
// 2482     {
// 2483       matchED->ed1numMatched--;
// 2484     }
// 2485     else if ( matchED->ed2numMatched )
// 2486     {
// 2487       matchED->ed2numMatched--;
// 2488     }
// 2489   }
// 2490 
// 2491   // What message do we send now
// 2492   if ( matchED->ed1numMatched )
// 2493   {
// 2494     ed = &(matchED->ed1);
// 2495     clusterID = matchED->ed1Matched[matchED->ed1numMatched-1];
// 2496     dstIEEEAddr = matchED->ed2.ieeeAddr;
// 2497     dstEP = matchED->ed2.endpoint;
// 2498   }
// 2499   else if ( matchED->ed2numMatched )
// 2500   {
// 2501     ed = &(matchED->ed2);
// 2502     clusterID = matchED->ed2Matched[matchED->ed2numMatched-1];
// 2503     dstIEEEAddr = matchED->ed1.ieeeAddr;
// 2504     dstEP = matchED->ed1.endpoint;
// 2505   }
// 2506 
// 2507   dstAddr.addrMode = Addr16Bit;
// 2508 
// 2509   // Send the next message
// 2510   if ( (rspStatus == ZDP_SUCCESS) && ed )
// 2511   {
// 2512     // Send unbind/bind message to source
// 2513     if ( matchED->sending == ZDMATCH_SENDING_UNBIND )
// 2514     {
// 2515       msgType = Unbind_req;
// 2516     }
// 2517     else
// 2518     {
// 2519       msgType = Bind_req;
// 2520     }
// 2521 
// 2522     dstAddr.addr.shortAddr = ed->srcAddr;
// 2523 
// 2524     // Save off the transaction sequence number
// 2525     matchED->transSeq = ZDP_TransID;
// 2526 
// 2527     destinationAddr.addrMode = Addr64Bit;
// 2528     osal_cpyExtAddr( destinationAddr.addr.extAddr, dstIEEEAddr );
// 2529 
// 2530     ZDP_BindUnbindReq( msgType, &dstAddr, ed->ieeeAddr, ed->endpoint, clusterID,
// 2531         &destinationAddr, dstEP, ed->SecurityUse );
// 2532 
// 2533     // Set timeout for response
// 2534     APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
// 2535   }
// 2536   else
// 2537   {
// 2538     // Send the response messages to requesting devices
// 2539     // send response to first requester
// 2540     dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
// 2541     ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, rspStatus, matchED->ed1.SecurityUse );
// 2542 
// 2543     // send response to second requester
// 2544     if ( matchED->state == ZDMATCH_SENDING_BINDS )
// 2545     {
// 2546       dstAddr.addr.shortAddr = matchED->ed2.srcAddr;
// 2547       ZDP_EndDeviceBindRsp( matchED->ed2.TransSeq, &dstAddr, rspStatus, matchED->ed2.SecurityUse );
// 2548     }
// 2549 
// 2550     // Process ended - release memory used
// 2551     ZDO_RemoveMatchMemory();
// 2552   }
// 2553 
// 2554   return ( TRUE );
// 2555 }
// 2556 
// 2557 /*********************************************************************
// 2558  * @fn      ZDO_EndDeviceBindMatchTimeoutCB()
// 2559  *
// 2560  * @brief   End device bind timeout.
// 2561  *
// 2562  * @param  none
// 2563  *
// 2564  * @return  none
// 2565  */
// 2566 static void ZDO_EndDeviceBindMatchTimeoutCB( void )
// 2567 {
// 2568   ZDMatchSendState( ZDMATCH_REASON_TIMEOUT, ZDP_TIMEOUT, 0 );
// 2569 }
// 2570 #endif // ZG_BUILD_COORDINATOR_TYPE
// 2571 
// 2572 /*********************************************************************
// 2573  * ZDO MESSAGE PARSING API FUNCTIONS
// 2574  */
// 2575 
// 2576 /*********************************************************************
// 2577  * @fn          ZDO_ParseEndDeviceBindReq
// 2578  *
// 2579  * @brief       This function parses the End_Device_Bind_req message.
// 2580  *
// 2581  *     NOTE:  The clusters lists in bindReq are allocated in this
// 2582  *            function and must be freed by that calling function.
// 2583  *
// 2584  * @param       inMsg  - incoming message (request)
// 2585  * @param       bindReq - pointer to place to parse message to
// 2586  *
// 2587  * @return      none
// 2588  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2589 void ZDO_ParseEndDeviceBindReq( zdoIncomingMsg_t *inMsg, ZDEndDeviceBind_t *bindReq )
ZDO_ParseEndDeviceBindReq:
          CFI Block cfiBlock476 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
        CODE
// 2590 {
        FUNCALL ZDO_ParseEndDeviceBindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0,R4
        MOV     ?V1,R5
// 2591   uint8 *msg;
// 2592 
// 2593   // Parse the message
// 2594   bindReq->TransSeq = inMsg->TransSeq;
        MOV     A,R2
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_172:
        ADDC    A,R3
        MOV     DPH,A
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_135:
        LCALL   ?Subroutine40 & 0xFFFF
// 2595   bindReq->srcAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_61:
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_348:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine37 & 0xFFFF
// 2596   bindReq->SecurityUse = inMsg->SecurityUse;
??CrossCallReturnLabel_55:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOVX    @DPTR,A
// 2597   msg = inMsg->asdu;
        LCALL   ?Subroutine55 & 0xFFFF
// 2598 
// 2599   bindReq->localCoordinator = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_434:
        LCALL   ??Subroutine202_0 & 0xFFFF
??CrossCallReturnLabel_468:
        LCALL   ?Subroutine12 & 0xFFFF
// 2600   msg += 2;
??CrossCallReturnLabel_396:
        JNC     ??ZDO_ParseEndDeviceBindReq_0
        INC     R7
// 2601 
// 2602   osal_cpyExtAddr( bindReq->ieeeAddr, msg );
??ZDO_ParseEndDeviceBindReq_0:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,?V0
        ADD     A,#0x6
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay  ; Banked call to: sAddrExtCpy
// 2603   msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseEndDeviceBindReq_1
        INC     R7
// 2604 
// 2605   bindReq->endpoint = *msg++;
??ZDO_ParseEndDeviceBindReq_1:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_165:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine15 & 0xFFFF
// 2606   bindReq->profileID = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_11:
        MOV     R0,A
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_167:
        MOV     A,R0
        LCALL   ??Subroutine192_0 & 0xFFFF
// 2607   msg += 2;
??CrossCallReturnLabel_401:
        JNC     ??ZDO_ParseEndDeviceBindReq_2
        INC     R7
// 2608 
// 2609   bindReq->inClusters = NULL;
??ZDO_ParseEndDeviceBindReq_2:
        MOV     A,?V0
        ADD     A,#0x12
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_186:
        INC     DPTR
        MOVX    @DPTR,A
// 2610   bindReq->outClusters = NULL;
        MOV     A,?V0
        ADD     A,#0x15
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_187:
        LCALL   ?Subroutine49 & 0xFFFF
// 2611 
// 2612   if ((bindReq->numInClusters = *msg++) &&
// 2613       (bindReq->inClusters = (uint16*)osal_mem_alloc( (bindReq->numInClusters * sizeof( uint16 )))))
??CrossCallReturnLabel_365:
        MOV     R0,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
        MOV     A,?V0
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_426:
        MOV     A,R0
        MOVX    @DPTR,A
        JZ      ??ZDO_ParseEndDeviceBindReq_3
        MOV     A,?V0
        ADD     A,#0x12
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_363:
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_0:
        JZ      ??ZDO_ParseEndDeviceBindReq_3
// 2614   {
// 2615     msg = ZDO_ConvertOTAClusters( bindReq->numInClusters, msg, bindReq->inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,?V0
        ADD     A,#0x12
        LCALL   ?Subroutine71 & 0xFFFF
// 2616   }
??CrossCallReturnLabel_118:
        LCALL   ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_427:
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??ZDO_ConvertOTAClusters?relay; Banked call to: ZDO_ConvertOTAClusters
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R6,?V2
        MOV     R7,?V3
        SJMP    ??CrossCallReturnLabel_188
// 2617   else
// 2618   {
// 2619     bindReq->numInClusters = 0;
??ZDO_ParseEndDeviceBindReq_3:
        MOV     A,?V0
        ADD     A,#0x11
        LCALL   ?Subroutine114 & 0xFFFF
// 2620   }
// 2621 
// 2622   if ((bindReq->numOutClusters = *msg++) &&
// 2623       (bindReq->outClusters = (uint16*)osal_mem_alloc((bindReq->numOutClusters * sizeof(uint16)))))
??CrossCallReturnLabel_188:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_373:
        MOV     A,R0
        MOVX    @DPTR,A
        JZ      ??ZDO_ParseEndDeviceBindReq_4
        MOV     A,?V0
        ADD     A,#0x15
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_364:
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_1:
        JZ      ??ZDO_ParseEndDeviceBindReq_4
// 2624   {
// 2625     msg = ZDO_ConvertOTAClusters( bindReq->numOutClusters, msg, bindReq->outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,?V0
        ADD     A,#0x15
        LCALL   ?Subroutine71 & 0xFFFF
// 2626   }
??CrossCallReturnLabel_119:
        LCALL   ??Subroutine186_0 & 0xFFFF
??CrossCallReturnLabel_372:
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??ZDO_ConvertOTAClusters?relay; Banked call to: ZDO_ConvertOTAClusters
        SJMP    ??ZDO_ParseEndDeviceBindReq_5
// 2627   else
// 2628   {
// 2629     bindReq->numOutClusters = 0;
??ZDO_ParseEndDeviceBindReq_4:
        LCALL   ?Subroutine109 & 0xFFFF
// 2630   }
??CrossCallReturnLabel_374:
        CLR     A
        MOVX    @DPTR,A
// 2631 }
??ZDO_ParseEndDeviceBindReq_5:
        LJMP    ??Subroutine159_0 & 0xFFFF
          CFI EndBlock cfiBlock476

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine114:
          CFI Block cfiCond477 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_186
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond478) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond478) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond478) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond478) CFA_SP SP+-2
          CFI (cfiCond478) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond479 Using cfiCommon0
          CFI (cfiCond479) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond479) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond479) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond479) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond479) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond479) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond479) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond479) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond479) CFA_SP SP+-2
          CFI (cfiCond479) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker480 Using cfiCommon1
          CFI (cfiPicker480) NoFunction
          CFI (cfiPicker480) Picker
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_430:
        CLR     A
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiCond479
          CFI EndBlock cfiPicker480

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine105:
          CFI Block cfiCond481 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_363
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond482) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond482) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond482) CFA_SP SP+-2
          CFI (cfiCond482) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker483 Using cfiCommon1
          CFI (cfiPicker483) NoFunction
          CFI (cfiPicker483) Picker
        MOV     R0,A
        CLR     A
        ADDC    A,?V1
        MOV     R1,A
        MOV     ?V2,R0
        MOV     ?V3,R1
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        MOVX    A,@DPTR
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiPicker483
        REQUIRE ??Subroutine184_0
        ; // Fall through to label ??Subroutine184_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine184_0:
          CFI Block cfiCond484 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_361
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond485 Using cfiCommon0
          CFI (cfiCond485) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond485) Conditional ??CrossCallReturnLabel_362
          CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond485) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond485) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond485) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond485) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond485) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond485) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond485) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond485) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond485) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond485) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond485) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond485) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond485) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond485) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond485) CFA_SP SP+-2
          CFI (cfiCond485) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond486 Using cfiCommon0
          CFI (cfiCond486) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond486) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond486) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond486) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond486) CFA_SP SP+-2
          CFI (cfiCond486) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+-2
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker488 Using cfiCommon1
          CFI (cfiPicker488) NoFunction
          CFI (cfiPicker488) Picker
        ADD     A,0xE0 /* A   */
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        RET
          CFI EndBlock cfiCond484
          CFI EndBlock cfiCond485
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiPicker488

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond489 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_118
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-2
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker491 Using cfiCommon1
          CFI (cfiPicker491) NoFunction
          CFI (cfiPicker491) Picker
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_428:
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     A,?V0
        RET
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiPicker491

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond492 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_365
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond493 Using cfiCommon0
          CFI (cfiCond493) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond493) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond493) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond493) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond493) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond493) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond493) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond493) CFA_SP SP+-2
          CFI (cfiCond493) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker494 Using cfiCommon1
          CFI (cfiPicker494) NoFunction
          CFI (cfiPicker494) Picker
        INC     DPTR
          CFI EndBlock cfiCond492
          CFI EndBlock cfiCond493
          CFI EndBlock cfiPicker494
        REQUIRE ??Subroutine185_0
        ; // Fall through to label ??Subroutine185_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine185_0:
          CFI Block cfiCond495 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_367
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond496) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond496) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond496) CFA_SP SP+-2
          CFI (cfiCond496) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+-2
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker498 Using cfiCommon1
          CFI (cfiPicker498) NoFunction
          CFI (cfiPicker498) Picker
        LCALL   ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_369:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiPicker498

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond499 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_54
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond500 Using cfiCommon0
          CFI (cfiCond500) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond500) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond500) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond500) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond500) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond500) CFA_SP SP+-2
          CFI (cfiCond500) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker501 Using cfiCommon1
          CFI (cfiPicker501) NoFunction
          CFI (cfiPicker501) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        MOV     A,R2
        LCALL   ??Subroutine193_0 & 0xFFFF
??CrossCallReturnLabel_405:
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond499
          CFI EndBlock cfiCond500
          CFI EndBlock cfiPicker501
// 2632 
// 2633 /*********************************************************************
// 2634  * @fn          ZDO_ParseBindUnbindReq
// 2635  *
// 2636  * @brief       This function parses the Bind_req or Unbind_req message.
// 2637  *
// 2638  * @param       inMsg  - incoming message (request)
// 2639  * @param       pReq - place to put parsed information
// 2640  *
// 2641  * @return      none
// 2642  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2643 void ZDO_ParseBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ParseBindUnbindReq:
          CFI Block cfiBlock502 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
        CODE
// 2644 {
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine89 & 0xFFFF
// 2645   uint8 *msg;
// 2646 
// 2647   msg = inMsg->asdu;
??CrossCallReturnLabel_377:
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_252:
        MOV     R7,A
// 2648   osal_cpyExtAddr( pReq->srcAddress, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   ??sAddrExtCpy?relay  ; Banked call to: sAddrExtCpy
// 2649   msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseBindUnbindReq_0
        INC     R7
// 2650   pReq->srcEndpoint = *msg++;
??ZDO_ParseBindUnbindReq_0:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_106:
        LCALL   ?Subroutine15 & 0xFFFF
// 2651   pReq->clusterID = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_12:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine12 & 0xFFFF
// 2652   msg += 2;
??CrossCallReturnLabel_397:
        JNC     ??ZDO_ParseBindUnbindReq_1
        INC     R7
// 2653   pReq->dstAddress.addrMode = *msg++;
??ZDO_ParseBindUnbindReq_1:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,?V0
        LCALL   ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_303:
        MOV     DPH,A
        MOV     A,R0
        LCALL   ?Subroutine39 & 0xFFFF
// 2654   if ( pReq->dstAddress.addrMode == Addr64Bit )
??CrossCallReturnLabel_58:
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDO_ParseBindUnbindReq_2
// 2655   {
// 2656     osal_cpyExtAddr( pReq->dstAddress.addr.extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,?V0
        ADD     A,#0xb
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay  ; Banked call to: sAddrExtCpy
// 2657     msg += Z_EXTADDR_LEN;
// 2658     pReq->dstEndpoint = *msg;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine109 & 0xFFFF
// 2659   }
??CrossCallReturnLabel_375:
        POP     A
          CFI CFA_SP SP+0
        SJMP    ??ZDO_ParseBindUnbindReq_3
// 2660   else
// 2661   {
// 2662     // copy group address
// 2663     pReq->dstAddress.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseBindUnbindReq_2:
        LCALL   ?Subroutine79 & 0xFFFF
// 2664   }
??CrossCallReturnLabel_128:
        LCALL   ??Subroutine188_0 & 0xFFFF
??CrossCallReturnLabel_385:
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??ZDO_ParseBindUnbindReq_3:
        MOVX    @DPTR,A
// 2665 }
        LJMP    ??Subroutine161_0 & 0xFFFF
          CFI EndBlock cfiBlock502

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine109:
          CFI Block cfiCond503 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_373
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond504 Using cfiCommon0
          CFI (cfiCond504) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond504) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond504) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond504) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond504) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond504) CFA_SP SP+-2
          CFI (cfiCond504) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond505) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond506 Using cfiCommon0
          CFI (cfiCond506) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond506) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond506) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond506) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond506) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond506) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond506) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond506) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond506) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker507 Using cfiCommon1
          CFI (cfiPicker507) NoFunction
          CFI (cfiPicker507) Picker
        MOV     A,?V0
          CFI EndBlock cfiCond503
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiCond506
          CFI EndBlock cfiPicker507
        REQUIRE ??Subroutine186_0
        ; // Fall through to label ??Subroutine186_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine186_0:
          CFI Block cfiCond508 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_372
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond509) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond509) CFA_SP SP+-2
          CFI (cfiCond509) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+-2
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond512 Using cfiCommon0
          CFI (cfiCond512) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond512) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond512) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond512) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond512) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond512) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond512) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond512) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond512) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker513 Using cfiCommon1
          CFI (cfiPicker513) NoFunction
          CFI (cfiPicker513) Picker
        ADD     A,#0x14
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_431:
        RET
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiCond512
          CFI EndBlock cfiPicker513

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond514 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_377
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+-2
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker516 Using cfiCommon1
          CFI (cfiPicker516) NoFunction
          CFI (cfiPicker516) Picker
        MOV     ?V0,R4
        MOV     ?V1,R5
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiPicker516
        REQUIRE ??Subroutine187_0
        ; // Fall through to label ??Subroutine187_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine187_0:
          CFI Block cfiCond517 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_379
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond518) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+-2
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond519) CFA_SP SP+-2
          CFI (cfiCond519) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond520 Using cfiCommon0
          CFI (cfiCond520) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond520) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond520) CFA_SP SP+-2
          CFI (cfiCond520) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker521 Using cfiCommon1
          CFI (cfiPicker521) NoFunction
          CFI (cfiPicker521) Picker
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_384:
        RET
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiCond520
          CFI EndBlock cfiPicker521

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine140:
          CFI Block cfiCond522 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_377
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_378
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+-4
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_379
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+-4
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_384, ??CrossCallReturnLabel_380
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond525) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond525) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond525) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+-4
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_9
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+-4
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond527 Using cfiCommon0
          CFI (cfiCond527) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond527) Conditional ??CrossCallReturnLabel_381, ??CrossCallReturnLabel_10
          CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond527) CFA_SP SP+-4
          CFI (cfiCond527) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond528 Using cfiCommon0
          CFI (cfiCond528) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond528) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_434
          CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond528) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond528) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond528) CFA_SP SP+-4
          CFI (cfiCond528) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond529 Using cfiCommon0
          CFI (cfiCond529) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond529) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_435
          CFI (cfiCond529) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond529) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond529) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond529) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond529) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond529) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond529) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond529) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond529) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond529) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond529) CFA_SP SP+-4
          CFI (cfiCond529) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_436
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond530) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond530) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+-4
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_437
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+-4
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond532 Using cfiCommon0
          CFI (cfiCond532) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond532) Conditional ??CrossCallReturnLabel_382, ??CrossCallReturnLabel_438
          CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond532) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond532) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond532) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond532) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond532) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond532) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond532) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond532) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond532) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond532) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond532) CFA_SP SP+-4
          CFI (cfiCond532) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function ZDO_ParseEPListRsp
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_145
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+-4
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function ZDO_ParseUserDescRsp
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_146
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-4
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_147
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+-4
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond536 Using cfiCommon0
          CFI (cfiCond536) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond536) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_148
          CFI (cfiCond536) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond536) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond536) CFA_SP SP+-9
          CFI Block cfiPicker537 Using cfiCommon1
          CFI (cfiPicker537) NoFunction
          CFI (cfiPicker537) Picker
        MOV     A,R2
        ADD     A,#0x13
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        RET
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiCond527
          CFI EndBlock cfiCond528
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiCond536
          CFI EndBlock cfiPicker537

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond538 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_12
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+-2
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+-2
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker541 Using cfiCommon1
          CFI (cfiPicker541) NoFunction
          CFI (cfiPicker541) Picker
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_443:
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_217:
        RET
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiPicker541
// 2666 
// 2667 /*********************************************************************
// 2668  * @fn      ZDO_ParseAddrRsp
// 2669  *
// 2670  * @brief   Turns the inMsg (incoming message) into the out parsed
// 2671  *          structure.
// 2672  *
// 2673  * @param   inMsg - incoming message
// 2674  *
// 2675  * @return  pointer to parsed structures.  This structure was
// 2676  *          allocated using osal_mem_alloc, so it must be freed
// 2677  *          by the calling function [osal_mem_free()].
// 2678  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2679 ZDO_NwkIEEEAddrResp_t *ZDO_ParseAddrRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseAddrRsp:
          CFI Block cfiBlock542 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
        CODE
// 2680 {
        FUNCALL ZDO_ParseAddrRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseAddrRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2681   ZDO_NwkIEEEAddrResp_t *rsp;
// 2682   uint8 *msg;
// 2683   byte cnt = 0;
        MOV     ?V2,#0x0
// 2684 
// 2685   // Calculate the number of items in the list
// 2686   if ( inMsg->asduLen > (1 + Z_EXTADDR_LEN + 2) )
        MOV     A,R6
        ADD     A,#0x10
        LCALL   ??Subroutine189_0 & 0xFFFF
??CrossCallReturnLabel_392:
        CLR     C
        SUBB    A,#0xc
        JC      ??ZDO_ParseAddrRsp_0
// 2687   {
// 2688     cnt = inMsg->asdu[1 + Z_EXTADDR_LEN + 2];
        LCALL   ?Subroutine91 & 0xFFFF
// 2689   }
??CrossCallReturnLabel_152:
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R0
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_190:
        ADDC    A,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V2,A
// 2690   else
// 2691   {
// 2692     cnt = 0;
// 2693   }
// 2694 
// 2695   // Make buffer
// 2696   rsp = (ZDO_NwkIEEEAddrResp_t *)osal_mem_alloc( sizeof(ZDO_NwkIEEEAddrResp_t) + (cnt * sizeof ( uint16 )) );
??ZDO_ParseAddrRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R0,?V2
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_227:
        MOV     A,R0
        ADD     A,#0xd
        MOV     R2,A
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
// 2697 
// 2698   if ( rsp )
        MOV     A,R2
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??ZDO_ParseAddrRsp_1 & 0xFFFF
// 2699   {
// 2700     msg = inMsg->asdu;
        MOV     A,R6
        LCALL   ??Subroutine170_0 & 0xFFFF
??CrossCallReturnLabel_280:
        ADDC    A,R7
        LCALL   ??Subroutine197_0 & 0xFFFF
// 2701 
// 2702     rsp->status = *msg++;
??CrossCallReturnLabel_439:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine198_0 & 0xFFFF
// 2703     if ( rsp->status == ZDO_SUCCESS )
??CrossCallReturnLabel_440:
        JNZ     ??ZDO_ParseAddrRsp_1
// 2704     {
// 2705       osal_cpyExtAddr( rsp->extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,R2
        ADD     A,#0x3
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay  ; Banked call to: sAddrExtCpy
// 2706       msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseAddrRsp_2
        INC     R7
// 2707       rsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_2:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_130:
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ??Subroutine191_0 & 0xFFFF
// 2708 
// 2709       msg += 2;
??CrossCallReturnLabel_399:
        JNC     ??ZDO_ParseAddrRsp_3
        INC     R7
// 2710       rsp->numAssocDevs = 0;
??ZDO_ParseAddrRsp_3:
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_386:
        CLR     A
        MOVX    @DPTR,A
// 2711 
// 2712       // StartIndex field is only present if NumAssocDev field is non-zero.
// 2713       if ( cnt > 0 )
        MOV     A,?V2
        JZ      ??ZDO_ParseAddrRsp_1
// 2714       {
// 2715         uint16 *pList = &(rsp->devList[0]);
        MOV     A,?V0
        ADD     A,#0xd
        MOV     R0,A
        CLR     A
        ADDC    A,?V1
        MOV     R1,A
// 2716         byte n = cnt;
// 2717 
// 2718         rsp->numAssocDevs = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_387:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine13 & 0xFFFF
// 2719         rsp->startIndex = *msg++;
??CrossCallReturnLabel_4:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_180:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_59:
        MOV     ?V3,?V2
// 2720 
// 2721         while ( n != 0 )
// 2722         {
// 2723           *pList++ = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_4:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_83:
        JNC     ??ZDO_ParseAddrRsp_5
        INC     R1
// 2724           msg += sizeof( uint16 );
??ZDO_ParseAddrRsp_5:
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        JNC     ??ZDO_ParseAddrRsp_6
        INC     R7
// 2725           n--;
// 2726         }
??ZDO_ParseAddrRsp_6:
        DEC     ?V3
        MOV     A,?V3
        JNZ     ??ZDO_ParseAddrRsp_4
// 2727       }
// 2728     }
// 2729   }
// 2730 
// 2731   return ( rsp );
??ZDO_ParseAddrRsp_1:
        MOV     R2,?V0
        MOV     R3,?V1
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock542
// 2732 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine111:
          CFI Block cfiCond543 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_179
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function ZDO_ParseAddrRsp
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond544) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond544) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond544) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond544) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond544) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond545 Using cfiCommon0
          CFI (cfiCond545) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond545) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond545) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond545) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond545) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond545) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond545) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond545) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond545) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker546 Using cfiCommon1
          CFI (cfiPicker546) NoFunction
          CFI (cfiPicker546) Picker
        MOV     A,?V0
        ADD     A,#0xc
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_429:
        RET
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiCond545
          CFI EndBlock cfiPicker546

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine110:
          CFI Block cfiCond547 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_386
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function ZDO_ParseAddrRsp
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond548) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond548) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond548) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond548) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond548) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker550 Using cfiCommon1
          CFI (cfiPicker550) NoFunction
          CFI (cfiPicker550) Picker
        MOV     A,?V0
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiPicker550
        REQUIRE ??Subroutine188_0
        ; // Fall through to label ??Subroutine188_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine188_0:
          CFI Block cfiCond551 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_385
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function ZDO_ParseAddrRsp
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+-2
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function ZDO_ParseAddrRsp
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond553) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker555 Using cfiCommon1
          CFI (cfiPicker555) NoFunction
          CFI (cfiPicker555) Picker
        ADD     A,#0xb
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_432:
        RET
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiPicker555

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine149:
          CFI Block cfiCond556 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_186
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_187
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+-4
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_430, ??CrossCallReturnLabel_188
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+-4
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_428, ??CrossCallReturnLabel_118
          CFI (cfiCond559) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond559) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond559) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond559) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond559) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond559) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond559) CFA_SP SP+-4
          CFI (cfiCond559) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_428, ??CrossCallReturnLabel_119
          CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond560) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond560) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond560) CFA_SP SP+-4
          CFI (cfiCond560) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_431, ??CrossCallReturnLabel_373
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-4
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_431, ??CrossCallReturnLabel_374
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+-4
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_431, ??CrossCallReturnLabel_375
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_SP SP+-5
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_431, ??CrossCallReturnLabel_376
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+-5
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_431, ??CrossCallReturnLabel_372
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-4
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_429, ??CrossCallReturnLabel_179
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+-4
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function ZDO_ParseAddrRsp
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_429, ??CrossCallReturnLabel_180
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+-5
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_429, ??CrossCallReturnLabel_181
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond568) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond568) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond568) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-5
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function ZDO_ParseAddrRsp
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_432, ??CrossCallReturnLabel_386
          CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond569) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond569) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond569) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond569) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond569) CFA_SP SP+-4
          CFI (cfiCond569) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function ZDO_ParseAddrRsp
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_432, ??CrossCallReturnLabel_387
          CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond570) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond570) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond570) CFA_SP SP+-5
          CFI (cfiCond570) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_432, ??CrossCallReturnLabel_388
          CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond571) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond571) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond571) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond571) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond571) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond571) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond571) CFA_SP SP+-5
          CFI (cfiCond571) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_432, ??CrossCallReturnLabel_385
          CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond572) CFA_SP SP+-4
          CFI (cfiCond572) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_426
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-4
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond574 Using cfiCommon0
          CFI (cfiCond574) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond574) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_427
          CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond574) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond574) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond574) CFA_SP SP+-4
          CFI (cfiCond574) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond575 Using cfiCommon0
          CFI (cfiCond575) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond575) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_419
          CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond575) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond575) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond575) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond575) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond575) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond575) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond575) CFA_SP SP+-4
          CFI (cfiCond575) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_420
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-5
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_421
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+-5
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_422
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+-5
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_423
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond579) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond579) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+-5
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_424
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+-5
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_433, ??CrossCallReturnLabel_425
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+-5
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker582 Using cfiCommon1
          CFI (cfiPicker582) NoFunction
          CFI (cfiPicker582) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,?V1
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiCond574
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiPicker582

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond583 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_393
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+-2
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function ZDO_ProcessUserDescReq
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_395
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+-2
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker586 Using cfiCommon1
          CFI (cfiPicker586) NoFunction
          CFI (cfiPicker586) Picker
        MOV     A,R6
        ADD     A,#0xe
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiPicker586
        REQUIRE ??Subroutine189_0
        ; // Fall through to label ??Subroutine189_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine189_0:
          CFI Block cfiCond587 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_389
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-2
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond589) CFA_SP SP+-2
          CFI (cfiCond589) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function ZDO_ParseAddrRsp
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+-2
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond591) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond591) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond591) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond591) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond591) CFA_SP SP+-2
          CFI (cfiCond591) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+-2
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function ZDO_ProcessUserDescReq
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_395
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-2
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker594 Using cfiCommon1
          CFI (cfiPicker594) NoFunction
          CFI (cfiPicker594) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiPicker594

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond595 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
          CFI Conditional ??CrossCallReturnLabel_151
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function ZDO_ParseAddrRsp
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond596) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond596) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+-2
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_153
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond597) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond597) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond597) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond597) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond597) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+-2
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker598 Using cfiCommon1
          CFI (cfiPicker598) NoFunction
          CFI (cfiPicker598) Picker
        LCALL   ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_306:
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiPicker598

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond599 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond600 Using cfiCommon0
          CFI (cfiCond600) Function ZDO_ParseAddrRsp
          CFI (cfiCond600) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond600) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond600) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond600) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond600) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond600) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond600) CFA_SP SP+-2
          CFI (cfiCond600) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_60
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+-2
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker602 Using cfiCommon1
          CFI (cfiPicker602) NoFunction
          CFI (cfiPicker602) Picker
        LCALL   ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_204:
        RET
          CFI EndBlock cfiCond599
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiPicker602

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine121:
          CFI Block cfiCond603 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_204, ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function ZDO_ParseAddrRsp
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_204, ??CrossCallReturnLabel_59
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond604) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond604) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+-4
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_204, ??CrossCallReturnLabel_60
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+-4
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function ZDO_ParseAddrRsp
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_4
          CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond606) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond606) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond606) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond606) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond606) CFA_SP SP+-4
          CFI (cfiCond606) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond607 Using cfiCommon0
          CFI (cfiCond607) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond607) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_5
          CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond607) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond607) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond607) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond607) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond607) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond607) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond607) CFA_SP SP+-4
          CFI (cfiCond607) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_6
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond608) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond608) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+-4
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond609 Using cfiCommon0
          CFI (cfiCond609) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond609) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_7
          CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond609) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond609) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond609) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond609) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond609) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond609) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond609) CFA_SP SP+-4
          CFI (cfiCond609) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_8
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond610) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+-4
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_203, ??CrossCallReturnLabel_56
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-4
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_203, ??CrossCallReturnLabel_57
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond612) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond612) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond612) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+-4
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker613 Using cfiCommon1
          CFI (cfiPicker613) NoFunction
          CFI (cfiPicker613) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     R6
        MOV     R7,DPH
        RET
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiPicker613

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond614 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_396
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+-2
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker616 Using cfiCommon1
          CFI (cfiPicker616) NoFunction
          CFI (cfiPicker616) Picker
        INC     DPTR
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiPicker616
        REQUIRE ??Subroutine190_0
        ; // Fall through to label ??Subroutine190_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine190_0:
          CFI Block cfiCond617 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_398
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond618 Using cfiCommon0
          CFI (cfiCond618) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond618) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond618) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond618) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond618) CFA_SP SP+-2
          CFI (cfiCond618) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+-2
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker620 Using cfiCommon1
          CFI (cfiPicker620) NoFunction
          CFI (cfiPicker620) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond617
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiPicker620
        REQUIRE ??Subroutine191_0
        ; // Fall through to label ??Subroutine191_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine191_0:
          CFI Block cfiCond621 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_399
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond622 Using cfiCommon0
          CFI (cfiCond622) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond622) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond622) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond622) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond622) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond622) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond622) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond622) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond622) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond622) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond622) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond622) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond622) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond622) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond622) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond622) CFA_SP SP+-2
          CFI (cfiCond622) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond623 Using cfiCommon0
          CFI (cfiCond623) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond623) Conditional ??CrossCallReturnLabel_398
          CFI (cfiCond623) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond623) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond623) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond623) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond623) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond623) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond623) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond623) CFA_SP SP+-2
          CFI (cfiCond623) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond624) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond624) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond624) CFA_SP SP+-2
          CFI (cfiCond624) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond625 Using cfiCommon0
          CFI (cfiCond625) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond625) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond625) CFA_SP SP+-2
          CFI (cfiCond625) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker626 Using cfiCommon1
          CFI (cfiPicker626) NoFunction
          CFI (cfiPicker626) Picker
        INC     DPTR
          CFI EndBlock cfiCond621
          CFI EndBlock cfiCond622
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiCond625
          CFI EndBlock cfiPicker626
        REQUIRE ??Subroutine192_0
        ; // Fall through to label ??Subroutine192_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine192_0:
          CFI Block cfiCond627 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_401
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond628 Using cfiCommon0
          CFI (cfiCond628) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond628) Conditional ??CrossCallReturnLabel_402
          CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond628) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond628) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond628) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond628) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond628) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond628) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond628) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond628) CFA_SP SP+-2
          CFI (cfiCond628) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond629 Using cfiCommon0
          CFI (cfiCond629) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond629) Conditional ??CrossCallReturnLabel_403
          CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond629) CFA_SP SP+-2
          CFI (cfiCond629) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function ZDO_ParseAddrRsp
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_399
          CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond630) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond630) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond630) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond630) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond630) CFA_SP SP+-2
          CFI (cfiCond630) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+-2
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond632 Using cfiCommon0
          CFI (cfiCond632) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond632) Conditional ??CrossCallReturnLabel_398
          CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond632) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond632) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond632) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond632) CFA_SP SP+-2
          CFI (cfiCond632) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond633 Using cfiCommon0
          CFI (cfiCond633) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond633) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond633) CFA_SP SP+-2
          CFI (cfiCond633) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_SP SP+-2
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker635 Using cfiCommon1
          CFI (cfiPicker635) NoFunction
          CFI (cfiPicker635) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        RET
          CFI EndBlock cfiCond627
          CFI EndBlock cfiCond628
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiCond632
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiPicker635
// 2733 
// 2734 /*********************************************************************
// 2735  * @fn          ZDO_ParseNodeDescRsp
// 2736  *
// 2737  * @brief       This function parses the Node_Desc_rsp message.
// 2738  *
// 2739  * @param       inMsg - incoming message
// 2740  * @param       pNDRsp - place to parse the message into
// 2741  *
// 2742  * @return      none
// 2743  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2744 void ZDO_ParseNodeDescRsp( zdoIncomingMsg_t *inMsg, ZDO_NodeDescRsp_t *pNDRsp )
ZDO_ParseNodeDescRsp:
          CFI Block cfiBlock636 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
        CODE
// 2745 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 0
// 2746   uint8 *msg;
// 2747 
// 2748   msg = inMsg->asdu;
        LCALL   ?Subroutine14 & 0xFFFF
// 2749 
// 2750   pNDRsp->status = *msg++;
// 2751   pNDRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 2752 
// 2753   if ( pNDRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_9:
        JZ      $+5
        LJMP    ??ZDO_ParseNodeDescRsp_0 & 0xFFFF
// 2754   {
// 2755     msg += 2;
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        JNC     ??ZDO_ParseNodeDescRsp_1
        INC     R1
// 2756     pNDRsp->nodeDesc.LogicalType = *msg & 0x07;
??ZDO_ParseNodeDescRsp_1:
        MOV     A,R4
        ADD     A,#0x3
        MOV     R2,A
        CLR     A
        ADDC    A,R5
        MOV     R3,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ANL     A,#0x7
        MOV     R6,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ANL     A,#0xf8
        ORL     A,R6
        LCALL   ?Subroutine44 & 0xFFFF
// 2757 
// 2758     pNDRsp->nodeDesc.ComplexDescAvail = ( *msg & 0x08 ) >> 3;
??CrossCallReturnLabel_68:
        MOV     C,0xE0 /* A   */.3
        CLR     A
        RLC     A
        MOV     R6,A
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.3
        MOV     DPH,R3
        MOV     DPL,R2
        MOVX    A,@DPTR
        MOV     0xE0 /* A   */.3,C
        LCALL   ?Subroutine44 & 0xFFFF
// 2759     pNDRsp->nodeDesc.UserDescAvail = ( *msg & 0x10 ) >> 4;
??CrossCallReturnLabel_69:
        MOV     C,0xE0 /* A   */.4
        CLR     A
        RLC     A
        MOV     R7,A
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.4
        MOV     DPH,R3
        MOV     DPL,R2
        MOVX    A,@DPTR
        MOV     0xE0 /* A   */.4,C
        LCALL   ?Subroutine47 & 0xFFFF
// 2760 
// 2761     msg++;  // Reserved bits.
??CrossCallReturnLabel_78:
        INC     R0
        MOV     R1,DPH
// 2762     pNDRsp->nodeDesc.FrequencyBand = (*msg >> 3) & 0x1f;
        MOV     A,R4
        ADD     A,#0x4
        INC     R2
        CLR     A
        ADDC    A,R5
        MOV     R3,A
        MOVX    A,@DPTR
        ANL     A,#0xf8
        MOV     ?V0,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ANL     A,#0x7
        ORL     A,?V0
        MOV     ?V1,A
        LCALL   ?Subroutine44 & 0xFFFF
// 2763     pNDRsp->nodeDesc.APSFlags = *msg++ & 0x07;
??CrossCallReturnLabel_70:
        ANL     A,#0x7
        MOV     ?V0,A
        INC     DPTR
        INC     R0
        MOV     R1,DPH
        MOV     A,#-0x8
        ANL     A,?V1
        ORL     A,?V0
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine44 & 0xFFFF
// 2764     pNDRsp->nodeDesc.CapabilityFlags = *msg++;
??CrossCallReturnLabel_71:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine27 & 0xFFFF
// 2765     pNDRsp->nodeDesc.ManufacturerCode[0] = *msg++;
??CrossCallReturnLabel_409:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine24 & 0xFFFF
// 2766     pNDRsp->nodeDesc.ManufacturerCode[1] = *msg++;
??CrossCallReturnLabel_33:
        LCALL   ?Subroutine24 & 0xFFFF
// 2767     pNDRsp->nodeDesc.MaxBufferSize = *msg++;
??CrossCallReturnLabel_34:
        INC     DPTR
        LCALL   ?Subroutine20 & 0xFFFF
// 2768     pNDRsp->nodeDesc.MaxInTransferSize[0] = *msg++;
??CrossCallReturnLabel_23:
        LCALL   ?Subroutine20 & 0xFFFF
// 2769     pNDRsp->nodeDesc.MaxInTransferSize[1] = *msg++;
??CrossCallReturnLabel_24:
        LCALL   ?Subroutine27 & 0xFFFF
// 2770     pNDRsp->nodeDesc.ServerMask = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_410:
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_191:
        ADDC    A,R5
        MOV     DPH,A
        MOV     A,?V0
        LCALL   ?Subroutine50 & 0xFFFF
// 2771     msg += 2;
??CrossCallReturnLabel_82:
        JNC     ??ZDO_ParseNodeDescRsp_2
        INC     R1
// 2772     pNDRsp->nodeDesc.MaxOutTransferSize[0] = *msg++;
??ZDO_ParseNodeDescRsp_2:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        ADD     A,#0xd
        MOV     DPL,A
        CLR     A
        ADDC    A,R5
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ??Subroutine194_0 & 0xFFFF
// 2773     pNDRsp->nodeDesc.MaxOutTransferSize[1] = *msg++;
??CrossCallReturnLabel_411:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        LCALL   ??Subroutine193_0 & 0xFFFF
??CrossCallReturnLabel_404:
        ADDC    A,R5
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine47 & 0xFFFF
// 2774     pNDRsp->nodeDesc.DescriptorCapability = *msg;
??CrossCallReturnLabel_79:
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        LCALL   ?Subroutine104 & 0xFFFF
// 2775   }
??CrossCallReturnLabel_173:
        ADDC    A,R5
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2776 }
??ZDO_ParseNodeDescRsp_0:
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock636

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine139:
          CFI Block cfiCond637 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond638 Using cfiCommon0
          CFI (cfiCond638) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond638) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_99
          CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond638) CFA_SP SP+-4
          CFI (cfiCond638) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function ZDO_ProcessUserDescSet
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_407
          CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond639) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond639) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond639) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond639) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond639) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond639) CFA_SP SP+-2
          CFI (cfiCond639) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker640 Using cfiCommon1
          CFI (cfiPicker640) NoFunction
          CFI (cfiPicker640) Picker
        MOV     A,R6
          CFI EndBlock cfiCond637
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiPicker640
        REQUIRE ??Subroutine193_0
        ; // Fall through to label ??Subroutine193_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine193_0:
          CFI Block cfiCond641 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_406, ??CrossCallReturnLabel_337
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond642 Using cfiCommon0
          CFI (cfiCond642) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond642) Conditional ??CrossCallReturnLabel_406, ??CrossCallReturnLabel_338
          CFI (cfiCond642) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond642) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond642) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond642) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond642) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond642) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond642) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond642) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond642) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond642) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond642) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond642) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond642) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond642) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond642) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond642) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond642) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond642) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond642) CFA_SP SP+-4
          CFI (cfiCond642) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond643 Using cfiCommon0
          CFI (cfiCond643) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond643) Conditional ??CrossCallReturnLabel_406, ??CrossCallReturnLabel_339
          CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond643) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond643) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond643) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond643) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond643) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond643) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond643) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond643) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond643) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond643) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond643) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond643) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond643) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond643) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond643) CFA_SP SP+-4
          CFI (cfiCond643) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_54
          CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond644) CFA_SP SP+-4
          CFI (cfiCond644) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond645 Using cfiCommon0
          CFI (cfiCond645) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond645) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_55
          CFI (cfiCond645) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond645) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond645) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond645) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond645) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond645) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond645) CFA_SP SP+-4
          CFI (cfiCond645) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond646 Using cfiCommon0
          CFI (cfiCond646) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond646) Conditional ??CrossCallReturnLabel_404
          CFI (cfiCond646) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond646) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond646) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond646) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond646) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond646) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_98
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+-4
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_99
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+-4
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond649 Using cfiCommon0
          CFI (cfiCond649) Function ZDO_ProcessUserDescSet
          CFI (cfiCond649) Conditional ??CrossCallReturnLabel_407
          CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond649) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond649) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond649) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond649) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond649) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond649) CFA_SP SP+-2
          CFI (cfiCond649) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker650 Using cfiCommon1
          CFI (cfiPicker650) NoFunction
          CFI (cfiPicker650) Picker
        ADD     A,#0xe
        MOV     DPL,A
        CLR     A
        RET
          CFI EndBlock cfiCond641
          CFI EndBlock cfiCond642
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiCond645
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiCond649
          CFI EndBlock cfiPicker650

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine116:
          CFI Block cfiCond651 Using cfiCommon0
          CFI Function ZDO_ProcessEndDeviceTimeoutReq
          CFI Conditional ??CrossCallReturnLabel_189
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function ZDO_ParseAddrRsp
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond652) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond652) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+-2
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond653) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond653) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond653) CFA_SP SP+-2
          CFI (cfiCond653) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond654) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond654) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond654) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond654) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond654) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond654) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond654) CFA_SP SP+-2
          CFI (cfiCond654) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker655 Using cfiCommon1
          CFI (cfiPicker655) NoFunction
          CFI (cfiPicker655) Picker
        ADD     A,#0xb
        MOV     DPL,A
        CLR     A
        RET
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiPicker655

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond656 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_83
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond657 Using cfiCommon0
          CFI (cfiCond657) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond657) Conditional ??CrossCallReturnLabel_82
          CFI (cfiCond657) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond657) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond657) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond657) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond657) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond657) CFA_SP SP+-2
          CFI (cfiCond657) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker658 Using cfiCommon1
          CFI (cfiPicker658) NoFunction
          CFI (cfiPicker658) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        RET
          CFI EndBlock cfiCond656
          CFI EndBlock cfiCond657
          CFI EndBlock cfiPicker658

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond659 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_77
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+-2
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond661 Using cfiCommon0
          CFI (cfiCond661) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond661) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond661) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond661) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond661) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond661) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond661) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond661) CFA_SP SP+-2
          CFI (cfiCond661) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker662 Using cfiCommon1
          CFI (cfiPicker662) NoFunction
          CFI (cfiPicker662) Picker
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_412:
        RET
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiCond661
          CFI EndBlock cfiPicker662

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine126:
          CFI Block cfiCond663 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_412, ??CrossCallReturnLabel_77
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond664 Using cfiCommon0
          CFI (cfiCond664) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond664) Conditional ??CrossCallReturnLabel_412, ??CrossCallReturnLabel_78
          CFI (cfiCond664) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond664) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond664) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond664) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond664) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond664) CFA_SP SP+-4
          CFI (cfiCond664) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond665 Using cfiCommon0
          CFI (cfiCond665) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond665) Conditional ??CrossCallReturnLabel_412, ??CrossCallReturnLabel_79
          CFI (cfiCond665) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond665) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond665) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond665) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond665) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond665) CFA_SP SP+-4
          CFI (cfiCond665) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond666 Using cfiCommon0
          CFI (cfiCond666) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond666) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_409
          CFI (cfiCond666) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond666) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond666) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond666) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond666) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond666) CFA_SP SP+-4
          CFI (cfiCond666) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond667 Using cfiCommon0
          CFI (cfiCond667) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond667) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_410
          CFI (cfiCond667) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond667) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond667) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond667) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond667) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond667) CFA_SP SP+-4
          CFI (cfiCond667) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond668 Using cfiCommon0
          CFI (cfiCond668) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond668) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_411
          CFI (cfiCond668) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond668) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond668) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond668) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond668) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond668) CFA_SP SP+-4
          CFI (cfiCond668) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond669 Using cfiCommon0
          CFI (cfiCond669) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond669) Conditional ??CrossCallReturnLabel_413, ??CrossCallReturnLabel_9
          CFI (cfiCond669) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond669) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond669) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond669) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond669) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond669) CFA_SP SP+-4
          CFI (cfiCond669) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond670 Using cfiCommon0
          CFI (cfiCond670) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond670) Conditional ??CrossCallReturnLabel_413, ??CrossCallReturnLabel_10
          CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond670) CFA_SP SP+-4
          CFI (cfiCond670) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker671 Using cfiCommon1
          CFI (cfiPicker671) NoFunction
          CFI (cfiPicker671) Picker
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_415:
        INC     DPTR
        RET
          CFI EndBlock cfiCond663
          CFI EndBlock cfiCond664
          CFI EndBlock cfiCond665
          CFI EndBlock cfiCond666
          CFI EndBlock cfiCond667
          CFI EndBlock cfiCond668
          CFI EndBlock cfiCond669
          CFI EndBlock cfiCond670
          CFI EndBlock cfiPicker671

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond672 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_68
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond673 Using cfiCommon0
          CFI (cfiCond673) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond673) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond673) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond673) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond673) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond673) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond673) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond673) CFA_SP SP+-2
          CFI (cfiCond673) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond674 Using cfiCommon0
          CFI (cfiCond674) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond674) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond674) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond674) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond674) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond674) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond674) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond674) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond674) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond674) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond674) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond674) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond674) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond674) CFA_SP SP+-2
          CFI (cfiCond674) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond675 Using cfiCommon0
          CFI (cfiCond675) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond675) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond675) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond675) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond675) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond675) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond675) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond675) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond675) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond675) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond675) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond675) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond675) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond675) CFA_SP SP+-2
          CFI (cfiCond675) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker676 Using cfiCommon1
          CFI (cfiPicker676) NoFunction
          CFI (cfiPicker676) Picker
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_416:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond672
          CFI EndBlock cfiCond673
          CFI EndBlock cfiCond674
          CFI EndBlock cfiCond675
          CFI EndBlock cfiPicker676

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond677 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_409
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond678 Using cfiCommon0
          CFI (cfiCond678) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond678) Conditional ??CrossCallReturnLabel_410
          CFI (cfiCond678) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond678) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond678) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond678) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond678) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond678) CFA_SP SP+-2
          CFI (cfiCond678) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker679 Using cfiCommon1
          CFI (cfiPicker679) NoFunction
          CFI (cfiPicker679) Picker
        INC     DPTR
          CFI EndBlock cfiCond677
          CFI EndBlock cfiCond678
          CFI EndBlock cfiPicker679
        REQUIRE ??Subroutine194_0
        ; // Fall through to label ??Subroutine194_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine194_0:
          CFI Block cfiCond680 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_411
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond681 Using cfiCommon0
          CFI (cfiCond681) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond681) Conditional ??CrossCallReturnLabel_409
          CFI (cfiCond681) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond681) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond681) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond681) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond681) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond681) CFA_SP SP+-2
          CFI (cfiCond681) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond682 Using cfiCommon0
          CFI (cfiCond682) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond682) Conditional ??CrossCallReturnLabel_410
          CFI (cfiCond682) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond682) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond682) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond682) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond682) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond682) CFA_SP SP+-2
          CFI (cfiCond682) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker683 Using cfiCommon1
          CFI (cfiPicker683) NoFunction
          CFI (cfiPicker683) Picker
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_414:
        INC     R0
        MOV     R1,DPH
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond680
          CFI EndBlock cfiCond681
          CFI EndBlock cfiCond682
          CFI EndBlock cfiPicker683

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond684 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond685 Using cfiCommon0
          CFI (cfiCond685) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond685) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond685) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond685) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond685) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond685) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond685) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond685) CFA_SP SP+-2
          CFI (cfiCond685) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker686 Using cfiCommon1
          CFI (cfiPicker686) NoFunction
          CFI (cfiPicker686) Picker
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_200:
        RET
          CFI EndBlock cfiCond684
          CFI EndBlock cfiCond685
          CFI EndBlock cfiPicker686

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine120:
          CFI Block cfiCond687 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond688 Using cfiCommon0
          CFI (cfiCond688) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond688) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_34
          CFI (cfiCond688) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond688) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond688) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond688) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond688) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond688) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond688) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond688) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond688) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond688) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond688) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond688) CFA_SP SP+-4
          CFI (cfiCond688) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_23
          CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond689) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond689) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond689) CFA_SP SP+-4
          CFI (cfiCond689) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond690 Using cfiCommon0
          CFI (cfiCond690) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond690) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_24
          CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond690) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond690) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond690) CFA_SP SP+-4
          CFI (cfiCond690) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker691 Using cfiCommon1
          CFI (cfiPicker691) NoFunction
          CFI (cfiPicker691) Picker
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_418:
        INC     DPTR
        INC     R0
        MOV     R1,DPH
        MOVX    A,@DPTR
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond687
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiCond690
          CFI EndBlock cfiPicker691

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine151:
          CFI Block cfiCond692 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_412, ??CrossCallReturnLabel_77
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond693 Using cfiCommon0
          CFI (cfiCond693) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond693) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_412, ??CrossCallReturnLabel_78
          CFI (cfiCond693) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond693) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond693) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond693) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond693) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond693) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond693) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond693) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond693) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond693) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond693) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond693) CFA_SP SP+-6
          CFI (cfiCond693) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond694 Using cfiCommon0
          CFI (cfiCond694) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond694) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_412, ??CrossCallReturnLabel_79
          CFI (cfiCond694) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond694) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond694) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond694) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond694) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond694) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond694) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond694) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond694) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond694) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond694) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond694) CFA_SP SP+-6
          CFI (cfiCond694) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond695 Using cfiCommon0
          CFI (cfiCond695) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond695) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_409
          CFI (cfiCond695) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond695) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond695) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond695) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond695) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond695) CFA_SP SP+-6
          CFI (cfiCond695) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond696 Using cfiCommon0
          CFI (cfiCond696) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond696) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_410
          CFI (cfiCond696) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond696) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond696) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond696) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond696) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond696) CFA_SP SP+-6
          CFI (cfiCond696) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond697 Using cfiCommon0
          CFI (cfiCond697) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond697) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_411
          CFI (cfiCond697) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond697) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond697) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond697) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond697) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond697) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond697) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond697) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond697) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond697) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond697) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond697) CFA_SP SP+-6
          CFI (cfiCond697) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond698 Using cfiCommon0
          CFI (cfiCond698) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond698) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_413, ??CrossCallReturnLabel_9
          CFI (cfiCond698) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond698) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond698) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond698) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond698) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond698) CFA_SP SP+-6
          CFI (cfiCond698) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_413, ??CrossCallReturnLabel_10
          CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond699) CFA_SP SP+-6
          CFI (cfiCond699) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond700 Using cfiCommon0
          CFI (cfiCond700) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond700) Conditional ??CrossCallReturnLabel_416, ??CrossCallReturnLabel_68
          CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond700) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond700) CFA_SP SP+-4
          CFI (cfiCond700) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond701 Using cfiCommon0
          CFI (cfiCond701) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond701) Conditional ??CrossCallReturnLabel_416, ??CrossCallReturnLabel_69
          CFI (cfiCond701) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond701) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond701) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond701) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond701) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond701) CFA_SP SP+-4
          CFI (cfiCond701) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond702 Using cfiCommon0
          CFI (cfiCond702) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond702) Conditional ??CrossCallReturnLabel_416, ??CrossCallReturnLabel_70
          CFI (cfiCond702) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond702) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond702) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond702) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond702) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond702) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond702) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond702) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond702) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond702) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond702) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond702) CFA_SP SP+-4
          CFI (cfiCond702) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond703 Using cfiCommon0
          CFI (cfiCond703) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond703) Conditional ??CrossCallReturnLabel_416, ??CrossCallReturnLabel_71
          CFI (cfiCond703) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond703) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond703) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond703) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond703) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond703) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond703) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond703) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond703) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond703) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond703) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond703) CFA_SP SP+-4
          CFI (cfiCond703) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond704 Using cfiCommon0
          CFI (cfiCond704) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond704) Conditional ??CrossCallReturnLabel_418, ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_33
          CFI (cfiCond704) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond704) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond704) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond704) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond704) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond704) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond704) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond704) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond704) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond704) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond704) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond704) CFA_SP SP+-6
          CFI (cfiCond704) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond705 Using cfiCommon0
          CFI (cfiCond705) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond705) Conditional ??CrossCallReturnLabel_418, ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_34
          CFI (cfiCond705) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond705) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond705) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond705) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond705) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond705) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond705) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond705) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond705) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond705) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond705) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond705) CFA_SP SP+-6
          CFI (cfiCond705) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond706 Using cfiCommon0
          CFI (cfiCond706) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond706) Conditional ??CrossCallReturnLabel_418, ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_23
          CFI (cfiCond706) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond706) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond706) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond706) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond706) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond706) CFA_SP SP+-6
          CFI (cfiCond706) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_418, ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_24
          CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond707) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond707) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond707) CFA_SP SP+-6
          CFI (cfiCond707) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_417, ??CrossCallReturnLabel_66
          CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond708) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond708) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond708) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond708) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond708) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond708) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond708) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond708) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond708) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond708) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond708) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond708) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond708) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond708) CFA_SP SP+-4
          CFI (cfiCond708) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond709 Using cfiCommon0
          CFI (cfiCond709) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond709) Conditional ??CrossCallReturnLabel_417, ??CrossCallReturnLabel_67
          CFI (cfiCond709) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond709) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond709) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond709) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond709) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond709) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond709) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond709) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond709) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond709) CFA_SP SP+-4
          CFI (cfiCond709) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker710 Using cfiCommon1
          CFI (cfiPicker710) NoFunction
          CFI (cfiPicker710) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI EndBlock cfiCond692
          CFI EndBlock cfiCond693
          CFI EndBlock cfiCond694
          CFI EndBlock cfiCond695
          CFI EndBlock cfiCond696
          CFI EndBlock cfiCond697
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiCond700
          CFI EndBlock cfiCond701
          CFI EndBlock cfiCond702
          CFI EndBlock cfiCond703
          CFI EndBlock cfiCond704
          CFI EndBlock cfiCond705
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiCond709
          CFI EndBlock cfiPicker710

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond711 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_23
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond712 Using cfiCommon0
          CFI (cfiCond712) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond712) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond712) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond712) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond712) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond712) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond712) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond712) CFA_SP SP+-2
          CFI (cfiCond712) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker713 Using cfiCommon1
          CFI (cfiPicker713) NoFunction
          CFI (cfiPicker713) Picker
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_201:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond711
          CFI EndBlock cfiCond712
          CFI EndBlock cfiPicker713
// 2777 
// 2778 /*********************************************************************
// 2779  * @fn          ZDO_ParsePowerDescRsp
// 2780  *
// 2781  * @brief       This function parses the Power_Desc_rsp message.
// 2782  *
// 2783  * @param       inMsg  - incoming message
// 2784  * @param       pNPRsp - place to parse the message into
// 2785  *
// 2786  * @return      none
// 2787  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2788 void ZDO_ParsePowerDescRsp( zdoIncomingMsg_t *inMsg, ZDO_PowerRsp_t *pNPRsp )
ZDO_ParsePowerDescRsp:
          CFI Block cfiBlock714 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
        CODE
// 2789 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2790   uint8 *msg;
// 2791 
// 2792   msg = inMsg->asdu;
        LCALL   ??Subroutine187_0 & 0xFFFF
??CrossCallReturnLabel_379:
        LCALL   ?Subroutine77 & 0xFFFF
// 2793   pNPRsp->status = *msg++;
??CrossCallReturnLabel_126:
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_136:
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_210:
        MOV     R2,DPL
        MOV     R3,DPH
// 2794   pNPRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ??Subroutine158_0 & 0xFFFF
??CrossCallReturnLabel_249:
        MOV     R1,A
        MOV     A,R6
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        LCALL   ??Subroutine163_0 & 0xFFFF
// 2795 
// 2796   if ( pNPRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_253:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        JNZ     ??CrossCallReturnLabel_262
// 2797   {
// 2798     msg += 2;
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        JNC     ??ZDO_ParsePowerDescRsp_0
        INC     R3
// 2799     pNPRsp->pwrDesc.AvailablePowerSources = *msg >> 4;
??ZDO_ParsePowerDescRsp_0:
        MOV     A,R4
        ADD     A,#0x3
        CLR     A
        ADDC    A,R5
        INC     R4
        INC     R4
        INC     R4
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        MOV     ?V0,A
        MOV     ?V1,#0x0
        MOV     A,#0x4
        MOV     R0,#?V0
        LCALL   ?S_SHL
        MOV     A,R6
        ORL     A,?V0
        MOV     R6,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine34 & 0xFFFF
// 2800     pNPRsp->pwrDesc.PowerMode = *msg++ & 0x0F;
??CrossCallReturnLabel_48:
        INC     DPTR
        INC     R2
        MOV     R3,DPH
        MOV     A,R6
        ANL     A,#0xf0
        ORL     A,R0
        MOV     R0,A
        MOV     A,R7
        LCALL   ?Subroutine42 & 0xFFFF
// 2801     pNPRsp->pwrDesc.CurrentPowerSourceLevel = *msg >> 4;
??CrossCallReturnLabel_261:
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        ANL     A,#0xf
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        MOV     ?V0,A
        MOV     A,#0xc
        MOV     R0,#?V0
        LCALL   ?S_SHL
        MOV     A,R7
        ORL     A,?V1
        MOV     R7,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOV     A,R6
        LCALL   ?Subroutine34 & 0xFFFF
// 2802     pNPRsp->pwrDesc.CurrentPowerSource = *msg++ & 0x0F;
// 2803   }
??CrossCallReturnLabel_49:
        MOV     A,R7
        ANL     A,#0xf0
        MOV     R7,A
        MOV     A,R0
        MOV     R1,A
        MOV     A,R6
        MOV     R0,A
        MOV     A,R7
        ORL     A,R1
        LCALL   ?Subroutine42 & 0xFFFF
// 2804 }
??CrossCallReturnLabel_262:
        LJMP    ??Subroutine161_0 & 0xFFFF
          CFI EndBlock cfiBlock714

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond715 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_127
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond716 Using cfiCommon0
          CFI (cfiCond716) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond716) Conditional ??CrossCallReturnLabel_126
          CFI (cfiCond716) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond716) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond716) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond716) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond716) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond716) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond716) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond716) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond716) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond716) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond716) CFA_SP SP+-2
          CFI (cfiCond716) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker717 Using cfiCommon1
          CFI (cfiPicker717) NoFunction
          CFI (cfiPicker717) Picker
        MOV     DPH,A
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_482:
        MOV     R3,A
        ; Setup parameters for call to function NLME_DirectJoinRequest
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond715
          CFI EndBlock cfiCond716
          CFI EndBlock cfiPicker717

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond718 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_48
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond719 Using cfiCommon0
          CFI (cfiCond719) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond719) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond719) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond719) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond719) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond719) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond719) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond719) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond719) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond719) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond719) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond719) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond719) CFA_SP SP+-2
          CFI (cfiCond719) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker720 Using cfiCommon1
          CFI (cfiPicker720) NoFunction
          CFI (cfiPicker720) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     R0,A
        RET
          CFI EndBlock cfiCond718
          CFI EndBlock cfiCond719
          CFI EndBlock cfiPicker720
// 2805 
// 2806 /*********************************************************************
// 2807  * @fn          ZDO_ParseSimpleDescRsp
// 2808  *
// 2809  * @brief       This function parse the Simple_Desc_rsp message.
// 2810  *
// 2811  *   NOTE: The pAppInClusterList and pAppOutClusterList fields
// 2812  *         in the SimpleDescriptionFormat_t structure are allocated
// 2813  *         and the calling function needs to free [osal_msg_free()]
// 2814  *         these buffers.
// 2815  *
// 2816  * @param       inMsg  - incoming message
// 2817  * @param       pSimpleDescRsp - place to parse the message into
// 2818  *
// 2819  * @return      none
// 2820  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2821 void ZDO_ParseSimpleDescRsp( zdoIncomingMsg_t *inMsg, ZDO_SimpleDescRsp_t *pSimpleDescRsp )
ZDO_ParseSimpleDescRsp:
          CFI Block cfiBlock721 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescRsp
        CODE
// 2822 {
        FUNCALL ZDO_ParseSimpleDescRsp, ZDO_ParseSimpleDescBuf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2823   uint8 *msg;
// 2824 
// 2825   msg = inMsg->asdu;
        LCALL   ?Subroutine14 & 0xFFFF
// 2826   pSimpleDescRsp->status = *msg++;
// 2827   pSimpleDescRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 2828   msg += sizeof ( uint16 );
// 2829   msg++; // Skip past the length field.
// 2830 
// 2831   if ( pSimpleDescRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_10:
        JNZ     ??ZDO_ParseSimpleDescRsp_0
// 2832   {
// 2833     ZDO_ParseSimpleDescBuf( msg, &(pSimpleDescRsp->simpleDesc) );
        ; Setup parameters for call to function ZDO_ParseSimpleDescBuf
        MOV     A,R4
        ADD     A,#0x3
        MOV     R4,A
        JNC     ??ZDO_ParseSimpleDescRsp_1
        INC     R5
??ZDO_ParseSimpleDescRsp_1:
        MOV     A,R0
        ADD     A,#0x3
        MOV     R2,A
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        LCALL   ??ZDO_ParseSimpleDescBuf?relay; Banked call to: ZDO_ParseSimpleDescBuf
// 2834   }
// 2835 }
??ZDO_ParseSimpleDescRsp_0:
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock721

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond722 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_9
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond723 Using cfiCommon0
          CFI (cfiCond723) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond723) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond723) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond723) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond723) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond723) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond723) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond723) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond723) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond723) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond723) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond723) CFA_SP SP+-2
          CFI (cfiCond723) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker724 Using cfiCommon1
          CFI (cfiPicker724) NoFunction
          CFI (cfiPicker724) Picker
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_381:
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_333:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_413:
        MOV     R0,DPL
        MOV     R1,DPH
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R6
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond722
          CFI EndBlock cfiCond723
          CFI EndBlock cfiPicker724
// 2836 
// 2837 /*********************************************************************
// 2838  * @fn          ZDO_ParseEPListRsp
// 2839  *
// 2840  * @brief       This parse the Active_EP_rsp or Match_Desc_rsp message.
// 2841  *
// 2842  * @param       inMsg  - incoming message
// 2843  *
// 2844  * @return      none
// 2845  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2846 ZDO_ActiveEndpointRsp_t *ZDO_ParseEPListRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseEPListRsp:
          CFI Block cfiBlock725 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
        CODE
// 2847 {
        FUNCALL ZDO_ParseEPListRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEPListRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
// 2848   ZDO_ActiveEndpointRsp_t *pRsp;
// 2849   uint8 *msg;
// 2850   uint8 Status;
// 2851   uint8 cnt;
// 2852 
// 2853   msg = inMsg->asdu;
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_145:
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
// 2854   Status = *msg++;
        MOV     DPL,?V0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V3,A
        INC     DPTR
        MOV     ?V0,DPL
        MOV     ?V1,DPH
// 2855   cnt = msg[2];
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V2,A
// 2856 
// 2857   pRsp = (ZDO_ActiveEndpointRsp_t *)osal_mem_alloc( sizeof(  ZDO_ActiveEndpointRsp_t ) + cnt );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_445:
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R6,?V4
        MOV     R7,?V5
// 2858   if ( pRsp )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ParseEPListRsp_0
// 2859   {
// 2860     pRsp->status = Status;
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,?V3
        MOVX    @DPTR,A
// 2861     pRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     R2,A
        LCALL   ?Subroutine31 & 0xFFFF
// 2862     msg += sizeof( uint16 );
// 2863     pRsp->cnt = cnt;
// 2864     msg++; // pass cnt
// 2865     osal_memcpy( pRsp->epList, msg, cnt );
??CrossCallReturnLabel_41:
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V4,R1
        MOV     ?V5,R2
        MOV     ?V6,R0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ?Subroutine146 & 0xFFFF
// 2866   }
??CrossCallReturnLabel_449:
        ADDC    A,R7
        MOV     R3,A
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 2867 
// 2868   return ( pRsp );
??ZDO_ParseEPListRsp_0:
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock725
// 2869 }
// 2870 
// 2871 /*********************************************************************
// 2872  * @fn          ZDO_ParseServerDiscRsp
// 2873  *
// 2874  * @brief       Parse the Server_Discovery_rsp message.
// 2875  *
// 2876  * @param       inMsg - incoming message.
// 2877  * @param       pRsp - place to put the parsed information.
// 2878  *
// 2879  * @return      none
// 2880  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2881 void ZDO_ParseServerDiscRsp( zdoIncomingMsg_t *inMsg, ZDO_ServerDiscRsp_t *pRsp )
ZDO_ParseServerDiscRsp:
          CFI Block cfiBlock726 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
        CODE
// 2882 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2883   pRsp->status = inMsg->asdu[0];
        MOV     A,R2
        ADD     A,#0x13
        MOV     R0,A
        CLR     A
        ADDC    A,R3
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_480:
        MOV     DPH,A
        MOV     DPL,R2
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_137:
        LCALL   ?Subroutine43 & 0xFFFF
// 2884   pRsp->serverMask = BUILD_UINT16( inMsg->asdu[1], inMsg->asdu[2] );
??CrossCallReturnLabel_67:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_467:
        INC     DPTR
        LCALL   ??Subroutine163_0 & 0xFFFF
// 2885 }
??CrossCallReturnLabel_254:
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock726

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond727 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_135
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond728 Using cfiCommon0
          CFI (cfiCond728) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond728) Conditional ??CrossCallReturnLabel_136
          CFI (cfiCond728) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond728) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond728) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond728) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond728) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond728) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond728) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond728) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond728) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond728) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond728) CFA_SP SP+-2
          CFI (cfiCond728) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond729 Using cfiCommon0
          CFI (cfiCond729) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond729) Conditional ??CrossCallReturnLabel_137
          CFI (cfiCond729) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond729) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond729) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond729) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond729) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond729) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond729) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond729) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond729) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond729) CFA_SP SP+-2
          CFI (cfiCond729) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond730 Using cfiCommon0
          CFI (cfiCond730) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond730) Conditional ??CrossCallReturnLabel_138
          CFI (cfiCond730) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond730) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond730) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond730) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond730) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond730) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond730) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond730) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond730) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond730) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond730) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond730) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond730) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond730) CFA_SP SP+-2
          CFI (cfiCond730) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker731 Using cfiCommon1
          CFI (cfiPicker731) NoFunction
          CFI (cfiPicker731) Picker
        MOVX    A,@DPTR
        MOV     DPL,R4
        MOV     DPH,R5
        RET
          CFI EndBlock cfiCond727
          CFI EndBlock cfiCond728
          CFI EndBlock cfiCond729
          CFI EndBlock cfiCond730
          CFI EndBlock cfiPicker731

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond732 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_66
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond733 Using cfiCommon0
          CFI (cfiCond733) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond733) Conditional ??CrossCallReturnLabel_67
          CFI (cfiCond733) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond733) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond733) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond733) CFA_SP SP+-2
          CFI (cfiCond733) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker734 Using cfiCommon1
          CFI (cfiPicker734) NoFunction
          CFI (cfiPicker734) Picker
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_417:
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_353:
        RET
          CFI EndBlock cfiCond732
          CFI EndBlock cfiCond733
          CFI EndBlock cfiPicker734

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine153:
          CFI Block cfiCond735 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond736 Using cfiCommon0
          CFI (cfiCond736) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond736) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_38
          CFI (cfiCond736) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond736) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond736) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond736) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond736) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond736) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond736) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond736) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond736) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond736) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond736) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond736) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond736) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond736) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond736) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond736) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond736) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond736) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond736) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond736) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond736) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond736) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond736) CFA_SP SP+-4
          CFI (cfiCond736) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond737 Using cfiCommon0
          CFI (cfiCond737) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond737) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_94
          CFI (cfiCond737) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond737) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond737) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond737) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond737) CFA_SP SP+-6
          CFI (cfiCond737) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond738 Using cfiCommon0
          CFI (cfiCond738) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond738) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_95
          CFI (cfiCond738) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond738) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond738) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond738) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond738) CFA_SP SP+-6
          CFI (cfiCond738) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_100
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond739) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_SP SP+-6
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond740 Using cfiCommon0
          CFI (cfiCond740) Function ZDO_ProcessUserDescReq
          CFI (cfiCond740) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_101
          CFI (cfiCond740) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond740) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond740) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond740) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond740) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond740) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond740) CFA_SP SP+-6
          CFI (cfiCond740) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond741 Using cfiCommon0
          CFI (cfiCond741) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond741) Conditional ??CrossCallReturnLabel_356, ??CrossCallReturnLabel_350
          CFI (cfiCond741) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond741) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond741) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond741) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond741) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond741) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond741) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond741) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond741) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond741) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond741) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond741) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond741) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond741) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond741) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond741) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond741) CFA_SP SP+-4
          CFI (cfiCond741) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond742 Using cfiCommon0
          CFI (cfiCond742) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond742) Conditional ??CrossCallReturnLabel_356, ??CrossCallReturnLabel_351
          CFI (cfiCond742) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond742) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond742) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond742) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond742) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond742) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond742) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond742) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond742) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond742) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond742) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond742) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond742) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond742) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond742) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond742) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond742) CFA_SP SP+-4
          CFI (cfiCond742) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function ZDO_AnyClusterMatches
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_356, ??CrossCallReturnLabel_340
          CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond743) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond743) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond743) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond743) CFA_SP SP+-4
          CFI (cfiCond743) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond744 Using cfiCommon0
          CFI (cfiCond744) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond744) Conditional ??CrossCallReturnLabel_356, ??CrossCallReturnLabel_341
          CFI (cfiCond744) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond744) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond744) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond744) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond744) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond744) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond744) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond744) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond744) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond744) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond744) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond744) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond744) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond744) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond744) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond744) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond744) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond744) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond744) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond744) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond744) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond744) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond744) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond744) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond744) CFA_SP SP+-4
          CFI (cfiCond744) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond745 Using cfiCommon0
          CFI (cfiCond745) Function ZDO_ProcessEndDeviceTimeoutReq
          CFI (cfiCond745) Conditional ??CrossCallReturnLabel_356, ??CrossCallReturnLabel_342
          CFI (cfiCond745) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond745) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond745) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond745) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond745) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond745) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond745) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond745) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond745) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond745) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond745) CFA_SP SP+-4
          CFI (cfiCond745) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_356, ??CrossCallReturnLabel_343
          CFI (cfiCond746) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond746) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond746) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond746) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond746) CFA_SP SP+-4
          CFI (cfiCond746) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_356, ??CrossCallReturnLabel_344
          CFI (cfiCond747) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond747) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond747) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond747) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond747) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond747) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond747) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond747) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond747) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond747) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond747) CFA_SP SP+-4
          CFI (cfiCond747) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_356, ??CrossCallReturnLabel_345
          CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond748) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond748) CFA_SP SP+-4
          CFI (cfiCond748) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_356, ??CrossCallReturnLabel_346
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_SP SP+-4
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond750 Using cfiCommon0
          CFI (cfiCond750) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond750) Conditional ??CrossCallReturnLabel_356, ??CrossCallReturnLabel_347
          CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond750) CFA_SP SP+-4
          CFI (cfiCond750) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond751 Using cfiCommon0
          CFI (cfiCond751) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond751) Conditional ??CrossCallReturnLabel_356, ??CrossCallReturnLabel_348
          CFI (cfiCond751) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond751) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond751) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond751) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond751) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond751) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond751) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond751) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond751) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond751) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond751) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond751) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond751) CFA_SP SP+-4
          CFI (cfiCond751) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond752 Using cfiCommon0
          CFI (cfiCond752) Function ZDO_ParseUserDescRsp
          CFI (cfiCond752) Conditional ??CrossCallReturnLabel_356, ??CrossCallReturnLabel_349
          CFI (cfiCond752) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond752) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond752) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond752) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond752) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond752) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond752) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond752) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond752) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond752) CFA_SP SP+-4
          CFI (cfiCond752) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond753 Using cfiCommon0
          CFI (cfiCond753) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond753) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_66
          CFI (cfiCond753) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond753) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond753) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond753) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond753) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond753) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond753) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond753) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond753) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond753) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond753) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond753) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond753) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond753) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond753) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond753) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond753) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond753) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond753) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond753) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond753) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond753) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond753) CFA_SP SP+-4
          CFI (cfiCond753) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond754 Using cfiCommon0
          CFI (cfiCond754) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond754) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_67
          CFI (cfiCond754) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond754) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond754) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond754) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond754) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond754) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond754) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond754) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond754) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond754) CFA_SP SP+-4
          CFI (cfiCond754) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond755 Using cfiCommon0
          CFI (cfiCond755) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond755) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_296
          CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond755) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond755) CFA_SP SP+-6
          CFI (cfiCond755) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond756 Using cfiCommon0
          CFI (cfiCond756) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond756) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_297
          CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond756) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond756) CFA_SP SP+-6
          CFI (cfiCond756) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond757 Using cfiCommon0
          CFI (cfiCond757) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond757) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_285
          CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond757) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond757) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond757) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond757) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond757) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond757) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond757) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond757) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond757) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond757) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond757) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond757) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond757) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond757) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond757) CFA_SP SP+-6
          CFI (cfiCond757) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond758 Using cfiCommon0
          CFI (cfiCond758) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond758) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_286
          CFI (cfiCond758) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond758) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond758) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond758) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond758) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond758) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond758) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond758) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond758) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond758) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond758) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond758) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond758) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond758) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond758) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond758) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond758) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond758) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond758) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond758) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond758) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond758) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond758) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond758) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond758) CFA_SP SP+-6
          CFI (cfiCond758) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond759 Using cfiCommon0
          CFI (cfiCond759) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond759) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_287
          CFI (cfiCond759) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond759) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond759) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond759) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond759) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond759) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond759) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond759) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond759) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond759) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond759) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond759) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond759) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond759) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond759) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond759) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond759) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond759) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond759) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond759) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond759) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond759) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond759) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond759) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond759) CFA_SP SP+-6
          CFI (cfiCond759) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_288
          CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond760) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond760) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond760) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond760) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond760) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond760) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond760) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond760) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond760) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond760) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond760) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond760) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond760) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond760) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond760) CFA_SP SP+-6
          CFI (cfiCond760) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond761 Using cfiCommon0
          CFI (cfiCond761) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond761) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_289
          CFI (cfiCond761) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond761) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond761) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond761) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond761) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond761) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond761) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond761) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond761) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond761) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond761) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond761) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond761) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond761) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond761) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond761) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond761) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond761) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond761) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond761) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond761) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond761) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond761) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond761) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond761) CFA_SP SP+-6
          CFI (cfiCond761) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond762 Using cfiCommon0
          CFI (cfiCond762) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond762) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_290
          CFI (cfiCond762) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond762) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond762) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond762) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond762) CFA_SP SP+-6
          CFI (cfiCond762) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_291
          CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond763) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond763) CFA_SP SP+-6
          CFI (cfiCond763) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond764 Using cfiCommon0
          CFI (cfiCond764) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond764) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_292
          CFI (cfiCond764) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond764) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond764) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond764) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond764) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond764) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond764) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond764) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond764) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond764) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond764) CFA_SP SP+-6
          CFI (cfiCond764) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond765 Using cfiCommon0
          CFI (cfiCond765) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond765) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_293
          CFI (cfiCond765) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond765) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond765) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond765) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond765) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond765) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond765) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond765) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond765) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond765) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond765) CFA_SP SP+-6
          CFI (cfiCond765) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond766 Using cfiCommon0
          CFI (cfiCond766) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond766) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_294
          CFI (cfiCond766) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond766) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond766) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond766) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond766) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond766) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond766) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond766) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond766) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond766) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond766) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond766) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond766) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond766) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond766) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond766) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond766) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond766) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond766) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond766) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond766) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond766) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond766) CFA_SP SP+-6
          CFI (cfiCond766) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond767 Using cfiCommon0
          CFI (cfiCond767) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond767) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_295
          CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond767) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond767) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond767) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond767) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond767) CFA_SP SP+-6
          CFI (cfiCond767) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond768 Using cfiCommon0
          CFI (cfiCond768) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond768) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_0
          CFI (cfiCond768) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond768) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond768) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond768) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond768) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond768) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond768) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond768) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond768) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond768) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond768) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond768) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond768) CFA_SP SP+-6
          CFI (cfiCond768) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond769 Using cfiCommon0
          CFI (cfiCond769) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond769) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_1
          CFI (cfiCond769) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond769) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond769) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond769) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond769) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond769) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond769) CFA_SP SP+-6
          CFI (cfiCond769) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond770 Using cfiCommon0
          CFI (cfiCond770) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond770) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_2
          CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond770) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond770) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond770) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond770) CFA_SP SP+-6
          CFI (cfiCond770) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond771 Using cfiCommon0
          CFI (cfiCond771) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond771) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_3
          CFI (cfiCond771) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond771) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond771) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond771) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond771) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond771) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond771) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond771) CFA_SP SP+-6
          CFI (cfiCond771) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond772 Using cfiCommon0
          CFI (cfiCond772) Function ZDO_UpdateNwkStatus
          CFI (cfiCond772) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_139
          CFI (cfiCond772) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond772) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond772) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond772) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond772) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond772) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond772) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond772) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond772) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond772) CFA_SP SP+-6
          CFI (cfiCond772) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond773 Using cfiCommon0
          CFI (cfiCond773) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond773) Conditional ??CrossCallReturnLabel_355, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_140
          CFI (cfiCond773) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond773) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond773) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond773) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond773) CFA_SP SP+-6
          CFI (cfiCond773) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker774 Using cfiCommon1
          CFI (cfiPicker774) NoFunction
          CFI (cfiPicker774) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond735
          CFI EndBlock cfiCond736
          CFI EndBlock cfiCond737
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiCond740
          CFI EndBlock cfiCond741
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiCond744
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiCond750
          CFI EndBlock cfiCond751
          CFI EndBlock cfiCond752
          CFI EndBlock cfiCond753
          CFI EndBlock cfiCond754
          CFI EndBlock cfiCond755
          CFI EndBlock cfiCond756
          CFI EndBlock cfiCond757
          CFI EndBlock cfiCond758
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiCond761
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiCond764
          CFI EndBlock cfiCond765
          CFI EndBlock cfiCond766
          CFI EndBlock cfiCond767
          CFI EndBlock cfiCond768
          CFI EndBlock cfiCond769
          CFI EndBlock cfiCond770
          CFI EndBlock cfiCond771
          CFI EndBlock cfiCond772
          CFI EndBlock cfiCond773
          CFI EndBlock cfiPicker774
// 2886 
// 2887 /*********************************************************************
// 2888  * @fn          ZDO_ParseMgmtLqiRsp
// 2889  *
// 2890  * @brief       This function parses the incoming Management
// 2891  *              LQI response
// 2892  *
// 2893  * @param       inMsg - incoming message
// 2894  *
// 2895  * @return      a pointer to parsed response structure (NULL if not allocated).
// 2896  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 2897  *          by the calling function [osal_mem_free()].
// 2898  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2899 ZDO_MgmtLqiRsp_t *ZDO_ParseMgmtLqiRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtLqiRsp:
          CFI Block cfiBlock775 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
        CODE
// 2900 {
        FUNCALL ZDO_ParseMgmtLqiRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2901   ZDO_MgmtLqiRsp_t *pRsp;
// 2902   uint8 status;
// 2903   uint8 startIndex = 0;
        MOV     ?V5,#0x0
// 2904   uint8 neighborLqiCount = 0;
        MOV     ?V4,#0x0
// 2905   uint8 neighborLqiEntries = 0;
        MOV     ?V6,#0x0
// 2906   uint8 *msg;
// 2907 
// 2908   msg = inMsg->asdu;
        LCALL   ?Subroutine55 & 0xFFFF
// 2909 
// 2910   status = *msg++;
??CrossCallReturnLabel_435:
        MOV     ?V7,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 2911   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtLqiRsp_0
// 2912   {
// 2913     neighborLqiEntries = *msg++;
        LCALL   ?Subroutine69 & 0xFFFF
// 2914     startIndex = *msg++;
// 2915     neighborLqiCount = *msg++;
// 2916   }
??CrossCallReturnLabel_114:
        INC     R6
        INC     R6
        INC     R6
        MOV     R7,DPH
// 2917 
// 2918   // Allocate a buffer big enough to handle the list.
// 2919   pRsp = (ZDO_MgmtLqiRsp_t *)osal_mem_alloc(
// 2920             sizeof( ZDO_MgmtLqiRsp_t ) + (neighborLqiCount * sizeof( ZDP_MgmtLqiItem_t )) );
??ZDO_ParseMgmtLqiRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V4
        MOV     B,#0x1a
        LCALL   ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_174:
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
// 2921   if ( pRsp )
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmtLqiRsp_1 & 0xFFFF
// 2922   {
// 2923     uint8 x;
// 2924     ZDP_MgmtLqiItem_t *pList = pRsp->list;
        LCALL   ?Subroutine107 & 0xFFFF
// 2925     pRsp->status = status;
??CrossCallReturnLabel_177:
        LCALL   ?Subroutine16 & 0xFFFF
// 2926     pRsp->neighborLqiEntries = neighborLqiEntries;
// 2927     pRsp->startIndex = startIndex;
// 2928     pRsp->neighborLqiCount = neighborLqiCount;
// 2929 
// 2930     for ( x = 0; x < neighborLqiCount; x++ )
??CrossCallReturnLabel_14:
        LJMP    ??ZDO_ParseMgmtLqiRsp_2 & 0xFFFF
// 2931     {
// 2932       uint8 tmp;
// 2933 
// 2934       pList->panID = 0; // This isn't in the record, why is it in the structure?
??ZDO_ParseMgmtLqiRsp_3:
        MOV     DPL,?V0
        MOV     DPH,?V1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 2935       osal_cpyExtAddr(pList->extPanID, msg);   //Copy extended PAN ID
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        LCALL   ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_313:
        ADDC    A,?V1
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay  ; Banked call to: sAddrExtCpy
// 2936       msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtLqiRsp_4
        INC     R7
// 2937 
// 2938       osal_cpyExtAddr(pList->extAddr, msg);   //Copy extended address
??ZDO_ParseMgmtLqiRsp_4:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,?V0
        ADD     A,#0xa
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay  ; Banked call to: sAddrExtCpy
// 2939       msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtLqiRsp_5
        INC     R7
// 2940 
// 2941       pList->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtLqiRsp_5:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_129:
        ADD     A,#0x12
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_419:
        MOV     A,R0
        LCALL   ??Subroutine192_0 & 0xFFFF
// 2942       msg += 2;
??CrossCallReturnLabel_402:
        JNC     ??ZDO_ParseMgmtLqiRsp_6
        INC     R7
// 2943 
// 2944       tmp = *msg++;
??ZDO_ParseMgmtLqiRsp_6:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 2945       pList->devType = tmp & 0x03;
        MOV     A,#0x3
        ANL     A,R0
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_376:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2946       pList->rxOnIdle = (tmp >> 2) & 0x03;
        MOV     A,R0
        RRC     A
        RRC     A
        ANL     A,#0x3f
        ANL     A,#0x3
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x15
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_420:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2947       pList->relation = (tmp >> 4) & 0x07;
        MOV     A,R0
        SWAP    A
        ANL     A,#0xf
        ANL     A,#0x7
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x16
        LCALL   ??Subroutine196_0 & 0xFFFF
// 2948 
// 2949       pList->permit = (*msg++) & 0x03;
// 2950 
// 2951       pList->depth = *msg++;
// 2952 
// 2953       pList->lqi = *msg++;
// 2954       pList++;
// 2955     }
??CrossCallReturnLabel_421:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ??Subroutine185_0 & 0xFFFF
??CrossCallReturnLabel_367:
        ANL     A,#0x3
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x17
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_422:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_5:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x18
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_423:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_6:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0x19
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_424:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_56:
        ADD     A,#0x1a
        MOV     ?V0,A
        JNC     ??ZDO_ParseMgmtLqiRsp_7
        INC     ?V1
??ZDO_ParseMgmtLqiRsp_7:
        INC     ?V5
??ZDO_ParseMgmtLqiRsp_2:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V4
        JNC     $+5
        LJMP    ??ZDO_ParseMgmtLqiRsp_3 & 0xFFFF
          CFI EndBlock cfiBlock775
// 2956   }
// 2957 
// 2958   return ( pRsp );
??ZDO_ParseMgmtLqiRsp_1:
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 2959 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock776 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R2,?V2
        MOV     R3,?V3
          CFI EndBlock cfiBlock776
        REQUIRE ??Subroutine195_0
        ; // Fall through to label ??Subroutine195_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine195_0:
          CFI Block cfiBlock777 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock777

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond778 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_128
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond779 Using cfiCommon0
          CFI (cfiCond779) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond779) Conditional ??CrossCallReturnLabel_129
          CFI (cfiCond779) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond779) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond779) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond779) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond779) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond779) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond779) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond779) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond779) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond779) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond779) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond779) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond779) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond779) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond779) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond779) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond779) CFA_SP SP+-2
          CFI (cfiCond779) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker780 Using cfiCommon1
          CFI (cfiPicker780) NoFunction
          CFI (cfiPicker780) Picker
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_219:
        MOV     R0,A
        MOV     A,?V0
        RET
          CFI EndBlock cfiCond778
          CFI EndBlock cfiCond779
          CFI EndBlock cfiPicker780

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond781 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond782 Using cfiCommon0
          CFI (cfiCond782) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond782) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond782) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond782) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond782) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond782) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond782) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond782) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond782) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond782) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond782) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond782) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond782) CFA_SP SP+-2
          CFI (cfiCond782) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond783 Using cfiCommon0
          CFI (cfiCond783) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond783) Conditional ??CrossCallReturnLabel_6
          CFI (cfiCond783) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond783) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond783) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond783) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond783) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond783) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond783) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond783) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond783) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond783) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond783) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond783) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond783) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond783) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond783) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond783) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond783) CFA_SP SP+-2
          CFI (cfiCond783) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond784 Using cfiCommon0
          CFI (cfiCond784) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond784) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond784) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond784) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond784) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond784) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond784) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond784) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond784) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond784) CFA_SP SP+-2
          CFI (cfiCond784) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond785 Using cfiCommon0
          CFI (cfiCond785) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond785) Conditional ??CrossCallReturnLabel_8
          CFI (cfiCond785) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond785) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond785) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond785) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond785) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond785) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond785) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond785) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond785) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond785) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond785) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond785) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond785) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond785) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond785) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond785) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond785) CFA_SP SP+-2
          CFI (cfiCond785) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker786 Using cfiCommon1
          CFI (cfiPicker786) NoFunction
          CFI (cfiPicker786) Picker
        LCALL   ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_202:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond781
          CFI EndBlock cfiCond782
          CFI EndBlock cfiCond783
          CFI EndBlock cfiCond784
          CFI EndBlock cfiCond785
          CFI EndBlock cfiPicker786
// 2960 
// 2961 /*********************************************************************
// 2962  * @fn          ZDO_ParseMgmNwkDiscRsp
// 2963  *
// 2964  * @brief       This function parses the incoming Management
// 2965  *              Network Discover response.
// 2966  *
// 2967  * @param       inMsg - incoming message
// 2968  *
// 2969  * @return      pointer to parsed response.  This structure was
// 2970  *          allocated using osal_mem_alloc, so it must be freed
// 2971  *          by the calling function [osal_mem_free()].
// 2972  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2973 ZDO_MgmNwkDiscRsp_t *ZDO_ParseMgmNwkDiscRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmNwkDiscRsp:
          CFI Block cfiBlock787 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
        CODE
// 2974 {
        FUNCALL ZDO_ParseMgmNwkDiscRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmNwkDiscRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2975   ZDO_MgmNwkDiscRsp_t *pRsp;
// 2976   uint8 status;
// 2977   uint8 networkCount = 0;
        MOV     ?V1,#0x0
// 2978   uint8 startIndex = 0;
        MOV     ?V0,#0x0
// 2979   uint8 networkListCount = 0;
        MOV     ?V4,#0x0
// 2980   uint8 *msg;
// 2981 
// 2982   msg = inMsg->asdu;
        LCALL   ?Subroutine55 & 0xFFFF
// 2983   status = *msg++;
??CrossCallReturnLabel_436:
        MOV     ?V5,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 2984 
// 2985   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmNwkDiscRsp_0
// 2986   {
// 2987     networkCount = *msg++;
        MOVX    A,@DPTR
        MOV     ?V1,A
        INC     DPTR
// 2988     startIndex = *msg++;
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
// 2989     networkListCount = *msg++;
        MOVX    A,@DPTR
        MOV     ?V4,A
        INC     DPTR
        INC     R6
        INC     R6
        INC     R6
        MOV     R7,DPH
// 2990   }
// 2991 
// 2992   // Allocate a buffer big enough to handle the list.
// 2993   pRsp = (ZDO_MgmNwkDiscRsp_t *)osal_mem_alloc( sizeof( ZDO_MgmNwkDiscRsp_t )
// 2994                                   + (networkListCount * sizeof( mgmtNwkDiscItem_t )) );
??ZDO_ParseMgmNwkDiscRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     ?V2,?V4
        MOV     ?V3,#0x0
        MOV     A,#0x4
        MOV     R0,#?V2
        LCALL   ?S_SHL
        MOV     A,?V2
        LCALL   ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_446:
        ADDC    A,?V3
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
// 2995   if ( pRsp )
        MOV     A,R2
        ORL     A,?V3
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmNwkDiscRsp_1 & 0xFFFF
// 2996   {
// 2997     uint8 x;
// 2998     mgmtNwkDiscItem_t *pList;
// 2999 
// 3000     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V5
        MOVX    @DPTR,A
// 3001     pRsp->networkCount = networkCount;
        INC     DPTR
        MOV     A,?V1
        LCALL   ?Subroutine40 & 0xFFFF
// 3002     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_62:
        MOV     A,?V0
        LCALL   ?Subroutine32 & 0xFFFF
// 3003     pRsp->networkListCount = networkListCount;
??CrossCallReturnLabel_44:
        MOV     A,?V4
        MOVX    @DPTR,A
// 3004     pList = pRsp->list;
        LCALL   ?Subroutine107 & 0xFFFF
// 3005 
// 3006     for ( x = 0; x < networkListCount; x++ )
??CrossCallReturnLabel_178:
        MOV     ?V5,#0x0
        SJMP    ??ZDO_ParseMgmNwkDiscRsp_2
// 3007     {
// 3008       osal_cpyExtAddr(pList->extendedPANID, msg);   //Copy extended PAN ID
??ZDO_ParseMgmNwkDiscRsp_3:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   ??sAddrExtCpy?relay  ; Banked call to: sAddrExtCpy
// 3009       pList->PANId = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_104:
        INC     DPTR
        LCALL   ??Subroutine163_0 & 0xFFFF
// 3010       msg += Z_EXTADDR_LEN;
??CrossCallReturnLabel_255:
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        JNC     ??ZDO_ParseMgmNwkDiscRsp_4
        INC     R7
// 3011 
// 3012       pList->logicalChannel = *msg++;
??ZDO_ParseMgmNwkDiscRsp_4:
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_110:
        LCALL   ?Subroutine28 & 0xFFFF
// 3013       pList->stackProfile = (*msg) & 0x0F;
??CrossCallReturnLabel_441:
        MOVX    A,@DPTR
        ANL     A,#0xf
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine110 & 0xFFFF
// 3014       pList->version = (*msg++ >> 4) & 0x0F;
// 3015       pList->beaconOrder = (*msg) & 0x0F;
// 3016       pList->superFrameOrder = (*msg++ >> 4) & 0x0F;
// 3017       pList->permitJoining = *msg++;
// 3018       pList++;
// 3019     }
??CrossCallReturnLabel_388:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_80:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_181:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_7:
        ANL     A,#0xf
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0
        ADD     A,#0xd
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_425:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_81:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_166:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_8:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_168:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_57:
        ADD     A,#0x10
        MOV     ?V0,A
        JNC     ??ZDO_ParseMgmNwkDiscRsp_5
        INC     ?V1
??ZDO_ParseMgmNwkDiscRsp_5:
        INC     ?V5
??ZDO_ParseMgmNwkDiscRsp_2:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V4
        JC      ??ZDO_ParseMgmNwkDiscRsp_3
// 3020   }
// 3021 
// 3022   return ( pRsp );
??ZDO_ParseMgmNwkDiscRsp_1:
        LJMP    ?Subroutine7 & 0xFFFF
          CFI EndBlock cfiBlock787
// 3023 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine115:
          CFI Block cfiCond788 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_426
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond789 Using cfiCommon0
          CFI (cfiCond789) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond789) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond789) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond789) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond789) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond789) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond789) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond789) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond789) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond789) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond789) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond789) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond789) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond789) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond789) CFA_SP SP+-2
          CFI (cfiCond789) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker790 Using cfiCommon1
          CFI (cfiPicker790) NoFunction
          CFI (cfiPicker790) Picker
        ADD     A,#0x11
          CFI EndBlock cfiCond788
          CFI EndBlock cfiCond789
          CFI EndBlock cfiPicker790
        REQUIRE ??Subroutine196_0
        ; // Fall through to label ??Subroutine196_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine196_0:
          CFI Block cfiCond791 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_419
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond792 Using cfiCommon0
          CFI (cfiCond792) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond792) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond792) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond792) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond792) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond792) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond792) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond792) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond792) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond792) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond792) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond792) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond792) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond793 Using cfiCommon0
          CFI (cfiCond793) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond793) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond793) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond793) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond793) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond793) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond793) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond793) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond793) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond793) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond793) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond793) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond793) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond794 Using cfiCommon0
          CFI (cfiCond794) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond794) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond794) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond794) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond794) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond794) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond794) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond794) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond794) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond794) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond794) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond794) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond794) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond795 Using cfiCommon0
          CFI (cfiCond795) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond795) Conditional ??CrossCallReturnLabel_423
          CFI (cfiCond795) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond795) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond795) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond795) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond795) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond795) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond795) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond795) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond795) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond795) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond795) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond795) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond795) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond795) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond795) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond795) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond795) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond796 Using cfiCommon0
          CFI (cfiCond796) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond796) Conditional ??CrossCallReturnLabel_424
          CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond796) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond796) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond796) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond796) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond796) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond796) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond796) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_425
          CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond797) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond797) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond797) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond797) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond797) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond797) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond797) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond798 Using cfiCommon0
          CFI (cfiCond798) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond798) Conditional ??CrossCallReturnLabel_426
          CFI (cfiCond798) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond798) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond798) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond798) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond798) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond798) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond798) CFA_SP SP+-2
          CFI (cfiCond798) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond799 Using cfiCommon0
          CFI (cfiCond799) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond799) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond799) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond799) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond799) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond799) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond799) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond799) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond799) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond799) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond799) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond799) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond799) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond799) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond799) CFA_SP SP+-2
          CFI (cfiCond799) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker800 Using cfiCommon1
          CFI (cfiPicker800) NoFunction
          CFI (cfiPicker800) Picker
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_433:
        RET
          CFI EndBlock cfiCond791
          CFI EndBlock cfiCond792
          CFI EndBlock cfiCond793
          CFI EndBlock cfiCond794
          CFI EndBlock cfiCond795
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiCond798
          CFI EndBlock cfiCond799
          CFI EndBlock cfiPicker800

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine107:
          CFI Block cfiCond801 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_177
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond802 Using cfiCommon0
          CFI (cfiCond802) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond802) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond802) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond802) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond802) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond802) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond802) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond802) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond802) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond802) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond802) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond802) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond802) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond802) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond802) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond802) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond802) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond802) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond802) CFA_SP SP+-2
          CFI (cfiCond802) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker803 Using cfiCommon1
          CFI (cfiPicker803) NoFunction
          CFI (cfiPicker803) Picker
        MOV     A,R2
        ADD     A,#0x4
        MOV     ?V0,A
        CLR     A
        ADDC    A,?V3
        MOV     ?V1,A
        RET
          CFI EndBlock cfiCond801
          CFI EndBlock cfiCond802
          CFI EndBlock cfiPicker803

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine103:
          CFI Block cfiCond804 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_167
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond805 Using cfiCommon0
          CFI (cfiCond805) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond805) Conditional ??CrossCallReturnLabel_168
          CFI (cfiCond805) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond805) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond805) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond805) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond805) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond805) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond805) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond805) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond805) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond805) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond805) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker806 Using cfiCommon1
          CFI (cfiPicker806) NoFunction
          CFI (cfiPicker806) Picker
        LCALL   ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_232:
        RET
          CFI EndBlock cfiCond804
          CFI EndBlock cfiCond805
          CFI EndBlock cfiPicker806

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine142:
          CFI Block cfiCond807 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_46
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond808 Using cfiCommon0
          CFI (cfiCond808) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond808) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_47
          CFI (cfiCond808) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond808) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond808) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond808) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond808) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond808) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond808) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond808) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond808) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond808) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond808) CFA_SP SP+-4
          CFI (cfiCond808) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond809 Using cfiCommon0
          CFI (cfiCond809) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond809) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_167
          CFI (cfiCond809) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond809) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond809) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond809) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond809) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond809) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond809) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond809) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond809) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond809) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond809) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond809) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond809) CFA_SP SP+-4
          CFI (cfiCond809) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond810 Using cfiCommon0
          CFI (cfiCond810) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond810) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_168
          CFI (cfiCond810) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond810) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond810) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond810) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond810) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond810) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond810) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond810) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond810) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond810) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond810) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond810) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond810) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond810) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond810) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond810) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond810) CFA_SP SP+-5
          CFI (cfiCond810) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker811 Using cfiCommon1
          CFI (cfiPicker811) NoFunction
          CFI (cfiPicker811) Picker
        MOV     A,?V0
        LCALL   ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_244:
        ADDC    A,?V1
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond807
          CFI EndBlock cfiCond808
          CFI EndBlock cfiCond809
          CFI EndBlock cfiCond810
          CFI EndBlock cfiPicker811

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine102:
          CFI Block cfiCond812 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_165
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond813 Using cfiCommon0
          CFI (cfiCond813) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond813) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond813) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond813) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond813) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond813) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond813) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond813) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond813) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond813) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond813) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond813) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond813) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker814 Using cfiCommon1
          CFI (cfiPicker814) NoFunction
          CFI (cfiPicker814) Picker
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_230:
        RET
          CFI EndBlock cfiCond812
          CFI EndBlock cfiCond813
          CFI EndBlock cfiPicker814

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine138:
          CFI Block cfiCond815 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_163
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond816 Using cfiCommon0
          CFI (cfiCond816) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond816) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_164
          CFI (cfiCond816) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond816) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond816) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond816) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond816) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond816) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond816) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond816) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond816) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond816) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond816) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond816) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond816) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond816) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond816) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond816) CFA_SP SP+-4
          CFI (cfiCond816) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond817 Using cfiCommon0
          CFI (cfiCond817) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond817) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_165
          CFI (cfiCond817) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond817) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond817) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond817) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond817) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond817) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond817) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond817) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond817) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond817) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond817) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond817) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond817) CFA_SP SP+-5
          CFI (cfiCond817) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond818 Using cfiCommon0
          CFI (cfiCond818) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond818) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_166
          CFI (cfiCond818) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond818) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond818) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond818) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond818) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond818) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond818) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond818) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond818) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond818) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond818) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond818) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond818) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond818) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond818) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond818) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond818) CFA_SP SP+-5
          CFI (cfiCond818) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker819 Using cfiCommon1
          CFI (cfiPicker819) NoFunction
          CFI (cfiPicker819) Picker
        MOV     A,?V0
        ADD     A,#0xe
        MOV     DPL,A
        CLR     A
        ADDC    A,?V1
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond815
          CFI EndBlock cfiCond816
          CFI EndBlock cfiCond817
          CFI EndBlock cfiCond818
          CFI EndBlock cfiPicker819

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond820 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_434
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond821 Using cfiCommon0
          CFI (cfiCond821) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond821) Conditional ??CrossCallReturnLabel_435
          CFI (cfiCond821) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond821) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond821) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond821) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond821) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond821) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond821) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond821) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond821) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond821) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond821) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond821) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond821) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond821) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond821) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond821) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond821) CFA_SP SP+-2
          CFI (cfiCond821) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond822 Using cfiCommon0
          CFI (cfiCond822) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond822) Conditional ??CrossCallReturnLabel_436
          CFI (cfiCond822) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond822) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond822) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond822) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond822) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond822) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond822) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond822) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond822) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond822) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond822) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond822) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond822) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond822) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond822) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond822) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond822) CFA_SP SP+-2
          CFI (cfiCond822) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond823 Using cfiCommon0
          CFI (cfiCond823) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond823) Conditional ??CrossCallReturnLabel_437
          CFI (cfiCond823) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond823) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond823) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond823) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond823) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond823) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond823) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond823) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond823) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond823) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond823) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond823) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond823) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond823) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond823) CFA_SP SP+-2
          CFI (cfiCond823) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond824 Using cfiCommon0
          CFI (cfiCond824) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond824) Conditional ??CrossCallReturnLabel_438
          CFI (cfiCond824) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond824) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond824) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond824) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond824) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond824) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond824) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond824) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond824) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond824) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond824) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond824) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond824) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond824) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond824) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond824) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond824) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond824) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond824) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond824) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond824) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond824) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond824) CFA_SP SP+-2
          CFI (cfiCond824) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker825 Using cfiCommon1
          CFI (cfiPicker825) NoFunction
          CFI (cfiPicker825) Picker
        LCALL   ?Subroutine140 & 0xFFFF
          CFI EndBlock cfiCond820
          CFI EndBlock cfiCond821
          CFI EndBlock cfiCond822
          CFI EndBlock cfiCond823
          CFI EndBlock cfiCond824
          CFI EndBlock cfiPicker825
??CrossCallReturnLabel_382:
        REQUIRE ??Subroutine197_0
        ; // Fall through to label ??Subroutine197_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine197_0:
          CFI Block cfiCond826 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_439
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond827 Using cfiCommon0
          CFI (cfiCond827) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond827) Conditional ??CrossCallReturnLabel_434
          CFI (cfiCond827) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond827) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond827) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond827) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond827) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond827) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond827) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond827) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond827) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond827) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond827) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond827) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond827) CFA_SP SP+-2
          CFI (cfiCond827) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond828 Using cfiCommon0
          CFI (cfiCond828) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond828) Conditional ??CrossCallReturnLabel_435
          CFI (cfiCond828) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond828) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond828) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond828) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond828) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond828) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond828) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond828) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond828) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond828) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond828) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond828) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond828) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond828) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond828) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond828) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond828) CFA_SP SP+-2
          CFI (cfiCond828) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond829 Using cfiCommon0
          CFI (cfiCond829) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond829) Conditional ??CrossCallReturnLabel_436
          CFI (cfiCond829) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond829) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond829) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond829) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond829) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond829) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond829) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond829) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond829) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond829) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond829) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond829) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond829) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond829) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond829) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond829) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond829) CFA_SP SP+-2
          CFI (cfiCond829) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond830 Using cfiCommon0
          CFI (cfiCond830) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond830) Conditional ??CrossCallReturnLabel_437
          CFI (cfiCond830) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond830) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond830) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond830) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond830) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond830) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond830) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond830) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond830) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond830) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond830) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond830) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond830) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond830) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond830) CFA_SP SP+-2
          CFI (cfiCond830) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond831 Using cfiCommon0
          CFI (cfiCond831) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond831) Conditional ??CrossCallReturnLabel_438
          CFI (cfiCond831) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond831) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond831) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond831) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond831) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond831) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond831) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond831) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond831) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond831) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond831) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond831) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond831) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond831) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond831) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond831) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond831) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond831) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond831) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond831) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond831) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond831) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond831) CFA_SP SP+-2
          CFI (cfiCond831) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker832 Using cfiCommon1
          CFI (cfiPicker832) NoFunction
          CFI (cfiPicker832) Picker
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond826
          CFI EndBlock cfiCond827
          CFI EndBlock cfiCond828
          CFI EndBlock cfiCond829
          CFI EndBlock cfiCond830
          CFI EndBlock cfiCond831
          CFI EndBlock cfiPicker832

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond833 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond834 Using cfiCommon0
          CFI (cfiCond834) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond834) Conditional ??CrossCallReturnLabel_81
          CFI (cfiCond834) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond834) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond834) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond834) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond834) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond834) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond834) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond834) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond834) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond834) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond834) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond834) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond834) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond834) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond834) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond834) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond834) CFA_SP SP+-2
          CFI (cfiCond834) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker835 Using cfiCommon1
          CFI (cfiPicker835) NoFunction
          CFI (cfiPicker835) Picker
        LCALL   ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_370:
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        RET
          CFI EndBlock cfiCond833
          CFI EndBlock cfiCond834
          CFI EndBlock cfiPicker835

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine125:
          CFI Block cfiCond836 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_368, ??CrossCallReturnLabel_76
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond837 Using cfiCommon0
          CFI (cfiCond837) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond837) Conditional ??CrossCallReturnLabel_368, ??CrossCallReturnLabel_74
          CFI (cfiCond837) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond837) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond837) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond837) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond837) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond837) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond837) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond837) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond837) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond837) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond837) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond837) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond837) CFA_SP SP+-4
          CFI (cfiCond837) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond838 Using cfiCommon0
          CFI (cfiCond838) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond838) Conditional ??CrossCallReturnLabel_368, ??CrossCallReturnLabel_75
          CFI (cfiCond838) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond838) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond838) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond838) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond838) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond838) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond838) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond838) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond838) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond838) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond838) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond838) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond838) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond838) CFA_SP SP+-4
          CFI (cfiCond838) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond839 Using cfiCommon0
          CFI (cfiCond839) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond839) Conditional ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_365
          CFI (cfiCond839) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond839) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond839) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond839) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond839) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond839) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond839) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond839) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond839) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond839) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond839) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond839) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond839) CFA_SP SP+-4
          CFI (cfiCond839) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond840 Using cfiCommon0
          CFI (cfiCond840) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond840) Conditional ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_366
          CFI (cfiCond840) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond840) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond840) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond840) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond840) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond840) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond840) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond840) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond840) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond840) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond840) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond840) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond840) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond840) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond840) CFA_SP SP+-4
          CFI (cfiCond840) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond841 Using cfiCommon0
          CFI (cfiCond841) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond841) Conditional ??CrossCallReturnLabel_369, ??CrossCallReturnLabel_367
          CFI (cfiCond841) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond841) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond841) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond841) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond841) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond841) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond841) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond841) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond841) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond841) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond841) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond841) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond841) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond841) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond841) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond841) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond841) CFA_SP SP+-4
          CFI (cfiCond841) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond842 Using cfiCommon0
          CFI (cfiCond842) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond842) Conditional ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_80
          CFI (cfiCond842) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond842) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond842) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond842) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond842) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond842) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond842) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond842) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond842) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond842) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond842) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond842) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond842) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond842) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond842) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond842) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond842) CFA_SP SP+-4
          CFI (cfiCond842) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond843 Using cfiCommon0
          CFI (cfiCond843) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond843) Conditional ??CrossCallReturnLabel_370, ??CrossCallReturnLabel_81
          CFI (cfiCond843) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond843) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond843) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond843) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond843) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond843) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond843) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond843) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond843) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond843) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond843) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond843) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond843) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond843) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond843) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond843) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond843) CFA_SP SP+-4
          CFI (cfiCond843) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond844 Using cfiCommon0
          CFI (cfiCond844) Function ZDO_ParseEPListRsp
          CFI (cfiCond844) Conditional ??CrossCallReturnLabel_371, ??CrossCallReturnLabel_41
          CFI (cfiCond844) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond844) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond844) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond844) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond844) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond844) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond844) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond844) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond844) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond844) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond844) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond844) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond844) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond844) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond844) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond844) CFA_SP SP+-4
          CFI (cfiCond844) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond845 Using cfiCommon0
          CFI (cfiCond845) Function ZDO_ParseUserDescRsp
          CFI (cfiCond845) Conditional ??CrossCallReturnLabel_371, ??CrossCallReturnLabel_42
          CFI (cfiCond845) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond845) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond845) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond845) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond845) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond845) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond845) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond845) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond845) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond845) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond845) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond845) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond845) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond845) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond845) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond845) CFA_SP SP+-4
          CFI (cfiCond845) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker846 Using cfiCommon1
          CFI (cfiPicker846) NoFunction
          CFI (cfiPicker846) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        RET
          CFI EndBlock cfiCond836
          CFI EndBlock cfiCond837
          CFI EndBlock cfiCond838
          CFI EndBlock cfiCond839
          CFI EndBlock cfiCond840
          CFI EndBlock cfiCond841
          CFI EndBlock cfiCond842
          CFI EndBlock cfiCond843
          CFI EndBlock cfiCond844
          CFI EndBlock cfiCond845
          CFI EndBlock cfiPicker846

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond847 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond848 Using cfiCommon0
          CFI (cfiCond848) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond848) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond848) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond848) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond848) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond848) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond848) CFA_SP SP+-2
          CFI (cfiCond848) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond849 Using cfiCommon0
          CFI (cfiCond849) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond849) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond849) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond849) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond849) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond849) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond849) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond849) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond849) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond849) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond849) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond849) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond849) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond849) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond849) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond849) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond849) CFA_SP SP+-2
          CFI (cfiCond849) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker850 Using cfiCommon1
          CFI (cfiPicker850) NoFunction
          CFI (cfiPicker850) Picker
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_208:
        INC     DPTR
        RET
          CFI EndBlock cfiCond847
          CFI EndBlock cfiCond848
          CFI EndBlock cfiCond849
          CFI EndBlock cfiPicker850

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine127:
          CFI Block cfiCond851 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_210
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond852 Using cfiCommon0
          CFI (cfiCond852) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond852) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_61
          CFI (cfiCond852) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond852) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond852) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond852) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond852) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond852) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond852) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond852) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond852) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond852) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond852) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond852) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond852) CFA_SP SP+-4
          CFI (cfiCond852) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond853 Using cfiCommon0
          CFI (cfiCond853) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond853) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_62
          CFI (cfiCond853) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond853) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond853) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond853) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond853) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond853) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond853) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond853) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond853) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond853) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond853) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond853) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond853) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond853) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond853) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond853) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond853) CFA_SP SP+-4
          CFI (cfiCond853) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond854 Using cfiCommon0
          CFI (cfiCond854) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond854) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_63
          CFI (cfiCond854) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond854) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond854) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond854) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond854) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond854) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond854) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond854) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond854) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond854) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond854) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond854) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond854) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond854) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond854) CFA_SP SP+-4
          CFI (cfiCond854) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond855 Using cfiCommon0
          CFI (cfiCond855) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond855) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_14
          CFI (cfiCond855) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond855) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond855) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond855) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond855) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond855) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond855) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond855) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond855) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond855) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond855) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond855) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond855) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond855) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond855) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond855) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond855) CFA_SP SP+-4
          CFI (cfiCond855) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond856 Using cfiCommon0
          CFI (cfiCond856) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond856) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_15
          CFI (cfiCond856) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond856) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond856) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond856) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond856) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond856) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond856) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond856) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond856) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond856) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond856) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond856) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond856) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond856) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond856) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond856) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond856) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond856) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond856) CFA_SP SP+-4
          CFI (cfiCond856) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker857 Using cfiCommon1
          CFI (cfiPicker857) NoFunction
          CFI (cfiPicker857) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        RET
          CFI EndBlock cfiCond851
          CFI EndBlock cfiCond852
          CFI EndBlock cfiCond853
          CFI EndBlock cfiCond854
          CFI EndBlock cfiCond855
          CFI EndBlock cfiCond856
          CFI EndBlock cfiPicker857

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond858 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_56
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond859 Using cfiCommon0
          CFI (cfiCond859) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond859) Conditional ??CrossCallReturnLabel_57
          CFI (cfiCond859) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond859) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond859) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond859) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond859) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond859) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond859) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond859) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond859) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond859) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond859) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond859) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond859) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond859) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond859) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond859) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond859) CFA_SP SP+-2
          CFI (cfiCond859) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker860 Using cfiCommon1
          CFI (cfiPicker860) NoFunction
          CFI (cfiPicker860) Picker
        LCALL   ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_203:
        MOV     A,?V0
        RET
          CFI EndBlock cfiCond858
          CFI EndBlock cfiCond859
          CFI EndBlock cfiPicker860

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond861 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond862 Using cfiCommon0
          CFI (cfiCond862) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond862) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond862) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond862) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond862) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond862) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond862) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond862) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond862) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond862) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond862) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond862) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond862) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond862) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond862) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond862) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond862) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond862) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond862) CFA_SP SP+-2
          CFI (cfiCond862) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond863 Using cfiCommon0
          CFI (cfiCond863) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond863) Conditional ??CrossCallReturnLabel_45
          CFI (cfiCond863) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond863) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond863) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond863) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond863) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond863) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond863) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond863) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond863) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond863) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond863) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond863) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond863) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond863) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond863) CFA_SP SP+-2
          CFI (cfiCond863) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker864 Using cfiCommon1
          CFI (cfiPicker864) NoFunction
          CFI (cfiPicker864) Picker
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_205:
        RET
          CFI EndBlock cfiCond861
          CFI EndBlock cfiCond862
          CFI EndBlock cfiCond863
          CFI EndBlock cfiPicker864

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine122:
          CFI Block cfiCond865 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_205, ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond866 Using cfiCommon0
          CFI (cfiCond866) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond866) Conditional ??CrossCallReturnLabel_205, ??CrossCallReturnLabel_44
          CFI (cfiCond866) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond866) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond866) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond866) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond866) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond866) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond866) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond866) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond866) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond866) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond866) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond866) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond866) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond866) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond866) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond866) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond866) CFA_SP SP+-4
          CFI (cfiCond866) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond867 Using cfiCommon0
          CFI (cfiCond867) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond867) Conditional ??CrossCallReturnLabel_205, ??CrossCallReturnLabel_45
          CFI (cfiCond867) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond867) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond867) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond867) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond867) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond867) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond867) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond867) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond867) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond867) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond867) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond867) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond867) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond867) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond867) CFA_SP SP+-4
          CFI (cfiCond867) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond868 Using cfiCommon0
          CFI (cfiCond868) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond868) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_14
          CFI (cfiCond868) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond868) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond868) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond868) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond868) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond868) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond868) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond868) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond868) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond868) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond868) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond868) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond868) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond868) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond868) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond868) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond868) CFA_SP SP+-4
          CFI (cfiCond868) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond869 Using cfiCommon0
          CFI (cfiCond869) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond869) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_15
          CFI (cfiCond869) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond869) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond869) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond869) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond869) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond869) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond869) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond869) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond869) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond869) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond869) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond869) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond869) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond869) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond869) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond869) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond869) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond869) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond869) CFA_SP SP+-4
          CFI (cfiCond869) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond870 Using cfiCommon0
          CFI (cfiCond870) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond870) Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_27
          CFI (cfiCond870) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond870) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond870) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond870) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond870) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond870) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond870) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond870) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond870) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond870) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond870) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond870) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond870) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond870) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond870) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond870) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond870) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond870) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond870) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond870) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond870) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond870) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond870) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond870) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond870) CFA_SP SP+-4
          CFI (cfiCond870) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond871 Using cfiCommon0
          CFI (cfiCond871) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond871) Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_28
          CFI (cfiCond871) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond871) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond871) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond871) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond871) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond871) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond871) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond871) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond871) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond871) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond871) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond871) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond871) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond871) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond871) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond871) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond871) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond871) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond871) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond871) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond871) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond871) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond871) CFA_SP SP+-4
          CFI (cfiCond871) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond872 Using cfiCommon0
          CFI (cfiCond872) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond872) Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_29
          CFI (cfiCond872) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond872) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond872) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond872) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond872) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond872) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond872) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond872) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond872) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond872) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond872) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond872) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond872) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond872) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond872) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond872) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond872) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond872) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond872) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond872) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond872) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond872) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond872) CFA_SP SP+-4
          CFI (cfiCond872) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker873 Using cfiCommon1
          CFI (cfiPicker873) NoFunction
          CFI (cfiPicker873) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond865
          CFI EndBlock cfiCond866
          CFI EndBlock cfiCond867
          CFI EndBlock cfiCond868
          CFI EndBlock cfiCond869
          CFI EndBlock cfiCond870
          CFI EndBlock cfiCond871
          CFI EndBlock cfiCond872
          CFI EndBlock cfiPicker873

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond874 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_441
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond875 Using cfiCommon0
          CFI (cfiCond875) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond875) Conditional ??CrossCallReturnLabel_442
          CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond875) CFA_SP SP+-2
          CFI (cfiCond875) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker876 Using cfiCommon1
          CFI (cfiPicker876) NoFunction
          CFI (cfiPicker876) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond874
          CFI EndBlock cfiCond875
          CFI EndBlock cfiPicker876
        REQUIRE ??Subroutine198_0
        ; // Fall through to label ??Subroutine198_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine198_0:
          CFI Block cfiCond877 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_440
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond878 Using cfiCommon0
          CFI (cfiCond878) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond878) Conditional ??CrossCallReturnLabel_441
          CFI (cfiCond878) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond878) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond878) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond878) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond878) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond878) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond878) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond878) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond878) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond878) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond878) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond878) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond878) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond878) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond878) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond878) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond878) CFA_SP SP+-2
          CFI (cfiCond878) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond879 Using cfiCommon0
          CFI (cfiCond879) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond879) Conditional ??CrossCallReturnLabel_442
          CFI (cfiCond879) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond879) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond879) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond879) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond879) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond879) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond879) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond879) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond879) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond879) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond879) CFA_SP SP+-2
          CFI (cfiCond879) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker880 Using cfiCommon1
          CFI (cfiPicker880) NoFunction
          CFI (cfiPicker880) Picker
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_444:
        RET
          CFI EndBlock cfiCond877
          CFI EndBlock cfiCond878
          CFI EndBlock cfiCond879
          CFI EndBlock cfiPicker880

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine123:
          CFI Block cfiCond881 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond882 Using cfiCommon0
          CFI (cfiCond882) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond882) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_12
          CFI (cfiCond882) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond882) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond882) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond882) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond882) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond882) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond882) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond882) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond882) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond882) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond882) CFA_SP SP+-4
          CFI (cfiCond882) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond883 Using cfiCommon0
          CFI (cfiCond883) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond883) Conditional ??CrossCallReturnLabel_443, ??CrossCallReturnLabel_13
          CFI (cfiCond883) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond883) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond883) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond883) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond883) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond883) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond883) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond883) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond883) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond883) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond883) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond883) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond883) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond883) CFA_SP SP+-4
          CFI (cfiCond883) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond884 Using cfiCommon0
          CFI (cfiCond884) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond884) Conditional ??CrossCallReturnLabel_444, ??CrossCallReturnLabel_441
          CFI (cfiCond884) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond884) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond884) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond884) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond884) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond884) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond884) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond884) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond884) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond884) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond884) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond884) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond884) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond884) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond884) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond884) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond884) CFA_SP SP+-4
          CFI (cfiCond884) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond885 Using cfiCommon0
          CFI (cfiCond885) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond885) Conditional ??CrossCallReturnLabel_444, ??CrossCallReturnLabel_442
          CFI (cfiCond885) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond885) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond885) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond885) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond885) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond885) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond885) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond885) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond885) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond885) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond885) CFA_SP SP+-4
          CFI (cfiCond885) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond886 Using cfiCommon0
          CFI (cfiCond886) Function ZDO_ParseAddrRsp
          CFI (cfiCond886) Conditional ??CrossCallReturnLabel_444, ??CrossCallReturnLabel_440
          CFI (cfiCond886) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond886) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond886) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond886) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond886) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond886) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond886) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond886) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond886) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond886) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond886) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond886) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond886) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond886) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond886) CFA_SP SP+-4
          CFI (cfiCond886) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker887 Using cfiCommon1
          CFI (cfiPicker887) NoFunction
          CFI (cfiPicker887) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        RET
          CFI EndBlock cfiCond881
          CFI EndBlock cfiCond882
          CFI EndBlock cfiCond883
          CFI EndBlock cfiCond884
          CFI EndBlock cfiCond885
          CFI EndBlock cfiCond886
          CFI EndBlock cfiPicker887
// 3024 
// 3025 /*********************************************************************
// 3026  * @fn          ZDO_ParseMgmtRtgRsp
// 3027  *
// 3028  * @brief       This function parses the incoming Management
// 3029  *              Routing response.
// 3030  *
// 3031  * @param       inMsg - incoming message
// 3032  *
// 3033  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3034  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3035  *          by the calling function [osal_mem_free()].
// 3036  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3037 ZDO_MgmtRtgRsp_t *ZDO_ParseMgmtRtgRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtRtgRsp:
          CFI Block cfiBlock888 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
        CODE
// 3038 {
        FUNCALL ZDO_ParseMgmtRtgRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 3039   ZDO_MgmtRtgRsp_t *pRsp;
// 3040   uint8 status;
// 3041   uint8 rtgCount = 0;
        MOV     ?V2,#0x0
// 3042   uint8 startIndex = 0;
        MOV     ?V1,#0x0
// 3043   uint8 rtgListCount = 0;
        MOV     ?V0,#0x0
// 3044   uint8 *msg;
// 3045 
// 3046   msg = inMsg->asdu;
        LCALL   ?Subroutine55 & 0xFFFF
// 3047 
// 3048   status = *msg++;
??CrossCallReturnLabel_437:
        MOV     ?V3,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 3049   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtRtgRsp_0
// 3050   {
// 3051     rtgCount = *msg++;
        LCALL   ??Subroutine165_0 & 0xFFFF
// 3052     startIndex = *msg++;
??CrossCallReturnLabel_266:
        MOV     ?V1,A
        INC     DPTR
// 3053     rtgListCount = *msg++;
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        INC     R6
        INC     R6
        INC     R6
        MOV     R7,DPH
// 3054   }
// 3055 
// 3056   // Allocate a buffer big enough to handle the list
// 3057   pRsp = (ZDO_MgmtRtgRsp_t *)osal_mem_alloc(
// 3058           sizeof( ZDO_MgmtRtgRsp_t ) + (rtgListCount * sizeof( rtgItem_t )) );
??ZDO_ParseMgmtRtgRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0
        MOV     B,#0x7
        LCALL   ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_175:
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
// 3059   if ( pRsp )
        MOV     A,R2
        ORL     A,R3
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmtRtgRsp_1 & 0xFFFF
// 3060   {
// 3061     uint8 x;
// 3062     rtgItem_t *pList = pRsp->list;
        MOV     A,R2
        ADD     A,#0x4
        MOV     R0,A
        CLR     A
        ADDC    A,R3
        MOV     R1,A
// 3063     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V3
        MOVX    @DPTR,A
// 3064     pRsp->rtgCount = rtgCount;
        INC     DPTR
        MOV     A,?V2
        LCALL   ?Subroutine40 & 0xFFFF
// 3065     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_63:
        MOV     A,?V1
        LCALL   ?Subroutine32 & 0xFFFF
// 3066     pRsp->rtgListCount = rtgListCount;
??CrossCallReturnLabel_45:
        MOV     A,?V0
        MOVX    @DPTR,A
// 3067 
// 3068     for ( x = 0; x < rtgListCount; x++ )
        MOV     ?V1,#0x0
        SJMP    ??ZDO_ParseMgmtRtgRsp_2
// 3069     {
// 3070       uint8 statOpt;
// 3071 
// 3072       pList->dstAddress = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtRtgRsp_3:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine165_0 & 0xFFFF
??CrossCallReturnLabel_267:
        MOV     R5,A
        MOV     A,?V2
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine204_0 & 0xFFFF
// 3073       msg += 2;
??CrossCallReturnLabel_473:
        JNC     ??ZDO_ParseMgmtRtgRsp_4
        INC     R7
// 3074       statOpt = *msg++;
??ZDO_ParseMgmtRtgRsp_4:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 3075       pList->status = (statOpt & 0x07);
        MOV     A,#0x7
        ANL     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3076       pList->options = ((statOpt >> 3) & 0x07);
        MOV     A,R4
        RRC     A
        RRC     A
        RRC     A
        ANL     A,#0x1f
        ANL     A,#0x7
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine49 & 0xFFFF
// 3077       pList->nextHopAddress = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_366:
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,?V2
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine204_0 & 0xFFFF
// 3078       msg += 2;
??CrossCallReturnLabel_474:
        JNC     ??ZDO_ParseMgmtRtgRsp_5
        INC     R7
// 3079       pList++;
??ZDO_ParseMgmtRtgRsp_5:
        MOV     A,R0
        ADD     A,#0x7
        MOV     R0,A
        JNC     ??ZDO_ParseMgmtRtgRsp_6
        INC     R1
// 3080     }
??ZDO_ParseMgmtRtgRsp_6:
        INC     ?V1
??ZDO_ParseMgmtRtgRsp_2:
        MOV     A,?V1
        CLR     C
        SUBB    A,?V0
        JC      ??ZDO_ParseMgmtRtgRsp_3
// 3081   }
// 3082 
// 3083   return ( pRsp );
??ZDO_ParseMgmtRtgRsp_1:
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock888
// 3084 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine106:
          CFI Block cfiCond889 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_174
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond890 Using cfiCommon0
          CFI (cfiCond890) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond890) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond890) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond890) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond890) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond890) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond890) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond890) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond890) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond890) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond890) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond890) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond890) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond890) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond890) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond890) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond890) CFA_SP SP+-2
          CFI (cfiCond890) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond891 Using cfiCommon0
          CFI (cfiCond891) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond891) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond891) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond891) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond891) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond891) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond891) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond891) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond891) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond891) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond891) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond891) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond891) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond891) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond891) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond891) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond891) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond891) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond891) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond891) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond891) CFA_SP SP+-2
          CFI (cfiCond891) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker892 Using cfiCommon1
          CFI (cfiPicker892) NoFunction
          CFI (cfiPicker892) Picker
        MUL     AB
        MOV     R1,B
        LCALL   ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_448:
        ADDC    A,R1
        MOV     R3,A
        RET
          CFI EndBlock cfiCond889
          CFI EndBlock cfiCond890
          CFI EndBlock cfiCond891
          CFI EndBlock cfiPicker892

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine146:
          CFI Block cfiCond893 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_449
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond894 Using cfiCommon0
          CFI (cfiCond894) Function ZDO_ParseUserDescRsp
          CFI (cfiCond894) Conditional ??CrossCallReturnLabel_450
          CFI (cfiCond894) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond894) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond894) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond894) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond894) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond894) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond894) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond894) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond894) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond894) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond894) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond894) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond894) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond894) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond894) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond894) CFA_SP SP+-2
          CFI (cfiCond894) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker895 Using cfiCommon1
          CFI (cfiPicker895) NoFunction
          CFI (cfiPicker895) Picker
        MOV     R4,?V2
        MOV     R5,#0x0
        MOV     A,R6
          CFI EndBlock cfiCond893
          CFI EndBlock cfiCond894
          CFI EndBlock cfiPicker895
        REQUIRE ??Subroutine199_0
        ; // Fall through to label ??Subroutine199_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine199_0:
          CFI Block cfiCond896 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_445
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond897 Using cfiCommon0
          CFI (cfiCond897) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond897) Conditional ??CrossCallReturnLabel_446
          CFI (cfiCond897) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond897) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond897) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond897) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond897) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond897) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond897) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond897) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond897) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond897) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond897) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond897) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond897) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond897) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond897) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond897) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond897) CFA_SP SP+-2
          CFI (cfiCond897) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond898 Using cfiCommon0
          CFI (cfiCond898) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond898) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_174
          CFI (cfiCond898) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond898) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond898) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond898) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond898) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond898) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond898) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond898) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond898) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond898) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond898) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond898) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond898) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond898) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond898) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond898) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond898) CFA_SP SP+-4
          CFI (cfiCond898) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond899 Using cfiCommon0
          CFI (cfiCond899) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond899) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_175
          CFI (cfiCond899) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond899) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond899) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond899) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond899) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond899) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond899) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond899) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond899) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond899) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond899) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond899) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond899) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond899) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond899) CFA_SP SP+-4
          CFI (cfiCond899) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond900 Using cfiCommon0
          CFI (cfiCond900) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond900) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_176
          CFI (cfiCond900) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond900) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond900) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond900) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond900) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond900) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond900) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond900) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond900) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond900) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond900) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond900) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond900) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond900) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond900) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond900) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond900) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond900) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond900) CFA_SP SP+-4
          CFI (cfiCond900) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond901 Using cfiCommon0
          CFI (cfiCond901) Function ZDO_ParseUserDescRsp
          CFI (cfiCond901) Conditional ??CrossCallReturnLabel_447
          CFI (cfiCond901) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond901) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond901) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond901) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond901) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond901) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond901) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond901) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond901) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond901) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond901) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond901) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond901) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond901) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond901) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond901) CFA_SP SP+-2
          CFI (cfiCond901) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond902 Using cfiCommon0
          CFI (cfiCond902) Function ZDO_ParseEPListRsp
          CFI (cfiCond902) Conditional ??CrossCallReturnLabel_449
          CFI (cfiCond902) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond902) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond902) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond902) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond902) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond902) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond902) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond902) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond902) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond902) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond902) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond902) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond902) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond902) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond902) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond902) CFA_SP SP+-2
          CFI (cfiCond902) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond903 Using cfiCommon0
          CFI (cfiCond903) Function ZDO_ParseUserDescRsp
          CFI (cfiCond903) Conditional ??CrossCallReturnLabel_450
          CFI (cfiCond903) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond903) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond903) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond903) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond903) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond903) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond903) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond903) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond903) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond903) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond903) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond903) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond903) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond903) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond903) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond903) CFA_SP SP+-2
          CFI (cfiCond903) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker904 Using cfiCommon1
          CFI (cfiPicker904) NoFunction
          CFI (cfiPicker904) Picker
        ADD     A,#0x4
        MOV     R2,A
        CLR     A
        RET
          CFI EndBlock cfiCond896
          CFI EndBlock cfiCond897
          CFI EndBlock cfiCond898
          CFI EndBlock cfiCond899
          CFI EndBlock cfiCond900
          CFI EndBlock cfiCond901
          CFI EndBlock cfiCond902
          CFI EndBlock cfiCond903
          CFI EndBlock cfiPicker904
// 3085 
// 3086 /*********************************************************************
// 3087  * @fn          ZDO_ParseMgmtBindRsp
// 3088  *
// 3089  * @brief       This function parses the incoming Management
// 3090  *              Binding response.
// 3091  *
// 3092  * @param       inMsg - pointer to message to parse
// 3093  *
// 3094  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3095  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3096  *          by the calling function [osal_mem_free()].
// 3097  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3098 ZDO_MgmtBindRsp_t *ZDO_ParseMgmtBindRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtBindRsp:
          CFI Block cfiBlock905 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
        CODE
// 3099 {
        FUNCALL ZDO_ParseMgmtBindRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
// 3100   ZDO_MgmtBindRsp_t *pRsp;
// 3101   uint8 status;
// 3102   uint8 bindingCount = 0;
        MOV     ?V6,#0x0
// 3103   uint8 startIndex = 0;
        MOV     ?V5,#0x0
// 3104   uint8 bindingListCount = 0;
        MOV     ?V4,#0x0
// 3105   uint8 *msg;
// 3106 
// 3107   msg = inMsg->asdu;
        LCALL   ??Subroutine187_0 & 0xFFFF
??CrossCallReturnLabel_380:
        LCALL   ?Subroutine72 & 0xFFFF
// 3108 
// 3109   status = *msg++;
??CrossCallReturnLabel_270:
        MOV     DPL,?V2
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V7,A
        INC     DPTR
        MOV     ?V2,DPL
        MOV     ?V3,DPH
// 3110   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtBindRsp_0
// 3111   {
// 3112     bindingCount = *msg++;
        LCALL   ?Subroutine69 & 0xFFFF
// 3113     startIndex = *msg++;
// 3114     bindingListCount = *msg++;
// 3115   }
??CrossCallReturnLabel_115:
        MOV     ?V2,DPL
        MOV     ?V3,DPH
// 3116 
// 3117   // Allocate a buffer big enough to handle the list
// 3118   pRsp = (ZDO_MgmtBindRsp_t *)osal_mem_alloc(
// 3119           (sizeof ( ZDO_MgmtBindRsp_t ) + (bindingListCount * sizeof( apsBindingItem_t ))) );
??ZDO_ParseMgmtBindRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V4
        MOV     B,#0x15
        LCALL   ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_176:
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
// 3120   if ( pRsp )
        MOV     A,R2
        ORL     A,?V1
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmtBindRsp_1 & 0xFFFF
// 3121   {
// 3122     uint8 x;
// 3123     apsBindingItem_t *pList = pRsp->list;
        MOV     A,R2
        ADD     A,#0x4
        MOV     R6,A
        CLR     A
        ADDC    A,?V1
        MOV     R7,A
// 3124     pRsp->status = status;
        LCALL   ?Subroutine16 & 0xFFFF
// 3125     pRsp->bindingCount = bindingCount;
// 3126     pRsp->startIndex = startIndex;
// 3127     pRsp->bindingListCount = bindingListCount;
// 3128 
// 3129     for ( x = 0; x < bindingListCount; x++ )
??CrossCallReturnLabel_15:
        SJMP    ??ZDO_ParseMgmtBindRsp_2
// 3130     {
// 3131       osal_cpyExtAddr( pList->srcAddr, msg );
// 3132       msg += Z_EXTADDR_LEN;
// 3133       pList->srcEP = *msg++;
// 3134 
// 3135       // Get the Cluster ID
// 3136 
// 3137       pList->clusterID = BUILD_UINT16( msg[0], msg[1] );
// 3138       msg += 2;
// 3139       pList->dstAddr.addrMode = *msg++;
// 3140       if ( pList->dstAddr.addrMode == Addr64Bit )
// 3141       {
// 3142         osal_cpyExtAddr( pList->dstAddr.addr.extAddr, msg );
// 3143         msg += Z_EXTADDR_LEN;
// 3144         pList->dstEP = *msg++;
// 3145       }
// 3146       else
// 3147       {
// 3148         pList->dstAddr.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtBindRsp_3:
        LCALL   ?Subroutine80 & 0xFFFF
// 3149         msg += 2;
// 3150       }
??CrossCallReturnLabel_131:
        MOV     R0,A
        MOV     A,R6
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_192:
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,R0
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_64:
        JNC     ??ZDO_ParseMgmtBindRsp_4
        INC     ?V3
// 3151 
// 3152       pList++;
??ZDO_ParseMgmtBindRsp_4:
        MOV     A,R6
        ADD     A,#0x15
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtBindRsp_5
        INC     R7
??ZDO_ParseMgmtBindRsp_5:
        INC     ?V5
??ZDO_ParseMgmtBindRsp_2:
        MOV     A,?V5
        CLR     C
        SUBB    A,?V4
        JC      $+5
        LJMP    ??ZDO_ParseMgmtBindRsp_1 & 0xFFFF
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V2
        MOV     R5,?V3
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay  ; Banked call to: sAddrExtCpy
        MOV     A,?V2
        ADD     A,#0x8
        MOV     ?V2,A
        JNC     ??ZDO_ParseMgmtBindRsp_6
        INC     ?V3
??ZDO_ParseMgmtBindRsp_6:
        MOV     DPL,A
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_18:
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_132:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_65:
        JNC     ??ZDO_ParseMgmtBindRsp_7
        INC     ?V3
??ZDO_ParseMgmtBindRsp_7:
        MOV     DPL,A
        MOV     DPH,?V3
        MOVX    A,@DPTR
        MOV     R0,A
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_153:
        MOV     A,R0
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_19:
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDO_ParseMgmtBindRsp_3
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V2
        MOV     R5,?V3
        MOV     A,R6
        ADD     A,#0xb
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay  ; Banked call to: sAddrExtCpy
        MOV     A,?V2
        ADD     A,#0x8
        MOV     ?V2,A
        JNC     ??ZDO_ParseMgmtBindRsp_8
        INC     ?V3
??ZDO_ParseMgmtBindRsp_8:
        MOV     DPL,A
        MOV     DPH,?V3
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        LCALL   ?Subroutine117 & 0xFFFF
// 3153     }
// 3154   }
??CrossCallReturnLabel_194:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_20:
        LJMP    ??ZDO_ParseMgmtBindRsp_4 & 0xFFFF
// 3155 
// 3156   return ( pRsp );
??ZDO_ParseMgmtBindRsp_1:
        MOV     R2,?V0
        MOV     R3,?V1
        LJMP    ?Subroutine8 & 0xFFFF
          CFI EndBlock cfiBlock905
// 3157 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine117:
          CFI Block cfiCond906 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_193
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond907 Using cfiCommon0
          CFI (cfiCond907) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond907) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond907) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond907) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond907) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond907) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond907) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond907) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond907) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond907) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond907) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond907) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond907) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond907) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond907) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond907) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond907) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond907) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond907) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond907) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond907) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker908 Using cfiCommon1
          CFI (cfiPicker908) NoFunction
          CFI (cfiPicker908) Picker
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_263:
        RET
          CFI EndBlock cfiCond906
          CFI EndBlock cfiCond907
          CFI EndBlock cfiPicker908

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond909 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_130
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond910 Using cfiCommon0
          CFI (cfiCond910) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond910) Conditional ??CrossCallReturnLabel_131
          CFI (cfiCond910) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond910) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond910) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond910) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond910) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond910) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond910) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond910) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond910) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond910) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond910) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond910) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond910) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond910) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond910) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond910) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond910) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond910) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond910) CFA_SP SP+-2
          CFI (cfiCond910) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond911 Using cfiCommon0
          CFI (cfiCond911) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond911) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond911) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond911) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond911) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond911) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond911) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond911) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond911) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond911) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond911) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond911) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond911) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond911) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond911) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond911) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond911) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond911) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond911) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond911) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond911) CFA_SP SP+-2
          CFI (cfiCond911) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker912 Using cfiCommon1
          CFI (cfiPicker912) NoFunction
          CFI (cfiPicker912) Picker
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_220:
        RET
          CFI EndBlock cfiCond909
          CFI EndBlock cfiCond910
          CFI EndBlock cfiCond911
          CFI EndBlock cfiPicker912

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine131:
          CFI Block cfiCond913 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond914 Using cfiCommon0
          CFI (cfiCond914) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond914) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_12
          CFI (cfiCond914) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond914) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond914) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond914) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond914) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond914) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond914) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond914) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond914) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond914) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond914) CFA_SP SP+-4
          CFI (cfiCond914) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond915 Using cfiCommon0
          CFI (cfiCond915) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond915) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_13
          CFI (cfiCond915) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond915) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond915) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond915) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond915) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond915) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond915) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond915) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond915) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond915) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond915) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond915) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond915) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond915) CFA_SP SP+-4
          CFI (cfiCond915) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond916 Using cfiCommon0
          CFI (cfiCond916) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond916) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_128
          CFI (cfiCond916) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond916) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond916) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond916) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond916) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond916) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond916) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond916) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond916) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond916) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond916) CFA_SP SP+-4
          CFI (cfiCond916) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond917 Using cfiCommon0
          CFI (cfiCond917) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond917) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_129
          CFI (cfiCond917) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond917) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond917) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond917) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond917) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond917) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond917) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond917) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond917) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond917) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond917) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond917) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond917) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond917) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond917) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond917) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond917) CFA_SP SP+-4
          CFI (cfiCond917) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond918 Using cfiCommon0
          CFI (cfiCond918) Function ZDO_ParseAddrRsp
          CFI (cfiCond918) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_130
          CFI (cfiCond918) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond918) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond918) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond918) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond918) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond918) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond918) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond918) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond918) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond918) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond918) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond918) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond918) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond918) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond918) CFA_SP SP+-4
          CFI (cfiCond918) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond919 Using cfiCommon0
          CFI (cfiCond919) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond919) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_131
          CFI (cfiCond919) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond919) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond919) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond919) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond919) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond919) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond919) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond919) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond919) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond919) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond919) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond919) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond919) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond919) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond919) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond919) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond919) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond919) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond919) CFA_SP SP+-4
          CFI (cfiCond919) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond920 Using cfiCommon0
          CFI (cfiCond920) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond920) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_132
          CFI (cfiCond920) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond920) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond920) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond920) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond920) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond920) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond920) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond920) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond920) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond920) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond920) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond920) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond920) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond920) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond920) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond920) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond920) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond920) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond920) CFA_SP SP+-4
          CFI (cfiCond920) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond921 Using cfiCommon0
          CFI (cfiCond921) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond921) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_104
          CFI (cfiCond921) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond921) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond921) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond921) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond921) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond921) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond921) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond921) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond921) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond921) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond921) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond921) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond921) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond921) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond921) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond921) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond921) CFA_SP SP+-4
          CFI (cfiCond921) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond922 Using cfiCommon0
          CFI (cfiCond922) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond922) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_105
          CFI (cfiCond922) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond922) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond922) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond922) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond922) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond922) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond922) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond922) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond922) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond922) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond922) CFA_SP SP+-4
          CFI (cfiCond922) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker923 Using cfiCommon1
          CFI (cfiPicker923) NoFunction
          CFI (cfiPicker923) Picker
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_483:
        MOV     R1,A
        MOV     A,R2
        RET
          CFI EndBlock cfiCond913
          CFI EndBlock cfiCond914
          CFI EndBlock cfiCond915
          CFI EndBlock cfiCond916
          CFI EndBlock cfiCond917
          CFI EndBlock cfiCond918
          CFI EndBlock cfiCond919
          CFI EndBlock cfiCond920
          CFI EndBlock cfiCond921
          CFI EndBlock cfiCond922
          CFI EndBlock cfiPicker923

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine157:
          CFI Block cfiCond924 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond925 Using cfiCommon0
          CFI (cfiCond925) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond925) Conditional ??CrossCallReturnLabel_481, ??CrossCallReturnLabel_103
          CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond925) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond925) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond925) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond925) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond925) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond925) CFA_SP SP+-4
          CFI (cfiCond925) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond926 Using cfiCommon0
          CFI (cfiCond926) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond926) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_127
          CFI (cfiCond926) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond926) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond926) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond926) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond926) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond926) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond926) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond926) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond926) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond926) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond926) CFA_SP SP+-4
          CFI (cfiCond926) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond927 Using cfiCommon0
          CFI (cfiCond927) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond927) Conditional ??CrossCallReturnLabel_482, ??CrossCallReturnLabel_126
          CFI (cfiCond927) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond927) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond927) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond927) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond927) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond927) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond927) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond927) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond927) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond927) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond927) CFA_SP SP+-4
          CFI (cfiCond927) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond928 Using cfiCommon0
          CFI (cfiCond928) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond928) Conditional ??CrossCallReturnLabel_480
          CFI (cfiCond928) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond928) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond928) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond928) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond928) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond928) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond928) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond928) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond928) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond928) CFA_SP SP+-2
          CFI (cfiCond928) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond929 Using cfiCommon0
          CFI (cfiCond929) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond929) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_11
          CFI (cfiCond929) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond929) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond929) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond929) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond929) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond929) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond929) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond929) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond929) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond929) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond929) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond929) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond929) CFA_SP SP+-6
          CFI (cfiCond929) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond930 Using cfiCommon0
          CFI (cfiCond930) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond930) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_12
          CFI (cfiCond930) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond930) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond930) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond930) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond930) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond930) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond930) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond930) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond930) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond930) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond930) CFA_SP SP+-6
          CFI (cfiCond930) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond931 Using cfiCommon0
          CFI (cfiCond931) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond931) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_13
          CFI (cfiCond931) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond931) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond931) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond931) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond931) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond931) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond931) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond931) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond931) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond931) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond931) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond931) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond931) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond931) CFA_SP SP+-6
          CFI (cfiCond931) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond932 Using cfiCommon0
          CFI (cfiCond932) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond932) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_128
          CFI (cfiCond932) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond932) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond932) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond932) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond932) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond932) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond932) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond932) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond932) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond932) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond932) CFA_SP SP+-6
          CFI (cfiCond932) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond933 Using cfiCommon0
          CFI (cfiCond933) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond933) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_129
          CFI (cfiCond933) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond933) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond933) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond933) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond933) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond933) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond933) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond933) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond933) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond933) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond933) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond933) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond933) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond933) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond933) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond933) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond933) CFA_SP SP+-6
          CFI (cfiCond933) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond934 Using cfiCommon0
          CFI (cfiCond934) Function ZDO_ParseAddrRsp
          CFI (cfiCond934) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_130
          CFI (cfiCond934) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond934) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond934) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond934) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond934) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond934) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond934) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond934) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond934) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond934) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond934) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond934) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond934) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond934) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond934) CFA_SP SP+-6
          CFI (cfiCond934) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond935 Using cfiCommon0
          CFI (cfiCond935) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond935) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_131
          CFI (cfiCond935) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond935) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond935) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond935) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond935) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond935) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond935) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond935) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond935) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond935) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond935) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond935) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond935) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond935) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond935) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond935) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond935) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond935) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond935) CFA_SP SP+-6
          CFI (cfiCond935) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond936 Using cfiCommon0
          CFI (cfiCond936) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond936) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_132
          CFI (cfiCond936) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond936) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond936) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond936) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond936) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond936) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond936) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond936) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond936) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond936) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond936) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond936) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond936) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond936) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond936) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond936) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond936) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond936) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond936) CFA_SP SP+-6
          CFI (cfiCond936) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond937 Using cfiCommon0
          CFI (cfiCond937) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond937) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_104
          CFI (cfiCond937) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond937) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond937) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond937) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond937) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond937) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond937) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond937) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond937) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond937) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond937) CFA_SP SP+-6
          CFI (cfiCond937) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond938 Using cfiCommon0
          CFI (cfiCond938) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond938) Conditional ??CrossCallReturnLabel_483, ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_105
          CFI (cfiCond938) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond938) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond938) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond938) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond938) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond938) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond938) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond938) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond938) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond938) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond938) CFA_SP SP+-6
          CFI (cfiCond938) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond939 Using cfiCommon0
          CFI (cfiCond939) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond939) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_465
          CFI (cfiCond939) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond939) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond939) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond939) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond939) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond939) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond939) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond939) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond939) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond939) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond939) CFA_SP SP+-4
          CFI (cfiCond939) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond940 Using cfiCommon0
          CFI (cfiCond940) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond940) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_466
          CFI (cfiCond940) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond940) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond940) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond940) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond940) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond940) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond940) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond940) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond940) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond940) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond940) CFA_SP SP+-4
          CFI (cfiCond940) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond941 Using cfiCommon0
          CFI (cfiCond941) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond941) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_462
          CFI (cfiCond941) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond941) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond941) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond941) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond941) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond941) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond941) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond941) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond941) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond941) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond941) CFA_SP SP+-4
          CFI (cfiCond941) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond942 Using cfiCommon0
          CFI (cfiCond942) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond942) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_463
          CFI (cfiCond942) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond942) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond942) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond942) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond942) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond942) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond942) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond942) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond942) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond942) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond942) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond942) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond942) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond942) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond942) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond942) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond942) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond942) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond942) CFA_SP SP+-4
          CFI (cfiCond942) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond943 Using cfiCommon0
          CFI (cfiCond943) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond943) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_464
          CFI (cfiCond943) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond943) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond943) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond943) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond943) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond943) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond943) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond943) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond943) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond943) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond943) CFA_SP SP+-4
          CFI (cfiCond943) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond944 Using cfiCommon0
          CFI (cfiCond944) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond944) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_451
          CFI (cfiCond944) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond944) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond944) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond944) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond944) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond944) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond944) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond944) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond944) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond944) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond944) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond944) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond944) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond944) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond944) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond944) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond944) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond944) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond944) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond944) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond944) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond944) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond944) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond944) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond944) CFA_SP SP+-4
          CFI (cfiCond944) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond945 Using cfiCommon0
          CFI (cfiCond945) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond945) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_452
          CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond945) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond945) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond945) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond945) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond945) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond945) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond945) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond945) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond945) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond945) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond945) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond945) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond945) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond945) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond945) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond945) CFA_SP SP+-4
          CFI (cfiCond945) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond946 Using cfiCommon0
          CFI (cfiCond946) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond946) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_453
          CFI (cfiCond946) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond946) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond946) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond946) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond946) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond946) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond946) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond946) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond946) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond946) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond946) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond946) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond946) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond946) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond946) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond946) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond946) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond946) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond946) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond946) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond946) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond946) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond946) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond946) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond946) CFA_SP SP+-4
          CFI (cfiCond946) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond947 Using cfiCommon0
          CFI (cfiCond947) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond947) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_454
          CFI (cfiCond947) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond947) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond947) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond947) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond947) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond947) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond947) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond947) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond947) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond947) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond947) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond947) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond947) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond947) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond947) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond947) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond947) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond947) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond947) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond947) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond947) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond947) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond947) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond947) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond947) CFA_SP SP+-4
          CFI (cfiCond947) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond948 Using cfiCommon0
          CFI (cfiCond948) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond948) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_455
          CFI (cfiCond948) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond948) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond948) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond948) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond948) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond948) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond948) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond948) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond948) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond948) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond948) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond948) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond948) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond948) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond948) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond948) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond948) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond948) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond948) CFA_SP SP+-4
          CFI (cfiCond948) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond949 Using cfiCommon0
          CFI (cfiCond949) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond949) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_456
          CFI (cfiCond949) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond949) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond949) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond949) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond949) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond949) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond949) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond949) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond949) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond949) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond949) CFA_SP SP+-4
          CFI (cfiCond949) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond950 Using cfiCommon0
          CFI (cfiCond950) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond950) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_457
          CFI (cfiCond950) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond950) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond950) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond950) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond950) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond950) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond950) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond950) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond950) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond950) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond950) CFA_SP SP+-4
          CFI (cfiCond950) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond951 Using cfiCommon0
          CFI (cfiCond951) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond951) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_458
          CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond951) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond951) CFA_SP SP+-4
          CFI (cfiCond951) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond952 Using cfiCommon0
          CFI (cfiCond952) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond952) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_459
          CFI (cfiCond952) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond952) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond952) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond952) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond952) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond952) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond952) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond952) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond952) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond952) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond952) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond952) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond952) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond952) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond952) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond952) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond952) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond952) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond952) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond952) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond952) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond952) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond952) CFA_SP SP+-4
          CFI (cfiCond952) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond953 Using cfiCommon0
          CFI (cfiCond953) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond953) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_460
          CFI (cfiCond953) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond953) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond953) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond953) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond953) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond953) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond953) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond953) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond953) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond953) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond953) CFA_SP SP+-4
          CFI (cfiCond953) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond954 Using cfiCommon0
          CFI (cfiCond954) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond954) Conditional ??CrossCallReturnLabel_484, ??CrossCallReturnLabel_461
          CFI (cfiCond954) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond954) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond954) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond954) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond954) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond954) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond954) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond954) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond954) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond954) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond954) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond954) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond954) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond954) CFA_SP SP+-4
          CFI (cfiCond954) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond955 Using cfiCommon0
          CFI (cfiCond955) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond955) Conditional ??CrossCallReturnLabel_485, ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_94
          CFI (cfiCond955) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond955) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond955) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond955) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond955) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond955) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond955) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond955) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond955) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond955) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond955) CFA_SP SP+-8
          CFI (cfiCond955) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond956 Using cfiCommon0
          CFI (cfiCond956) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond956) Conditional ??CrossCallReturnLabel_485, ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_95
          CFI (cfiCond956) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond956) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond956) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond956) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond956) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond956) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond956) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond956) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond956) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond956) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond956) CFA_SP SP+-8
          CFI (cfiCond956) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond957 Using cfiCommon0
          CFI (cfiCond957) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond957) Conditional ??CrossCallReturnLabel_485, ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_100
          CFI (cfiCond957) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond957) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond957) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond957) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond957) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond957) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond957) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond957) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond957) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond957) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond957) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond957) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond957) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond957) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond957) CFA_SP SP+-8
          CFI (cfiCond957) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond958 Using cfiCommon0
          CFI (cfiCond958) Function ZDO_ProcessUserDescReq
          CFI (cfiCond958) Conditional ??CrossCallReturnLabel_485, ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_101
          CFI (cfiCond958) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond958) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond958) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond958) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond958) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond958) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond958) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond958) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond958) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond958) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond958) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond958) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond958) CFA_SP SP+-8
          CFI (cfiCond958) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond959 Using cfiCommon0
          CFI (cfiCond959) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond959) Conditional ??CrossCallReturnLabel_485, ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_476
          CFI (cfiCond959) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond959) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond959) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond959) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond959) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond959) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond959) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond959) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond959) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond959) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond959) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond959) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond959) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond959) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond959) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond959) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond959) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond959) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond959) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond959) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond959) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond959) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond959) CFA_SP SP+-6
          CFI (cfiCond959) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond960 Using cfiCommon0
          CFI (cfiCond960) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond960) Conditional ??CrossCallReturnLabel_485, ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_477
          CFI (cfiCond960) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond960) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond960) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond960) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond960) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond960) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond960) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond960) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond960) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond960) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond960) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond960) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond960) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond960) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond960) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond960) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond960) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond960) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond960) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond960) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond960) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond960) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond960) CFA_SP SP+-6
          CFI (cfiCond960) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond961 Using cfiCommon0
          CFI (cfiCond961) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond961) Conditional ??CrossCallReturnLabel_485, ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_475
          CFI (cfiCond961) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond961) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond961) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond961) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond961) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond961) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond961) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond961) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond961) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond961) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond961) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond961) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond961) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond961) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond961) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond961) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond961) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond961) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond961) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond961) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond961) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond961) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond961) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond961) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond961) CFA_SP SP+-6
          CFI (cfiCond961) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker962 Using cfiCommon1
          CFI (cfiPicker962) NoFunction
          CFI (cfiPicker962) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond924
          CFI EndBlock cfiCond925
          CFI EndBlock cfiCond926
          CFI EndBlock cfiCond927
          CFI EndBlock cfiCond928
          CFI EndBlock cfiCond929
          CFI EndBlock cfiCond930
          CFI EndBlock cfiCond931
          CFI EndBlock cfiCond932
          CFI EndBlock cfiCond933
          CFI EndBlock cfiCond934
          CFI EndBlock cfiCond935
          CFI EndBlock cfiCond936
          CFI EndBlock cfiCond937
          CFI EndBlock cfiCond938
          CFI EndBlock cfiCond939
          CFI EndBlock cfiCond940
          CFI EndBlock cfiCond941
          CFI EndBlock cfiCond942
          CFI EndBlock cfiCond943
          CFI EndBlock cfiCond944
          CFI EndBlock cfiCond945
          CFI EndBlock cfiCond946
          CFI EndBlock cfiCond947
          CFI EndBlock cfiCond948
          CFI EndBlock cfiCond949
          CFI EndBlock cfiCond950
          CFI EndBlock cfiCond951
          CFI EndBlock cfiCond952
          CFI EndBlock cfiCond953
          CFI EndBlock cfiCond954
          CFI EndBlock cfiCond955
          CFI EndBlock cfiCond956
          CFI EndBlock cfiCond957
          CFI EndBlock cfiCond958
          CFI EndBlock cfiCond959
          CFI EndBlock cfiCond960
          CFI EndBlock cfiCond961
          CFI EndBlock cfiPicker962

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond963 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_114
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond964 Using cfiCommon0
          CFI (cfiCond964) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond964) Conditional ??CrossCallReturnLabel_115
          CFI (cfiCond964) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond964) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond964) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond964) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond964) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond964) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond964) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond964) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond964) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond964) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond964) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond964) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond964) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond964) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond964) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond964) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond964) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond964) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond964) CFA_SP SP+-2
          CFI (cfiCond964) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker965 Using cfiCommon1
          CFI (cfiPicker965) NoFunction
          CFI (cfiPicker965) Picker
        MOVX    A,@DPTR
        MOV     ?V6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V4,A
        INC     DPTR
        RET
          CFI EndBlock cfiCond963
          CFI EndBlock cfiCond964
          CFI EndBlock cfiPicker965

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond966 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_64
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond967 Using cfiCommon0
          CFI (cfiCond967) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond967) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond967) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond967) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond967) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond967) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond967) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond967) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond967) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond967) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond967) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond967) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond967) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond967) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond967) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond967) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond967) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond967) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond967) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond967) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond967) CFA_SP SP+-2
          CFI (cfiCond967) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker968 Using cfiCommon1
          CFI (cfiPicker968) NoFunction
          CFI (cfiPicker968) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,?V2
        ADD     A,#0x2
        MOV     ?V2,A
        RET
          CFI EndBlock cfiCond966
          CFI EndBlock cfiCond967
          CFI EndBlock cfiPicker968

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond969 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_18
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond970 Using cfiCommon0
          CFI (cfiCond970) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond970) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond970) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond970) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond970) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond970) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond970) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond970) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond970) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond970) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond970) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond970) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond970) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond970) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond970) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond970) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond970) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond970) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond970) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond970) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond970) CFA_SP SP+-2
          CFI (cfiCond970) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond971 Using cfiCommon0
          CFI (cfiCond971) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond971) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond971) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond971) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond971) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond971) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond971) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond971) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond971) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond971) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond971) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond971) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond971) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond971) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond971) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond971) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond971) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond971) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond971) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond971) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond971) CFA_SP SP+-2
          CFI (cfiCond971) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker972 Using cfiCommon1
          CFI (cfiPicker972) NoFunction
          CFI (cfiPicker972) Picker
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_212:
        MOV     ?V2,DPL
        MOV     ?V3,DPH
        RET
          CFI EndBlock cfiCond969
          CFI EndBlock cfiCond970
          CFI EndBlock cfiCond971
          CFI EndBlock cfiPicker972

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine128:
          CFI Block cfiCond973 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_30
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond974 Using cfiCommon0
          CFI (cfiCond974) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond974) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_31
          CFI (cfiCond974) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond974) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond974) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond974) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond974) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond974) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond974) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond974) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond974) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond974) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond974) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond974) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond974) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond974) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond974) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond974) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond974) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond974) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond974) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond974) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond974) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond974) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond974) CFA_SP SP+-4
          CFI (cfiCond974) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond975 Using cfiCommon0
          CFI (cfiCond975) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond975) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_32
          CFI (cfiCond975) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond975) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond975) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond975) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond975) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond975) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond975) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond975) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond975) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond975) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond975) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond975) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond975) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond975) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond975) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond975) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond975) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond975) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond975) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond975) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond975) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond975) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond975) CFA_SP SP+-4
          CFI (cfiCond975) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond976 Using cfiCommon0
          CFI (cfiCond976) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond976) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_18
          CFI (cfiCond976) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond976) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond976) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond976) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond976) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond976) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond976) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond976) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond976) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond976) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond976) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond976) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond976) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond976) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond976) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond976) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond976) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond976) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond976) CFA_SP SP+-4
          CFI (cfiCond976) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond977 Using cfiCommon0
          CFI (cfiCond977) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond977) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_19
          CFI (cfiCond977) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond977) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond977) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond977) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond977) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond977) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond977) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond977) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond977) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond977) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond977) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond977) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond977) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond977) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond977) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond977) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond977) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond977) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond977) CFA_SP SP+-4
          CFI (cfiCond977) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond978 Using cfiCommon0
          CFI (cfiCond978) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond978) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_20
          CFI (cfiCond978) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond978) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond978) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond978) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond978) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond978) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond978) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond978) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond978) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond978) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond978) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond978) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond978) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond978) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond978) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond978) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond978) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond978) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond978) CFA_SP SP+-4
          CFI (cfiCond978) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker979 Using cfiCommon1
          CFI (cfiPicker979) NoFunction
          CFI (cfiPicker979) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        RET
          CFI EndBlock cfiCond973
          CFI EndBlock cfiCond974
          CFI EndBlock cfiCond975
          CFI EndBlock cfiCond976
          CFI EndBlock cfiCond977
          CFI EndBlock cfiCond978
          CFI EndBlock cfiPicker979

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond980 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_14
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond981 Using cfiCommon0
          CFI (cfiCond981) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond981) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond981) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond981) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond981) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond981) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond981) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond981) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond981) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond981) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond981) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond981) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond981) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond981) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond981) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond981) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond981) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond981) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond981) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond981) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond981) CFA_SP SP+-2
          CFI (cfiCond981) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker982 Using cfiCommon1
          CFI (cfiPicker982) NoFunction
          CFI (cfiPicker982) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V7
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V6
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_209:
        INC     DPTR
        MOV     A,?V5
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_206:
        MOV     A,?V4
        MOVX    @DPTR,A
        MOV     ?V5,#0x0
        RET
          CFI EndBlock cfiCond980
          CFI EndBlock cfiCond981
          CFI EndBlock cfiPicker982
// 3158 
// 3159 /*********************************************************************
// 3160  * @fn          ZDO_ParseUserDescRsp
// 3161  *
// 3162  * @brief       This function parses the incoming User
// 3163  *              Descriptor Response.
// 3164  *
// 3165  * @param       inMsg - incoming response message
// 3166  *
// 3167  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3168  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3169  *          by the calling function [osal_mem_free()].
// 3170  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3171 ZDO_UserDescRsp_t *ZDO_ParseUserDescRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseUserDescRsp:
          CFI Block cfiBlock983 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
        CODE
// 3172 {
        FUNCALL ZDO_ParseUserDescRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseUserDescRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
// 3173   ZDO_UserDescRsp_t *pRsp;
// 3174   uint8 *msg;
// 3175   uint8 descLen = 0;
        MOV     ?V2,#0x0
// 3176 
// 3177   msg = inMsg->asdu;
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_146:
        LCALL   ??Subroutine181_0 & 0xFFFF
??CrossCallReturnLabel_349:
        MOV     ?V0,R0
        MOV     ?V1,R1
// 3178 
// 3179   if ( msg[0] == ZSuccess )
        MOV     DPL,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??ZDO_ParseUserDescRsp_0
// 3180   {
// 3181     descLen = msg[3];
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V2,A
// 3182   }
// 3183 
// 3184   pRsp = (ZDO_UserDescRsp_t *)osal_mem_alloc( sizeof ( ZDO_UserDescRsp_t ) + descLen );
??ZDO_ParseUserDescRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V2
        LCALL   ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_447:
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R6,?V4
        MOV     R7,?V5
// 3185   if ( pRsp )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ParseUserDescRsp_1
// 3186   {
// 3187     pRsp->status = msg[0];
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine53 & 0xFFFF
// 3188     pRsp->nwkAddr = BUILD_UINT16( msg[1], msg[2] );
??CrossCallReturnLabel_93:
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        LCALL   ?Subroutine31 & 0xFFFF
// 3189     pRsp->length = descLen;
// 3190     if ( descLen )
??CrossCallReturnLabel_42:
        JZ      ??ZDO_ParseUserDescRsp_1
// 3191     {
// 3192       osal_memcpy( pRsp->desc, &msg[4], descLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V0
        ADD     A,#0x4
        JNC     ??ZDO_ParseUserDescRsp_2
        INC     ?V1
??ZDO_ParseUserDescRsp_2:
        MOV     ?V4,A
        MOV     ?V5,?V1
        MOV     ?V6,R0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ?Subroutine146 & 0xFFFF
// 3193     }
// 3194   }
??CrossCallReturnLabel_450:
        ADDC    A,R7
        MOV     R3,A
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 3195 
// 3196   return ( pRsp );
??ZDO_ParseUserDescRsp_1:
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock983
// 3197 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond984 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_92
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond985 Using cfiCommon0
          CFI (cfiCond985) Function ZDO_ParseUserDescRsp
          CFI (cfiCond985) Conditional ??CrossCallReturnLabel_93
          CFI (cfiCond985) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond985) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond985) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond985) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond985) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond985) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond985) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond985) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond985) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond985) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond985) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond985) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond985) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond985) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond985) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond985) CFA_SP SP+-2
          CFI (cfiCond985) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker986 Using cfiCommon1
          CFI (cfiPicker986) NoFunction
          CFI (cfiPicker986) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        RET
          CFI EndBlock cfiCond984
          CFI EndBlock cfiCond985
          CFI EndBlock cfiPicker986

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond987 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_41
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond988 Using cfiCommon0
          CFI (cfiCond988) Function ZDO_ParseUserDescRsp
          CFI (cfiCond988) Conditional ??CrossCallReturnLabel_42
          CFI (cfiCond988) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond988) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond988) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond988) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond988) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond988) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond988) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond988) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond988) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond988) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond988) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond988) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond988) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond988) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond988) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond988) CFA_SP SP+-2
          CFI (cfiCond988) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker989 Using cfiCommon1
          CFI (cfiPicker989) NoFunction
          CFI (cfiPicker989) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R2
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_371:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V2
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond987
          CFI EndBlock cfiCond988
          CFI EndBlock cfiPicker989
// 3198 
// 3199 /*********************************************************************
// 3200  * @fn          ZDO_ParseSimpleDescBuf
// 3201  *
// 3202  * @brief       Parse a byte sequence representation of a Simple Descriptor.
// 3203  *
// 3204  * @param       buf  - pointer to a byte array representing a Simple Desc.
// 3205  * @param       desc - SimpleDescriptionFormat_t *
// 3206  *
// 3207  *              This routine allocates storage for the cluster IDs because
// 3208  *              they are 16-bit and need to be aligned to be properly processed.
// 3209  *              This routine returns non-zero if an allocation fails.
// 3210  *
// 3211  *              NOTE: This means that the caller or user of the input structure
// 3212  *                    is responsible for freeing the memory
// 3213  *
// 3214  * @return      0: success
// 3215  *              1: failure due to malloc failure.
// 3216  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3217 uint8 ZDO_ParseSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_ParseSimpleDescBuf:
          CFI Block cfiBlock990 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
        CODE
// 3218 {
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        MOV     A,#-0xd
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0,R4
        MOV     ?V1,R5
// 3219   uint8 num, i;
// 3220 
// 3221   desc->EndPoint = *buf++;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_138:
        LCALL   ?Subroutine15 & 0xFFFF
// 3222   desc->AppProfId = BUILD_UINT16( buf[0], buf[1] );
??CrossCallReturnLabel_13:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine191_0 & 0xFFFF
// 3223   buf += 2;
??CrossCallReturnLabel_400:
        JNC     ??ZDO_ParseSimpleDescBuf_0
        INC     R7
// 3224   desc->AppDeviceId = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_0:
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_469:
        LCALL   ??Subroutine190_0 & 0xFFFF
// 3225   buf += 2;
??CrossCallReturnLabel_398:
        JNC     ??ZDO_ParseSimpleDescBuf_1
        INC     R7
// 3226   desc->AppDevVer = *buf >> 4;
??ZDO_ParseSimpleDescBuf_1:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
// 3227 
// 3228   desc->Reserved = 0;
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine46 & 0xFFFF
// 3229   buf++;
// 3230 
// 3231   // move in input cluster list (if any). allocate aligned memory.
// 3232   num = desc->AppNumInClusters = *buf++;
??CrossCallReturnLabel_75:
        MOVX    A,@DPTR
        MOV     ?V4,A
        INC     DPTR
        INC     R6
        INC     R6
        MOV     R7,DPH
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3233   if ( num )
        JZ      ??ZDO_ParseSimpleDescBuf_2
// 3234   {
// 3235     if (!(desc->pAppInClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        MOV     A,R4
        ADD     A,#0x7
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_182:
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_2:
        JZ      ??ZDO_ParseSimpleDescBuf_3
// 3236     {
// 3237       // malloc failed. we're done.
// 3238       return 1;
// 3239     }
// 3240     for (i=0; i<num; ++i)
        MOV     R2,#0x0
        SJMP    ??ZDO_ParseSimpleDescBuf_4
// 3241     {
// 3242       desc->pAppInClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_5:
        LCALL   ?Subroutine58 & 0xFFFF
// 3243       buf += 2;
// 3244     }
??CrossCallReturnLabel_96:
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_471:
        JNC     ??ZDO_ParseSimpleDescBuf_6
        INC     R7
??ZDO_ParseSimpleDescBuf_6:
        INC     R2
??ZDO_ParseSimpleDescBuf_4:
        MOV     A,R2
        CLR     C
        SUBB    A,?V4
        JC      ??ZDO_ParseSimpleDescBuf_5
// 3245   }
// 3246 
// 3247   // move in output cluster list (if any). allocate aligned memory.
// 3248   num = desc->AppNumOutClusters = *buf++;
??ZDO_ParseSimpleDescBuf_2:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V4,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3249   if (num)
        JZ      ??ZDO_ParseSimpleDescBuf_7
// 3250   {
// 3251     if (!(desc->pAppOutClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        MOV     A,?V0
        ADD     A,#0xa
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_183:
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        LCALL   ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_3:
        JNZ     ??ZDO_ParseSimpleDescBuf_8
// 3252     {
// 3253       // malloc failed. free input cluster list memory if there is any
// 3254       if ( desc->pAppInClusterList != NULL )
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_295:
        JZ      ??ZDO_ParseSimpleDescBuf_3
// 3255       {
// 3256         osal_mem_free(desc->pAppInClusterList);
        MOV     A,?V0
        ADD     A,#0x7
        MOV     ?V2,A
        CLR     A
        ADDC    A,?V1
        MOV     ?V3,A
        ; Setup parameters for call to function osal_mem_free
        MOV     DPL,?V2
        MOV     DPH,A
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_461:
        LCALL   ??osal_mem_free?relay; Banked call to: osal_mem_free
// 3257 
// 3258         desc->pAppInClusterList = NULL;
        MOV     DPL,?V2
        MOV     DPH,?V3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 3259       }
// 3260       return 1;
??ZDO_ParseSimpleDescBuf_3:
        MOV     R1,#0x1
        SJMP    ??ZDO_ParseSimpleDescBuf_9
// 3261     }
// 3262     for (i=0; i<num; ++i)
??ZDO_ParseSimpleDescBuf_8:
        MOV     R2,#0x0
        SJMP    ??ZDO_ParseSimpleDescBuf_10
// 3263     {
// 3264       desc->pAppOutClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_11:
        LCALL   ?Subroutine58 & 0xFFFF
// 3265       buf += 2;
// 3266     }
??CrossCallReturnLabel_97:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_472:
        JNC     ??ZDO_ParseSimpleDescBuf_12
        INC     R7
??ZDO_ParseSimpleDescBuf_12:
        INC     R2
??ZDO_ParseSimpleDescBuf_10:
        MOV     A,R2
        CLR     C
        SUBB    A,?V4
        JC      ??ZDO_ParseSimpleDescBuf_11
// 3267   }
// 3268   return 0;
??ZDO_ParseSimpleDescBuf_7:
        MOV     R1,#0x0
??ZDO_ParseSimpleDescBuf_9:
        MOV     R7,#0x5
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock990
// 3269 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine112:
          CFI Block cfiCond991 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_182
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond992 Using cfiCommon0
          CFI (cfiCond992) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond992) Conditional ??CrossCallReturnLabel_183
          CFI (cfiCond992) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond992) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond992) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond992) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond992) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond992) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond992) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond992) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond992) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond992) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond992) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond992) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond992) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond992) CFA_SP SP+-2
          CFI (cfiCond992) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker993 Using cfiCommon1
          CFI (cfiPicker993) NoFunction
          CFI (cfiPicker993) Picker
        MOV     R0,A
        CLR     A
        ADDC    A,?V1
        MOV     R1,A
        MOV     ?V2,R0
        MOV     ?V3,R1
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,?V4
        MOV     A,R2
        ADD     A,R2
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        RET
          CFI EndBlock cfiCond991
          CFI EndBlock cfiCond992
          CFI EndBlock cfiPicker993

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond994 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_465
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond995 Using cfiCommon0
          CFI (cfiCond995) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond995) Conditional ??CrossCallReturnLabel_466
          CFI (cfiCond995) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond995) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond995) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond995) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond995) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond995) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond995) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond995) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond995) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond995) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond995) CFA_SP SP+-2
          CFI (cfiCond995) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker996 Using cfiCommon1
          CFI (cfiPicker996) NoFunction
          CFI (cfiPicker996) Picker
        MOV     R4,DPL
        MOV     R5,DPH
          CFI EndBlock cfiCond994
          CFI EndBlock cfiCond995
          CFI EndBlock cfiPicker996
        REQUIRE ??Subroutine200_0
        ; // Fall through to label ??Subroutine200_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine200_0:
          CFI Block cfiCond997 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_462
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond998 Using cfiCommon0
          CFI (cfiCond998) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond998) Conditional ??CrossCallReturnLabel_463
          CFI (cfiCond998) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond998) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond998) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond998) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond998) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond998) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond998) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond998) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond998) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond998) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond998) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond998) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond998) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond998) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond998) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond998) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond998) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond998) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond998) CFA_SP SP+-2
          CFI (cfiCond998) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond999 Using cfiCommon0
          CFI (cfiCond999) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond999) Conditional ??CrossCallReturnLabel_464
          CFI (cfiCond999) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond999) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond999) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond999) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond999) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond999) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond999) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond999) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond999) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond999) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond999) CFA_SP SP+-2
          CFI (cfiCond999) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1000 Using cfiCommon0
          CFI (cfiCond1000) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1000) Conditional ??CrossCallReturnLabel_465
          CFI (cfiCond1000) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1000) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1000) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1000) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1000) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1000) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1000) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1000) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1000) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1000) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1000) CFA_SP SP+-2
          CFI (cfiCond1000) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1001 Using cfiCommon0
          CFI (cfiCond1001) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1001) Conditional ??CrossCallReturnLabel_466
          CFI (cfiCond1001) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1001) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1001) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1001) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1001) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1001) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1001) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1001) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1001) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1001) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1001) CFA_SP SP+-2
          CFI (cfiCond1001) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker1002 Using cfiCommon1
          CFI (cfiPicker1002) NoFunction
          CFI (cfiPicker1002) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond997
          CFI EndBlock cfiCond998
          CFI EndBlock cfiCond999
          CFI EndBlock cfiCond1000
          CFI EndBlock cfiCond1001
          CFI EndBlock cfiPicker1002
        REQUIRE ??Subroutine201_0
        ; // Fall through to label ??Subroutine201_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine201_0:
          CFI Block cfiCond1003 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_451
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond1004 Using cfiCommon0
          CFI (cfiCond1004) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1004) Conditional ??CrossCallReturnLabel_452
          CFI (cfiCond1004) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1004) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1004) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1004) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1004) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1004) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1004) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1004) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1004) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1004) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1004) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1004) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1004) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1004) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1004) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1004) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1004) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1004) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1004) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1004) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1004) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1004) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1004) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1004) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1004) CFA_SP SP+-2
          CFI (cfiCond1004) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond1005 Using cfiCommon0
          CFI (cfiCond1005) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1005) Conditional ??CrossCallReturnLabel_453
          CFI (cfiCond1005) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1005) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1005) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1005) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1005) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1005) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1005) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1005) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1005) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1005) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1005) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1005) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1005) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1005) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1005) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1005) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1005) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1005) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1005) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1005) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1005) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1005) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1005) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1005) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1005) CFA_SP SP+-2
          CFI (cfiCond1005) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1006 Using cfiCommon0
          CFI (cfiCond1006) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1006) Conditional ??CrossCallReturnLabel_454
          CFI (cfiCond1006) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1006) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1006) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1006) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1006) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1006) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1006) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1006) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1006) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1006) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1006) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1006) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1006) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1006) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1006) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1006) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1006) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1006) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1006) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1006) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1006) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1006) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1006) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1006) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1006) CFA_SP SP+-2
          CFI (cfiCond1006) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1007 Using cfiCommon0
          CFI (cfiCond1007) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1007) Conditional ??CrossCallReturnLabel_455
          CFI (cfiCond1007) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1007) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1007) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1007) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1007) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1007) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1007) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1007) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1007) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1007) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1007) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1007) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1007) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1007) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1007) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1007) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1007) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1007) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1007) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1007) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1007) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1007) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1007) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1007) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1007) CFA_SP SP+-2
          CFI (cfiCond1007) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1008 Using cfiCommon0
          CFI (cfiCond1008) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1008) Conditional ??CrossCallReturnLabel_456
          CFI (cfiCond1008) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1008) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1008) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1008) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1008) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1008) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1008) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1008) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1008) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1008) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1008) CFA_SP SP+-2
          CFI (cfiCond1008) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1009 Using cfiCommon0
          CFI (cfiCond1009) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1009) Conditional ??CrossCallReturnLabel_457
          CFI (cfiCond1009) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1009) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1009) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1009) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1009) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1009) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1009) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1009) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1009) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1009) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1009) CFA_SP SP+-2
          CFI (cfiCond1009) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1010 Using cfiCommon0
          CFI (cfiCond1010) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1010) Conditional ??CrossCallReturnLabel_458
          CFI (cfiCond1010) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1010) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1010) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1010) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1010) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1010) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1010) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1010) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1010) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1010) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1010) CFA_SP SP+-2
          CFI (cfiCond1010) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1011 Using cfiCommon0
          CFI (cfiCond1011) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1011) Conditional ??CrossCallReturnLabel_459
          CFI (cfiCond1011) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1011) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1011) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1011) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1011) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1011) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1011) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1011) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1011) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1011) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1011) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1011) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1011) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1011) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1011) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1011) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1011) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1011) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1011) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1011) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1011) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1011) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1011) CFA_SP SP+-2
          CFI (cfiCond1011) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1012 Using cfiCommon0
          CFI (cfiCond1012) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1012) Conditional ??CrossCallReturnLabel_460
          CFI (cfiCond1012) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1012) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1012) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1012) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1012) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1012) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1012) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1012) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1012) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1012) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1012) CFA_SP SP+-2
          CFI (cfiCond1012) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1013 Using cfiCommon0
          CFI (cfiCond1013) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1013) Conditional ??CrossCallReturnLabel_461
          CFI (cfiCond1013) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1013) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1013) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1013) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1013) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1013) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1013) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1013) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1013) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1013) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1013) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1013) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1013) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1013) CFA_SP SP+-2
          CFI (cfiCond1013) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1014 Using cfiCommon0
          CFI (cfiCond1014) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond1014) Conditional ??CrossCallReturnLabel_462
          CFI (cfiCond1014) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1014) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1014) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1014) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1014) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1014) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1014) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1014) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1014) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1014) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1014) CFA_SP SP+-2
          CFI (cfiCond1014) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1015 Using cfiCommon0
          CFI (cfiCond1015) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1015) Conditional ??CrossCallReturnLabel_463
          CFI (cfiCond1015) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1015) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1015) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1015) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1015) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1015) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1015) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1015) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1015) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1015) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1015) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1015) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1015) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1015) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1015) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1015) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1015) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1015) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1015) CFA_SP SP+-2
          CFI (cfiCond1015) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1016 Using cfiCommon0
          CFI (cfiCond1016) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1016) Conditional ??CrossCallReturnLabel_464
          CFI (cfiCond1016) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1016) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1016) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1016) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1016) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1016) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1016) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1016) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1016) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1016) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1016) CFA_SP SP+-2
          CFI (cfiCond1016) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1017 Using cfiCommon0
          CFI (cfiCond1017) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1017) Conditional ??CrossCallReturnLabel_465
          CFI (cfiCond1017) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1017) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1017) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1017) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1017) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1017) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1017) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1017) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1017) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1017) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1017) CFA_SP SP+-2
          CFI (cfiCond1017) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1018 Using cfiCommon0
          CFI (cfiCond1018) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1018) Conditional ??CrossCallReturnLabel_466
          CFI (cfiCond1018) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1018) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1018) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1018) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1018) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1018) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1018) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1018) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1018) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1018) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1018) CFA_SP SP+-2
          CFI (cfiCond1018) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker1019 Using cfiCommon1
          CFI (cfiPicker1019) NoFunction
          CFI (cfiPicker1019) Picker
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_484:
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1003
          CFI EndBlock cfiCond1004
          CFI EndBlock cfiCond1005
          CFI EndBlock cfiCond1006
          CFI EndBlock cfiCond1007
          CFI EndBlock cfiCond1008
          CFI EndBlock cfiCond1009
          CFI EndBlock cfiCond1010
          CFI EndBlock cfiCond1011
          CFI EndBlock cfiCond1012
          CFI EndBlock cfiCond1013
          CFI EndBlock cfiCond1014
          CFI EndBlock cfiCond1015
          CFI EndBlock cfiCond1016
          CFI EndBlock cfiCond1017
          CFI EndBlock cfiCond1018
          CFI EndBlock cfiPicker1019

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond1020 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_469
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1021 Using cfiCommon0
          CFI (cfiCond1021) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1021) Conditional ??CrossCallReturnLabel_470
          CFI (cfiCond1021) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1021) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1021) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1021) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1021) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1021) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1021) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1021) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1021) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1021) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1021) CFA_SP SP+-2
          CFI (cfiCond1021) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1022 Using cfiCommon1
          CFI (cfiPicker1022) NoFunction
          CFI (cfiPicker1022) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
          CFI EndBlock cfiCond1020
          CFI EndBlock cfiCond1021
          CFI EndBlock cfiPicker1022
        REQUIRE ??Subroutine202_0
        ; // Fall through to label ??Subroutine202_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine202_0:
          CFI Block cfiCond1023 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_468
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1024 Using cfiCommon0
          CFI (cfiCond1024) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1024) Conditional ??CrossCallReturnLabel_469
          CFI (cfiCond1024) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1024) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1024) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1024) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1024) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1024) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1024) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1024) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1024) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1024) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1024) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1024) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1024) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1024) CFA_SP SP+-2
          CFI (cfiCond1024) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1025 Using cfiCommon0
          CFI (cfiCond1025) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1025) Conditional ??CrossCallReturnLabel_470
          CFI (cfiCond1025) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1025) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1025) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1025) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1025) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1025) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1025) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1025) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1025) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1025) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1025) CFA_SP SP+-2
          CFI (cfiCond1025) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1026 Using cfiCommon1
          CFI (cfiPicker1026) NoFunction
          CFI (cfiPicker1026) Picker
        MOV     R2,A
          CFI EndBlock cfiCond1023
          CFI EndBlock cfiCond1024
          CFI EndBlock cfiCond1025
          CFI EndBlock cfiPicker1026
        REQUIRE ??Subroutine203_0
        ; // Fall through to label ??Subroutine203_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine203_0:
          CFI Block cfiCond1027 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_467
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1028 Using cfiCommon0
          CFI (cfiCond1028) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1028) Conditional ??CrossCallReturnLabel_468
          CFI (cfiCond1028) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1028) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1028) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1028) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1028) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1028) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1028) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1028) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1028) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1028) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1028) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1028) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1028) CFA_SP SP+-2
          CFI (cfiCond1028) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1029 Using cfiCommon0
          CFI (cfiCond1029) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1029) Conditional ??CrossCallReturnLabel_469
          CFI (cfiCond1029) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1029) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1029) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1029) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1029) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1029) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1029) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1029) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1029) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1029) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1029) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1029) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1029) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1029) CFA_SP SP+-2
          CFI (cfiCond1029) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1030 Using cfiCommon0
          CFI (cfiCond1030) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1030) Conditional ??CrossCallReturnLabel_470
          CFI (cfiCond1030) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1030) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1030) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1030) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1030) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1030) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1030) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1030) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1030) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1030) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1030) CFA_SP SP+-2
          CFI (cfiCond1030) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1031 Using cfiCommon1
          CFI (cfiPicker1031) NoFunction
          CFI (cfiPicker1031) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     DPL,R4
        MOV     DPH,R5
        RET
          CFI EndBlock cfiCond1027
          CFI EndBlock cfiCond1028
          CFI EndBlock cfiCond1029
          CFI EndBlock cfiCond1030
          CFI EndBlock cfiPicker1031

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond1032 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1033 Using cfiCommon0
          CFI (cfiCond1033) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1033) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond1033) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1033) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1033) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1033) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1033) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1033) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1033) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1033) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1033) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1033) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1033) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1033) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1033) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1033) CFA_SP SP+-2
          CFI (cfiCond1033) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker1034 Using cfiCommon1
          CFI (cfiPicker1034) NoFunction
          CFI (cfiPicker1034) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R4
        ADD     A,R0
        CLR     A
        ADDC    A,R1
        MOV     R5,A
        MOV     A,R2
        ADD     A,0xE0 /* A   */
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        RET
          CFI EndBlock cfiCond1032
          CFI EndBlock cfiCond1033
          CFI EndBlock cfiPicker1034

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond1035 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_471
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1036 Using cfiCommon0
          CFI (cfiCond1036) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1036) Conditional ??CrossCallReturnLabel_472
          CFI (cfiCond1036) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1036) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1036) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1036) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1036) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1036) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1036) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1036) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1036) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1036) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1036) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1036) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1036) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1036) CFA_SP SP+-2
          CFI (cfiCond1036) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker1037 Using cfiCommon1
          CFI (cfiPicker1037) NoFunction
          CFI (cfiPicker1037) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R3,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     DPL,R3
        MOV     DPH,A
        MOV     A,R4
          CFI EndBlock cfiCond1035
          CFI EndBlock cfiCond1036
          CFI EndBlock cfiPicker1037
        REQUIRE ??Subroutine204_0
        ; // Fall through to label ??Subroutine204_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine204_0:
          CFI Block cfiCond1038 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_473
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1039 Using cfiCommon0
          CFI (cfiCond1039) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1039) Conditional ??CrossCallReturnLabel_474
          CFI (cfiCond1039) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1039) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1039) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1039) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1039) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1039) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1039) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1039) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1039) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1039) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1039) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1039) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1039) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1039) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1039) CFA_SP SP+-2
          CFI (cfiCond1039) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1040 Using cfiCommon0
          CFI (cfiCond1040) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1040) Conditional ??CrossCallReturnLabel_471
          CFI (cfiCond1040) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1040) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1040) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1040) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1040) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1040) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1040) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1040) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1040) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1040) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1040) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1040) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1040) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1040) CFA_SP SP+-2
          CFI (cfiCond1040) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1041 Using cfiCommon0
          CFI (cfiCond1041) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1041) Conditional ??CrossCallReturnLabel_472
          CFI (cfiCond1041) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1041) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1041) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1041) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1041) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1041) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1041) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1041) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1041) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1041) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1041) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1041) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1041) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1041) CFA_SP SP+-2
          CFI (cfiCond1041) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker1042 Using cfiCommon1
          CFI (cfiPicker1042) NoFunction
          CFI (cfiPicker1042) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        RET
          CFI EndBlock cfiCond1038
          CFI EndBlock cfiCond1039
          CFI EndBlock cfiCond1040
          CFI EndBlock cfiCond1041
          CFI EndBlock cfiPicker1042

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond1043 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1044 Using cfiCommon0
          CFI (cfiCond1044) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1044) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond1044) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1044) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1044) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1044) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1044) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1044) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1044) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1044) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1044) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1044) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1044) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1044) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1044) CFA_SP SP+-2
          CFI (cfiCond1044) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1045 Using cfiCommon0
          CFI (cfiCond1045) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1045) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond1045) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1045) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1045) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1045) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1045) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1045) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1045) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1045) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1045) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1045) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1045) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1045) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1045) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1045) CFA_SP SP+-2
          CFI (cfiCond1045) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1046 Using cfiCommon0
          CFI (cfiCond1046) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1046) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond1046) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1046) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1046) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1046) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1046) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1046) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1046) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1046) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1046) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1046) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1046) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1046) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1046) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1046) CFA_SP SP+-2
          CFI (cfiCond1046) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker1047 Using cfiCommon1
          CFI (cfiPicker1047) NoFunction
          CFI (cfiPicker1047) Picker
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_298:
        ORL     A,R1
        RET
          CFI EndBlock cfiCond1043
          CFI EndBlock cfiCond1044
          CFI EndBlock cfiCond1045
          CFI EndBlock cfiCond1046
          CFI EndBlock cfiPicker1047

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine134:
          CFI Block cfiCond1048 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_296
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1049 Using cfiCommon0
          CFI (cfiCond1049) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond1049) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_297
          CFI (cfiCond1049) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1049) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1049) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1049) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1049) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1049) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1049) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1049) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1049) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1049) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1049) CFA_SP SP+-4
          CFI (cfiCond1049) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1050 Using cfiCommon0
          CFI (cfiCond1050) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1050) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_285
          CFI (cfiCond1050) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1050) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1050) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1050) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1050) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1050) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1050) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1050) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1050) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1050) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1050) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1050) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1050) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1050) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1050) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1050) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1050) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1050) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1050) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1050) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1050) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1050) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1050) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1050) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1050) CFA_SP SP+-4
          CFI (cfiCond1050) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1051 Using cfiCommon0
          CFI (cfiCond1051) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1051) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_286
          CFI (cfiCond1051) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1051) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1051) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1051) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1051) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1051) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1051) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1051) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1051) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1051) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1051) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1051) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1051) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1051) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1051) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1051) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1051) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1051) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1051) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1051) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1051) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1051) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1051) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1051) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1051) CFA_SP SP+-4
          CFI (cfiCond1051) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1052 Using cfiCommon0
          CFI (cfiCond1052) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1052) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_287
          CFI (cfiCond1052) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1052) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1052) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1052) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1052) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1052) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1052) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1052) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1052) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1052) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1052) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1052) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1052) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1052) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1052) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1052) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1052) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1052) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1052) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1052) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1052) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1052) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1052) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1052) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1052) CFA_SP SP+-4
          CFI (cfiCond1052) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1053 Using cfiCommon0
          CFI (cfiCond1053) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1053) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_288
          CFI (cfiCond1053) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1053) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1053) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1053) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1053) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1053) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1053) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1053) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1053) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1053) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1053) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1053) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1053) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1053) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1053) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1053) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1053) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1053) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1053) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1053) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1053) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1053) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1053) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1053) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1053) CFA_SP SP+-4
          CFI (cfiCond1053) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1054 Using cfiCommon0
          CFI (cfiCond1054) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1054) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_289
          CFI (cfiCond1054) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1054) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1054) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1054) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1054) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1054) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1054) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1054) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1054) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1054) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1054) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1054) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1054) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1054) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1054) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1054) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1054) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1054) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1054) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1054) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1054) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1054) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1054) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1054) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1054) CFA_SP SP+-4
          CFI (cfiCond1054) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1055 Using cfiCommon0
          CFI (cfiCond1055) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1055) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_290
          CFI (cfiCond1055) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1055) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1055) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1055) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1055) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1055) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1055) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1055) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1055) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1055) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1055) CFA_SP SP+-4
          CFI (cfiCond1055) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1056 Using cfiCommon0
          CFI (cfiCond1056) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1056) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_291
          CFI (cfiCond1056) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1056) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1056) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1056) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1056) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1056) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1056) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1056) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1056) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1056) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1056) CFA_SP SP+-4
          CFI (cfiCond1056) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1057 Using cfiCommon0
          CFI (cfiCond1057) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1057) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_292
          CFI (cfiCond1057) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1057) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1057) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1057) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1057) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1057) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1057) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1057) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1057) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1057) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1057) CFA_SP SP+-4
          CFI (cfiCond1057) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1058 Using cfiCommon0
          CFI (cfiCond1058) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1058) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_293
          CFI (cfiCond1058) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1058) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1058) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1058) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1058) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1058) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1058) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1058) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1058) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1058) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1058) CFA_SP SP+-4
          CFI (cfiCond1058) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1059 Using cfiCommon0
          CFI (cfiCond1059) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1059) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_294
          CFI (cfiCond1059) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1059) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1059) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1059) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1059) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1059) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1059) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1059) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1059) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1059) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1059) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1059) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1059) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1059) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1059) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1059) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1059) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1059) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1059) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1059) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1059) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1059) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1059) CFA_SP SP+-4
          CFI (cfiCond1059) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1060 Using cfiCommon0
          CFI (cfiCond1060) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1060) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_295
          CFI (cfiCond1060) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1060) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1060) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1060) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1060) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1060) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1060) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1060) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1060) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1060) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1060) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1060) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1060) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1060) CFA_SP SP+-4
          CFI (cfiCond1060) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1061 Using cfiCommon0
          CFI (cfiCond1061) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1061) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_0
          CFI (cfiCond1061) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1061) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1061) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1061) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1061) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1061) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1061) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1061) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1061) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1061) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1061) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1061) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1061) CFA_SP SP+-4
          CFI (cfiCond1061) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1062 Using cfiCommon0
          CFI (cfiCond1062) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1062) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_1
          CFI (cfiCond1062) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1062) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1062) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1062) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1062) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1062) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1062) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1062) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1062) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1062) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1062) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1062) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1062) CFA_SP SP+-4
          CFI (cfiCond1062) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1063 Using cfiCommon0
          CFI (cfiCond1063) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1063) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_2
          CFI (cfiCond1063) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1063) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1063) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1063) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1063) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1063) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1063) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1063) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1063) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1063) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1063) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1063) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1063) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1063) CFA_SP SP+-4
          CFI (cfiCond1063) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1064 Using cfiCommon0
          CFI (cfiCond1064) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1064) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_3
          CFI (cfiCond1064) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1064) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1064) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1064) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1064) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1064) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1064) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1064) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1064) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1064) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1064) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1064) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1064) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1064) CFA_SP SP+-4
          CFI (cfiCond1064) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1065 Using cfiCommon0
          CFI (cfiCond1065) Function ZDO_UpdateNwkStatus
          CFI (cfiCond1065) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_139
          CFI (cfiCond1065) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1065) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1065) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1065) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1065) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1065) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1065) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1065) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1065) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1065) CFA_SP SP+-4
          CFI (cfiCond1065) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1066 Using cfiCommon0
          CFI (cfiCond1066) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1066) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_140
          CFI (cfiCond1066) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1066) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1066) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1066) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1066) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1066) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1066) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1066) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1066) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1066) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1066) CFA_SP SP+-4
          CFI (cfiCond1066) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1067 Using cfiCommon1
          CFI (cfiPicker1067) NoFunction
          CFI (cfiPicker1067) Picker
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_355:
        MOV     A,R0
        RET
          CFI EndBlock cfiCond1048
          CFI EndBlock cfiCond1049
          CFI EndBlock cfiCond1050
          CFI EndBlock cfiCond1051
          CFI EndBlock cfiCond1052
          CFI EndBlock cfiCond1053
          CFI EndBlock cfiCond1054
          CFI EndBlock cfiCond1055
          CFI EndBlock cfiCond1056
          CFI EndBlock cfiCond1057
          CFI EndBlock cfiCond1058
          CFI EndBlock cfiCond1059
          CFI EndBlock cfiCond1060
          CFI EndBlock cfiCond1061
          CFI EndBlock cfiCond1062
          CFI EndBlock cfiCond1063
          CFI EndBlock cfiCond1064
          CFI EndBlock cfiCond1065
          CFI EndBlock cfiCond1066
          CFI EndBlock cfiPicker1067
// 3270 
// 3271 /*********************************************************************
// 3272  * @fn          ZDO_ParseDeviceAnnce
// 3273  *
// 3274  * @brief       Parse a Device Announce message.
// 3275  *
// 3276  * @param       inMsg - Incoming message
// 3277  * @param       pAnnce - place to put the parsed information
// 3278  *
// 3279  * @return      none
// 3280  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3281 void ZDO_ParseDeviceAnnce( zdoIncomingMsg_t *inMsg, ZDO_DeviceAnnce_t *pAnnce )
ZDO_ParseDeviceAnnce:
          CFI Block cfiBlock1068 Using cfiCommon0
          CFI Function ZDO_ParseDeviceAnnce
        CODE
// 3282 {
        FUNCALL ZDO_ParseDeviceAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0,R4
        MOV     ?V1,R5
// 3283   uint8 *msg;
// 3284 
// 3285   // Parse incoming message
// 3286   msg = inMsg->asdu;
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_147:
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_140:
        MOV     R7,A
// 3287   pAnnce->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_470:
        LCALL   ??Subroutine192_0 & 0xFFFF
// 3288   msg += 2;
??CrossCallReturnLabel_403:
        JNC     ??ZDO_ParseDeviceAnnce_0
        INC     R7
// 3289   osal_cpyExtAddr( pAnnce->extAddr, msg );
??ZDO_ParseDeviceAnnce_0:
        ; Setup parameters for call to function sAddrExtCpy
        LCALL   ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_314:
        ADDC    A,?V1
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay  ; Banked call to: sAddrExtCpy
// 3290   msg += Z_EXTADDR_LEN;
// 3291   pAnnce->capabilities = *msg;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_107:
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3292 }
        LJMP    ??Subroutine161_0 & 0xFFFF
          CFI EndBlock cfiBlock1068

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond1069 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_145
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1070 Using cfiCommon0
          CFI (cfiCond1070) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1070) Conditional ??CrossCallReturnLabel_146
          CFI (cfiCond1070) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1070) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1070) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1070) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1070) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1070) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1070) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1070) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1070) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1070) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1070) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1070) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1070) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1070) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1070) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1070) CFA_SP SP+-2
          CFI (cfiCond1070) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1071 Using cfiCommon0
          CFI (cfiCond1071) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1071) Conditional ??CrossCallReturnLabel_147
          CFI (cfiCond1071) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1071) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1071) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1071) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1071) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1071) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1071) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1071) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1071) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1071) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1071) CFA_SP SP+-2
          CFI (cfiCond1071) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1072 Using cfiCommon0
          CFI (cfiCond1072) Function ZDO_ParseEndDeviceTimeoutRsp
          CFI (cfiCond1072) Conditional ??CrossCallReturnLabel_148
          CFI (cfiCond1072) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1072) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1072) CFA_SP SP+-7
          CFI Block cfiPicker1073 Using cfiCommon1
          CFI (cfiPicker1073) NoFunction
          CFI (cfiPicker1073) Picker
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_383:
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond1069
          CFI EndBlock cfiCond1070
          CFI EndBlock cfiCond1071
          CFI EndBlock cfiCond1072
          CFI EndBlock cfiPicker1073

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond1074 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_139
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1075 Using cfiCommon0
          CFI (cfiCond1075) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1075) Conditional ??CrossCallReturnLabel_140
          CFI (cfiCond1075) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1075) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1075) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1075) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1075) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1075) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1075) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1075) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1075) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1075) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1075) CFA_SP SP+-2
          CFI (cfiCond1075) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1076 Using cfiCommon1
          CFI (cfiPicker1076) NoFunction
          CFI (cfiPicker1076) Picker
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_299:
        MOV     R6,A
        MOV     A,R1
        RET
          CFI EndBlock cfiCond1074
          CFI EndBlock cfiCond1075
          CFI EndBlock cfiPicker1076

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond1077 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_106
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1078 Using cfiCommon0
          CFI (cfiCond1078) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1078) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond1078) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1078) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1078) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1078) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1078) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1078) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1078) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1078) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1078) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1078) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1078) CFA_SP SP+-2
          CFI (cfiCond1078) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1079 Using cfiCommon1
          CFI (cfiPicker1079) NoFunction
          CFI (cfiPicker1079) Picker
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_215:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1077
          CFI EndBlock cfiCond1078
          CFI EndBlock cfiPicker1079
// 3293 
// 3294 /*********************************************************************
// 3295  * @fn          ZDO_ParseMgmtNwkUpdateNotify
// 3296  *
// 3297  * @brief       This function handles parsing of the incoming Management
// 3298  *              Network Update notify.
// 3299  *
// 3300  * @param       inMsg - incoming message (request)
// 3301  *
// 3302  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3303  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3304  *          by the calling function [osal_mem_free()].
// 3305  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3306 ZDO_MgmtNwkUpdateNotify_t *ZDO_ParseMgmtNwkUpdateNotify( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtNwkUpdateNotify:
          CFI Block cfiBlock1080 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
        CODE
// 3307 {
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
// 3308   uint8 status;
// 3309   uint32 scannedChannels = 0;
        MOV     ?V4,#0x0
        MOV     ?V5,#0x0
        MOV     ?V6,#0x0
        MOV     ?V7,#0x0
// 3310   uint16 totalTransmissions = 0;
        MOV     ?V0,#0x0
        MOV     ?V1,#0x0
// 3311   uint16 transmissionFailures = 0;
        MOV     ?V2,#0x0
        MOV     ?V3,#0x0
// 3312   uint8 listCount = 0;
        MOV     ?V11,#0x0
// 3313   uint8 *msg = inMsg->asdu;
        LCALL   ?Subroutine55 & 0xFFFF
// 3314   ZDO_MgmtNwkUpdateNotify_t *pRsp;
// 3315 
// 3316   status = *msg++;
??CrossCallReturnLabel_438:
        MOV     ?V10,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 3317   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtNwkUpdateNotify_0
// 3318   {
// 3319     scannedChannels = osal_build_uint32( msg, 4 );
        ; Setup parameters for call to function osal_build_uint32
        MOV     R1,#0x4
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_build_uint32?relay; Banked call to: osal_build_uint32
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     ?V6,R4
        MOV     ?V7,R5
// 3320     msg += 4;
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtNwkUpdateNotify_1
        INC     R7
// 3321     totalTransmissions = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtNwkUpdateNotify_1:
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_476:
        MOV     ?V0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V1,A
// 3322     msg += 2;
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtNwkUpdateNotify_2
        INC     R7
// 3323     transmissionFailures = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtNwkUpdateNotify_2:
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_477:
        MOV     ?V2,A
        CLR     A
        ADDC    A,R1
        MOV     ?V3,A
// 3324     msg += 2;
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtNwkUpdateNotify_3
        INC     R7
// 3325     listCount = *msg++;
??ZDO_ParseMgmtNwkUpdateNotify_3:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V11,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
// 3326   }
// 3327 
// 3328   pRsp = (ZDO_MgmtNwkUpdateNotify_t *)osal_mem_alloc( sizeof ( ZDO_MgmtNwkUpdateNotify_t ) + listCount );
??ZDO_ParseMgmtNwkUpdateNotify_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V11
        ADD     A,#0xa
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay; Banked call to: osal_mem_alloc
        MOV     ?V8,R2
        MOV     ?V9,R3
// 3329 
// 3330   if ( pRsp )
        MOV     A,R2
        ORL     A,?V9
        JZ      ??ZDO_ParseMgmtNwkUpdateNotify_4
// 3331   {
// 3332     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V10
        MOVX    @DPTR,A
// 3333     pRsp->scannedChannels = scannedChannels;
        INC     DPTR
        MOV     R0,#?V4
        LCALL   ?L_MOV_TO_X
// 3334     pRsp->totalTransmissions = totalTransmissions;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V1
        LCALL   ?Subroutine22 & 0xFFFF
// 3335     pRsp->transmissionFailures = transmissionFailures;
??CrossCallReturnLabel_28:
        MOV     A,?V2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V3
        LCALL   ?Subroutine22 & 0xFFFF
// 3336     pRsp->listCount = listCount;
??CrossCallReturnLabel_29:
        INC     DPTR
        INC     DPTR
        MOV     A,?V11
        MOVX    @DPTR,A
// 3337 
// 3338     // Allocate a buffer big enough to handle the list.
// 3339     if ( listCount > 0 )
        JZ      ??ZDO_ParseMgmtNwkUpdateNotify_4
// 3340     {
// 3341       osal_memcpy( pRsp->energyValues, msg, listCount );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0,R6
        MOV     ?V1,R7
        MOV     ?V2,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R4,?V11
        MOV     R5,#0x0
        MOV     A,R2
        ADD     A,#0xa
        MOV     R2,A
        CLR     A
        ADDC    A,?V9
        MOV     R3,A
        LCALL   ??osal_memcpy?relay  ; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
// 3342     }
// 3343   }
// 3344 
// 3345   return ( pRsp );
??ZDO_ParseMgmtNwkUpdateNotify_4:
        MOV     R2,?V8
        MOV     R3,?V9
        LJMP    ?Subroutine6 & 0xFFFF
          CFI EndBlock cfiBlock1080
// 3346 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond1081 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_476
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1082 Using cfiCommon0
          CFI (cfiCond1082) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1082) Conditional ??CrossCallReturnLabel_477
          CFI (cfiCond1082) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1082) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1082) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1082) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1082) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1082) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1082) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1082) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1082) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1082) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1082) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1082) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1082) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1082) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1082) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1082) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1082) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1082) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1082) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1082) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1082) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1082) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1082) CFA_SP SP+-2
          CFI (cfiCond1082) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1083 Using cfiCommon1
          CFI (cfiPicker1083) NoFunction
          CFI (cfiPicker1083) Picker
        MOV     DPL,R6
        MOV     DPH,R7
          CFI EndBlock cfiCond1081
          CFI EndBlock cfiCond1082
          CFI EndBlock cfiPicker1083
        REQUIRE ??Subroutine205_0
        ; // Fall through to label ??Subroutine205_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine205_0:
          CFI Block cfiCond1084 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_475
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1085 Using cfiCommon0
          CFI (cfiCond1085) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1085) Conditional ??CrossCallReturnLabel_476
          CFI (cfiCond1085) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1085) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1085) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1085) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1085) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1085) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1085) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1085) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1085) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1085) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1085) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1085) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1085) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1085) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1085) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1085) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1085) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1085) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1085) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1085) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1085) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1085) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1085) CFA_SP SP+-2
          CFI (cfiCond1085) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1086 Using cfiCommon0
          CFI (cfiCond1086) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1086) Conditional ??CrossCallReturnLabel_477
          CFI (cfiCond1086) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1086) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1086) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1086) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1086) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1086) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1086) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1086) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1086) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1086) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1086) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1086) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1086) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1086) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1086) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1086) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1086) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1086) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1086) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1086) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1086) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1086) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1086) CFA_SP SP+-2
          CFI (cfiCond1086) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1087 Using cfiCommon1
          CFI (cfiPicker1087) NoFunction
          CFI (cfiPicker1087) Picker
        LCALL   ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_479:
        RET
          CFI EndBlock cfiCond1084
          CFI EndBlock cfiCond1085
          CFI EndBlock cfiCond1086
          CFI EndBlock cfiPicker1087

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine154:
          CFI Block cfiCond1088 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1089 Using cfiCommon0
          CFI (cfiCond1089) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1089) Conditional ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_95
          CFI (cfiCond1089) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1089) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1089) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1089) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1089) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1089) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1089) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1089) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1089) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1089) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1089) CFA_SP SP+-6
          CFI (cfiCond1089) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1090 Using cfiCommon0
          CFI (cfiCond1090) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1090) Conditional ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_100
          CFI (cfiCond1090) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1090) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1090) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1090) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1090) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1090) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1090) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1090) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1090) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1090) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1090) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1090) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1090) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1090) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1090) CFA_SP SP+-6
          CFI (cfiCond1090) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1091 Using cfiCommon0
          CFI (cfiCond1091) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1091) Conditional ??CrossCallReturnLabel_478, ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_101
          CFI (cfiCond1091) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1091) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1091) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1091) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1091) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1091) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1091) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1091) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1091) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1091) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1091) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1091) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1091) CFA_SP SP+-6
          CFI (cfiCond1091) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1092 Using cfiCommon0
          CFI (cfiCond1092) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1092) Conditional ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_476
          CFI (cfiCond1092) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1092) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1092) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1092) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1092) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1092) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1092) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1092) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1092) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1092) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1092) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1092) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1092) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1092) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1092) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1092) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1092) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1092) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1092) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1092) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1092) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1092) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1092) CFA_SP SP+-4
          CFI (cfiCond1092) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1093 Using cfiCommon0
          CFI (cfiCond1093) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1093) Conditional ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_477
          CFI (cfiCond1093) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1093) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1093) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1093) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1093) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1093) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1093) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1093) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1093) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1093) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1093) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1093) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1093) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1093) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1093) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1093) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1093) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1093) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1093) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1093) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1093) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1093) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1093) CFA_SP SP+-4
          CFI (cfiCond1093) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1094 Using cfiCommon0
          CFI (cfiCond1094) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1094) Conditional ??CrossCallReturnLabel_479, ??CrossCallReturnLabel_475
          CFI (cfiCond1094) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1094) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1094) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1094) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1094) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1094) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1094) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1094) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1094) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1094) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1094) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1094) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1094) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1094) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1094) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1094) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1094) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1094) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1094) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1094) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1094) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1094) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1094) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1094) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1094) CFA_SP SP+-4
          CFI (cfiCond1094) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker1095 Using cfiCommon1
          CFI (cfiPicker1095) NoFunction
          CFI (cfiPicker1095) Picker
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_485:
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R2
        ADD     A,R0
        RET
          CFI EndBlock cfiCond1088
          CFI EndBlock cfiCond1089
          CFI EndBlock cfiCond1090
          CFI EndBlock cfiCond1091
          CFI EndBlock cfiCond1092
          CFI EndBlock cfiCond1093
          CFI EndBlock cfiCond1094
          CFI EndBlock cfiPicker1095

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond1096 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_27
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1097 Using cfiCommon0
          CFI (cfiCond1097) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1097) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond1097) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1097) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1097) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1097) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1097) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1097) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1097) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1097) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1097) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1097) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1097) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1097) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1097) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1097) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1097) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1097) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1097) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1097) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1097) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1097) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1097) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1097) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1097) CFA_SP SP+-2
          CFI (cfiCond1097) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1098 Using cfiCommon0
          CFI (cfiCond1098) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1098) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond1098) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1098) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1098) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1098) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1098) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1098) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1098) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1098) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1098) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1098) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1098) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1098) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1098) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1098) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1098) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1098) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1098) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1098) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1098) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1098) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1098) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1098) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1098) CFA_SP SP+-2
          CFI (cfiCond1098) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1099 Using cfiCommon1
          CFI (cfiPicker1099) NoFunction
          CFI (cfiPicker1099) Picker
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_207:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1096
          CFI EndBlock cfiCond1097
          CFI EndBlock cfiCond1098
          CFI EndBlock cfiPicker1099
// 3347 
// 3348 /*********************************************************************
// 3349  * @fn          ZDO_ParseMgmtNwkUpdateReq
// 3350  *
// 3351  * @brief       This function handles parsing the incoming Management
// 3352  *              Network Update request and starts the request (if needed).
// 3353  *
// 3354  * @param       inMsg - incoming message (request)
// 3355  * @param       pReq - pointer to place to parse message to
// 3356  *
// 3357  * @return      none
// 3358  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3359 void ZDO_ParseMgmtNwkUpdateReq( zdoIncomingMsg_t *inMsg, ZDO_MgmtNwkUpdateReq_t *pReq )
ZDO_ParseMgmtNwkUpdateReq:
          CFI Block cfiBlock1100 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
        CODE
// 3360 {
        FUNCALL ZDO_ParseMgmtNwkUpdateReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine89 & 0xFFFF
// 3361   uint8 *msg = inMsg->asdu;
??CrossCallReturnLabel_378:
        LCALL   ?Subroutine70 & 0xFFFF
// 3362 
// 3363   pReq->channelMask = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_117:
        LCALL   ??osal_build_uint32?relay; Banked call to: osal_build_uint32
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?XSTORE_R0123
// 3364   msg += 4;
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        JNC     ??ZDO_ParseMgmtNwkUpdateReq_0
        INC     R7
// 3365   pReq->scanDuration = *msg++;
??ZDO_ParseMgmtNwkUpdateReq_0:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?Subroutine28 & 0xFFFF
// 3366 
// 3367   if ( pReq->scanDuration <= 0x05 )
??CrossCallReturnLabel_442:
        CLR     C
        SUBB    A,#0x6
        JNC     ??ZDO_ParseMgmtNwkUpdateReq_1
// 3368   {
// 3369     // Request is to scan over channelMask
// 3370     pReq->scanCount = *msg;
        LCALL   ?Subroutine152 & 0xFFFF
// 3371   }
??CrossCallReturnLabel_239:
        SJMP    ??ZDO_ParseMgmtNwkUpdateReq_2
// 3372   else if ( ( pReq->scanDuration == 0xFE ) || ( pReq->scanDuration == 0xFF ) )
??ZDO_ParseMgmtNwkUpdateReq_1:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0xfe
        JZ      ??ZDO_ParseMgmtNwkUpdateReq_3
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDO_ParseMgmtNwkUpdateReq_4
// 3373   {
// 3374     // Request is to change Channel (0xFE) or apsChannelMask and NwkManagerAddr (0xFF)
// 3375     pReq->nwkUpdateId = *msg++;
??ZDO_ParseMgmtNwkUpdateReq_3:
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_111:
        LCALL   ?Subroutine39 & 0xFFFF
// 3376 
// 3377     if ( pReq->scanDuration == 0xFF )
??CrossCallReturnLabel_60:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDO_ParseMgmtNwkUpdateReq_4
// 3378     {
// 3379       pReq->nwkManagerAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine62 & 0xFFFF
// 3380     }
// 3381   }
??CrossCallReturnLabel_105:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??ZDO_ParseMgmtNwkUpdateReq_2:
        MOVX    @DPTR,A
// 3382 }
??ZDO_ParseMgmtNwkUpdateReq_4:
        LJMP    ??Subroutine161_0 & 0xFFFF
          CFI EndBlock cfiBlock1100

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond1101 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_116
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1102 Using cfiCommon0
          CFI (cfiCond1102) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1102) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond1102) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1102) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1102) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1102) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1102) CFA_SP SP+-2
          CFI (cfiCond1102) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1103 Using cfiCommon1
          CFI (cfiPicker1103) NoFunction
          CFI (cfiPicker1103) Picker
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        ; Setup parameters for call to function osal_build_uint32
        ; Setup parameters for call to function osal_build_uint32
        MOV     R1,#0x4
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1101
          CFI EndBlock cfiCond1102
          CFI EndBlock cfiPicker1103

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond1104 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1105 Using cfiCommon0
          CFI (cfiCond1105) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1105) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond1105) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1105) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1105) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1105) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1105) CFA_SP SP+-2
          CFI (cfiCond1105) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1106 Using cfiCommon1
          CFI (cfiPicker1106) NoFunction
          CFI (cfiPicker1106) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_216:
        RET
          CFI EndBlock cfiCond1104
          CFI EndBlock cfiCond1105
          CFI EndBlock cfiPicker1106

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine130:
          CFI Block cfiCond1107 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_106
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1108 Using cfiCommon0
          CFI (cfiCond1108) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1108) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_107
          CFI (cfiCond1108) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1108) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1108) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1108) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1108) CFA_SP SP+-4
          CFI (cfiCond1108) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1109 Using cfiCommon0
          CFI (cfiCond1109) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1109) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_110
          CFI (cfiCond1109) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1109) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1109) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1109) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1109) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1109) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1109) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1109) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1109) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1109) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1109) CFA_SP SP+-4
          CFI (cfiCond1109) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1110 Using cfiCommon0
          CFI (cfiCond1110) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1110) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_111
          CFI (cfiCond1110) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1110) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1110) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1110) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1110) CFA_SP SP+-4
          CFI (cfiCond1110) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1111 Using cfiCommon1
          CFI (cfiPicker1111) NoFunction
          CFI (cfiPicker1111) Picker
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_240:
        INC     DPTR
        RET
          CFI EndBlock cfiCond1107
          CFI EndBlock cfiCond1108
          CFI EndBlock cfiCond1109
          CFI EndBlock cfiCond1110
          CFI EndBlock cfiPicker1111

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine152:
          CFI Block cfiCond1112 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
          CFI Conditional ??CrossCallReturnLabel_239
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1113 Using cfiCommon0
          CFI (cfiCond1113) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1113) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_106
          CFI (cfiCond1113) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1113) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1113) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1113) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1113) CFA_SP SP+-6
          CFI (cfiCond1113) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1114 Using cfiCommon0
          CFI (cfiCond1114) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1114) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_107
          CFI (cfiCond1114) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1114) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1114) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1114) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1114) CFA_SP SP+-6
          CFI (cfiCond1114) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1115 Using cfiCommon0
          CFI (cfiCond1115) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1115) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_110
          CFI (cfiCond1115) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1115) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1115) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1115) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1115) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1115) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1115) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1115) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1115) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1115) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1115) CFA_SP SP+-6
          CFI (cfiCond1115) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1116 Using cfiCommon0
          CFI (cfiCond1116) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1116) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_111
          CFI (cfiCond1116) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1116) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1116) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1116) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1116) CFA_SP SP+-6
          CFI (cfiCond1116) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1117 Using cfiCommon1
          CFI (cfiPicker1117) NoFunction
          CFI (cfiPicker1117) Picker
        MOVX    A,@DPTR
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1112
          CFI EndBlock cfiCond1113
          CFI EndBlock cfiCond1114
          CFI EndBlock cfiCond1115
          CFI EndBlock cfiCond1116
          CFI EndBlock cfiPicker1117

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond1118 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1119 Using cfiCommon0
          CFI (cfiCond1119) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1119) Conditional ??CrossCallReturnLabel_105
          CFI (cfiCond1119) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1119) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1119) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1119) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1119) CFA_SP SP+-2
          CFI (cfiCond1119) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1120 Using cfiCommon1
          CFI (cfiPicker1120) NoFunction
          CFI (cfiPicker1120) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_218:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1118
          CFI EndBlock cfiCond1119
          CFI EndBlock cfiPicker1120
// 3383 
// 3384 /*********************************************************************
// 3385  * @fn          ZDO_ParseEndDeviceTimeoutRsp
// 3386  *
// 3387  * @brief       Parse the End_Device_Timeout_rsp message.
// 3388  *
// 3389  * @param       inMsg - incoming message.
// 3390  * @param       pRsp - place to put the parsed information.
// 3391  *
// 3392  * @return      none
// 3393  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3394 void ZDO_ParseEndDeviceTimeoutRsp( zdoIncomingMsg_t *inMsg, uint16 *pRsp )
ZDO_ParseEndDeviceTimeoutRsp:
          CFI Block cfiBlock1121 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceTimeoutRsp
        CODE
// 3395 {
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 3396   *pRsp = inMsg->asdu[0];
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_148:
        LCALL   ??Subroutine176_0 & 0xFFFF
??CrossCallReturnLabel_320:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 3397 }
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock1121

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zdpExternalStateTaskID>`:
        DATA16
        DW -1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3e8:
        DD 1000

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_Init?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_StartDevice?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_StartDevice

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zdoSendStateChangeMsg?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zdoSendStateChangeMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_UpdateNwkStatus?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateNwkStatus

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_AnyClusterMatches?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_AnyClusterMatches

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessNodeDescReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessNodeDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessPowerDescReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessPowerDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessSimpleDescReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessSimpleDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessActiveEPReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessActiveEPReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ConvertOTAClusters?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ConvertOTAClusters

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMatchDescReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMatchDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessBindUnbindReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_UpdateAddrManager?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateAddrManager

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessServerDiscReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessServerDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessEndDeviceTimeoutReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessEndDeviceTimeoutReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_EndDeviceTimeoutCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_EndDeviceTimeoutCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtLqiReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLqiReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtNwkDiscReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtRtgReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtRtgReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtBindReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtDirectJoinReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtDirectJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtLeaveReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLeaveReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtPermitJoinReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtPermitJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??NLME_PermitJoiningTimeout?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    NLME_PermitJoiningTimeout

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessUserDescReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessUserDescSet?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessDeviceAnnce?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_BuildSimpleDescBuf?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_BuildSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseEndDeviceBindReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEndDeviceBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseBindUnbindReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseAddrRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseAddrRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseNodeDescRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseNodeDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParsePowerDescRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParsePowerDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseSimpleDescRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseEPListRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEPListRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseServerDiscRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseServerDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmtLqiRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtLqiRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmNwkDiscRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmNwkDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmtRtgRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtRtgRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmtBindRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtBindRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseUserDescRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseUserDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseSimpleDescBuf?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseDeviceAnnce?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmtNwkUpdateNotify?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateNotify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmtNwkUpdateReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseEndDeviceTimeoutRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEndDeviceTimeoutRsp

        END
// 3398 
// 3399 /*********************************************************************
// 3400 *********************************************************************/
// 
// 10 001 bytes in segment BANKED_CODE
//    276 bytes in segment BANK_RELAYS
//      2 bytes in segment XDATA_I
//      2 bytes in segment XDATA_ID
//      4 bytes in segment XDATA_ROM_C
//     61 bytes in segment XDATA_Z
// 
// 10 279 bytes of CODE  memory
//      0 bytes of CONST memory (+ 4 bytes shared)
//     63 bytes of XDATA memory
//
//Errors: none
//Warnings: none
